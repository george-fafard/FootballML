USING LINEAR
params = {'C': 10, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=10, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.58      0.46      0.51        24
           1       0.55      0.67      0.60        24

    accuracy                           0.56        48
   macro avg       0.57      0.56      0.56        48
weighted avg       0.57      0.56      0.56        48

USING LINEAR
params = {'C': 100, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=100, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.57      0.17      0.27        23
           1       0.54      0.88      0.67        25

    accuracy                           0.54        48
   macro avg       0.55      0.53      0.47        48
weighted avg       0.55      0.54      0.48        48

USING LINEAR
params = {'C': 0.1, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=0.1, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.38      0.53      0.44        15
           1       0.74      0.61      0.67        33

    accuracy                           0.58        48
   macro avg       0.56      0.57      0.56        48
weighted avg       0.63      0.58      0.60        48

USING LINEAR
params = {'C': 1, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=1, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.50      0.81      0.62        16
           1       0.86      0.59      0.70        32

    accuracy                           0.67        48
   macro avg       0.68      0.70      0.66        48
weighted avg       0.74      0.67      0.68        48

USING LINEAR
params = {'C': 100, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=100, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.54      0.64      0.58        22
           1       0.64      0.54      0.58        26

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.59      0.58      0.58        48

USING LINEAR
params = {'C': 1000, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=1000, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.61      0.55      0.58        20
           1       0.70      0.75      0.72        28

    accuracy                           0.67        48
   macro avg       0.66      0.65      0.65        48
weighted avg       0.66      0.67      0.66        48

USING LINEAR
params = {'C': 1, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=1, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.32      0.38      0.34        16
           1       0.66      0.59      0.62        32

    accuracy                           0.52        48
   macro avg       0.49      0.48      0.48        48
weighted avg       0.54      0.52      0.53        48

USING LINEAR
params = {'C': 0.1, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=0.1, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.47      0.39      0.42        18
           1       0.67      0.73      0.70        30

    accuracy                           0.60        48
   macro avg       0.57      0.56      0.56        48
weighted avg       0.59      0.60      0.60        48

USING LINEAR
params = {'C': 10, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=10, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.58      0.61      0.59        18
           1       0.76      0.73      0.75        30

    accuracy                           0.69        48
   macro avg       0.67      0.67      0.67        48
weighted avg       0.69      0.69      0.69        48

USING LINEAR
params = {'C': 10, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=10, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.65      0.46      0.54        28
           1       0.46      0.65      0.54        20

    accuracy                           0.54        48
   macro avg       0.56      0.56      0.54        48
weighted avg       0.57      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.67      0.55      0.60        22
           1       0.67      0.77      0.71        26

    accuracy                           0.67        48
   macro avg       0.67      0.66      0.66        48
weighted avg       0.67      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.38      0.47        24
           1       0.56      0.79      0.66        24

    accuracy                           0.58        48
   macro avg       0.60      0.58      0.56        48
weighted avg       0.60      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.44      0.40      0.42        20
           1       0.60      0.64      0.62        28

    accuracy                           0.54        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.31      0.29      0.30        17
           1       0.62      0.65      0.63        31

    accuracy                           0.52        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.51      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.55      0.54        20
           1       0.67      0.64      0.65        28

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.30      0.35        23
           1       0.48      0.60      0.54        25

    accuracy                           0.46        48
   macro avg       0.45      0.45      0.44        48
weighted avg       0.45      0.46      0.45        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.60      0.52      0.56        23
           1       0.61      0.68      0.64        25

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.58      0.54        19
           1       0.69      0.62      0.65        29

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.62      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.42      0.36      0.39        22
           1       0.52      0.58      0.55        26

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.47      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.36      0.43        22
           1       0.58      0.73      0.64        26

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.56      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.46      0.72      0.57        18
           1       0.75      0.50      0.60        30

    accuracy                           0.58        48
   macro avg       0.61      0.61      0.58        48
weighted avg       0.64      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.29      0.36        21
           1       0.58      0.78      0.67        27

    accuracy                           0.56        48
   macro avg       0.54      0.53      0.52        48
weighted avg       0.55      0.56      0.53        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.33      0.42        21
           1       0.61      0.81      0.70        27

    accuracy                           0.60        48
   macro avg       0.60      0.57      0.56        48
weighted avg       0.60      0.60      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.64      0.52      0.57        27
           1       0.50      0.62      0.55        21

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.58      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.59      0.54      0.57        24
           1       0.58      0.62      0.60        24

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.61      0.42      0.50        26
           1       0.50      0.68      0.58        22

    accuracy                           0.54        48
   macro avg       0.56      0.55      0.54        48
weighted avg       0.56      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.41      0.46        22
           1       0.58      0.69      0.63        26

    accuracy                           0.56        48
   macro avg       0.56      0.55      0.55        48
weighted avg       0.56      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.62      0.57      0.59        23
           1       0.63      0.68      0.65        25

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.71      0.53        17
           1       0.75      0.48      0.59        31

    accuracy                           0.56        48
   macro avg       0.59      0.59      0.56        48
weighted avg       0.64      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.61      0.38      0.47        29
           1       0.40      0.63      0.49        19

    accuracy                           0.48        48
   macro avg       0.51      0.51      0.48        48
weighted avg       0.53      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.59      0.52      0.55        25
           1       0.54      0.61      0.57        23

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.67      0.09      0.16        22
           1       0.56      0.96      0.70        26

    accuracy                           0.56        48
   macro avg       0.61      0.53      0.43        48
weighted avg       0.61      0.56      0.45        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.47      0.50        19
           1       0.68      0.72      0.70        29

    accuracy                           0.62        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.63      0.50        19
           1       0.63      0.41      0.50        29

    accuracy                           0.50        48
   macro avg       0.52      0.52      0.50        48
weighted avg       0.55      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.40      0.39        20
           1       0.56      0.54      0.55        28

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.61      0.46      0.52        24
           1       0.57      0.71      0.63        24

    accuracy                           0.58        48
   macro avg       0.59      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.65      0.44      0.52        25
           1       0.55      0.74      0.63        23

    accuracy                           0.58        48
   macro avg       0.60      0.59      0.58        48
weighted avg       0.60      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.30      0.37        23
           1       0.52      0.68      0.59        25

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.48        48
weighted avg       0.49      0.50      0.48        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.21      0.31        24
           1       0.53      0.88      0.66        24

    accuracy                           0.54        48
   macro avg       0.57      0.54      0.48        48
weighted avg       0.58      0.54      0.48        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.42      0.38      0.40        21
           1       0.55      0.59      0.57        27

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.49      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.47      0.41      0.44        22
           1       0.55      0.62      0.58        26

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.70      0.27      0.39        26
           1       0.50      0.86      0.63        22

    accuracy                           0.54        48
   macro avg       0.60      0.57      0.51        48
weighted avg       0.61      0.54      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.43      0.50        23
           1       0.58      0.72      0.64        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.57        48
weighted avg       0.58      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.62      0.57        21
           1       0.65      0.56      0.60        27

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.35      0.60      0.44        15
           1       0.73      0.48      0.58        33

    accuracy                           0.52        48
   macro avg       0.54      0.54      0.51        48
weighted avg       0.61      0.52      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.57      0.59        21
           1       0.68      0.70      0.69        27

    accuracy                           0.65        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.45      0.46        20
           1       0.62      0.64      0.63        28

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.55      0.52        20
           1       0.65      0.61      0.63        28

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.45      0.54        22
           1       0.64      0.81      0.71        26

    accuracy                           0.65        48
   macro avg       0.65      0.63      0.63        48
weighted avg       0.65      0.65      0.63        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.50      0.42      0.45        24
           1       0.50      0.58      0.54        24

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.60      0.11      0.19        27
           1       0.44      0.90      0.59        21

    accuracy                           0.46        48
   macro avg       0.52      0.51      0.39        48
weighted avg       0.53      0.46      0.37        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.53      0.36      0.43        25
           1       0.48      0.65      0.56        23

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.49        48
weighted avg       0.51      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.55      0.52        20
           1       0.65      0.61      0.63        28

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.75      0.44      0.56        27
           1       0.53      0.81      0.64        21

    accuracy                           0.60        48
   macro avg       0.64      0.63      0.60        48
weighted avg       0.65      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.24      0.31        21
           1       0.57      0.78      0.66        27

    accuracy                           0.54        48
   macro avg       0.51      0.51      0.48        48
weighted avg       0.52      0.54      0.51        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.46      0.68      0.55        19
           1       0.70      0.48      0.57        29

    accuracy                           0.56        48
   macro avg       0.58      0.58      0.56        48
weighted avg       0.61      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.45      0.67      0.54        21
           1       0.59      0.37      0.45        27

    accuracy                           0.50        48
   macro avg       0.52      0.52      0.50        48
weighted avg       0.53      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.35      0.41        23
           1       0.53      0.68      0.60        25

    accuracy                           0.52        48
   macro avg       0.52      0.51      0.50        48
weighted avg       0.52      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.61      0.68      0.64        25
           1       0.60      0.52      0.56        23

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.42      0.48        26
           1       0.46      0.59      0.52        22

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.52      0.57      0.55        21
           1       0.64      0.59      0.62        27

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.37      0.35      0.36        20
           1       0.55      0.57      0.56        28

    accuracy                           0.48        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.22      0.32        23
           1       0.55      0.88      0.68        25

    accuracy                           0.56        48
   macro avg       0.59      0.55      0.50        48
weighted avg       0.59      0.56      0.51        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.68      0.50      0.58        26
           1       0.55      0.73      0.63        22

    accuracy                           0.60        48
   macro avg       0.62      0.61      0.60        48
weighted avg       0.62      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.55      0.53        22
           1       0.60      0.58      0.59        26

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.63      0.57      0.60        21
           1       0.69      0.74      0.71        27

    accuracy                           0.67        48
   macro avg       0.66      0.66      0.66        48
weighted avg       0.66      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.48      0.53        25
           1       0.54      0.65      0.59        23

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.42      0.50      0.45        20
           1       0.58      0.50      0.54        28

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.59      0.59      0.59        22
           1       0.65      0.65      0.65        26

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.52      0.51        25
           1       0.45      0.43      0.44        23

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.40      0.56      0.47        18
           1       0.65      0.50      0.57        30

    accuracy                           0.52        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.56      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.41      0.42        22
           1       0.52      0.54      0.53        26

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.50      0.49        18
           1       0.69      0.67      0.68        30

    accuracy                           0.60        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.65      0.63        23
           1       0.65      0.60      0.63        25

    accuracy                           0.62        48
   macro avg       0.63      0.63      0.63        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.43      0.45        21
           1       0.59      0.63      0.61        27

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.53      0.43      0.47        21
           1       0.61      0.70      0.66        27

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.62      0.55        21
           1       0.64      0.52      0.57        27

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.58      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.47      0.50        19
           1       0.68      0.72      0.70        29

    accuracy                           0.62        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.47      0.44        19
           1       0.62      0.55      0.58        29

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.53      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.48      0.52        25
           1       0.52      0.61      0.56        23

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.61      0.55        18
           1       0.73      0.63      0.68        30

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.61        48
weighted avg       0.64      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.72      0.54      0.62        24
           1       0.63      0.79      0.70        24

    accuracy                           0.67        48
   macro avg       0.68      0.67      0.66        48
weighted avg       0.68      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.42      0.59      0.49        17
           1       0.71      0.55      0.62        31

    accuracy                           0.56        48
   macro avg       0.56      0.57      0.55        48
weighted avg       0.61      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.53      0.38      0.44        24
           1       0.52      0.67      0.58        24

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.51        48
weighted avg       0.52      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.52      0.67      0.59        18
           1       0.76      0.63      0.69        30

    accuracy                           0.65        48
   macro avg       0.64      0.65      0.64        48
weighted avg       0.67      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.50      0.48        20
           1       0.62      0.57      0.59        28

    accuracy                           0.54        48
   macro avg       0.53      0.54      0.53        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.35      0.46        23
           1       0.58      0.84      0.69        25

    accuracy                           0.60        48
   macro avg       0.62      0.59      0.57        48
weighted avg       0.62      0.60      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.48      0.49        21
           1       0.61      0.63      0.62        27

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.41      0.63      0.50        19
           1       0.63      0.41      0.50        29

    accuracy                           0.50        48
   macro avg       0.52      0.52      0.50        48
weighted avg       0.55      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.44      0.43        18
           1       0.66      0.63      0.64        30

    accuracy                           0.56        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.53      0.50      0.52        16
           1       0.76      0.78      0.77        32

    accuracy                           0.69        48
   macro avg       0.65      0.64      0.64        48
weighted avg       0.68      0.69      0.68        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.62      0.54      0.58        24
           1       0.59      0.67      0.63        24

    accuracy                           0.60        48
   macro avg       0.61      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.58      0.27      0.37        26
           1       0.47      0.77      0.59        22

    accuracy                           0.50        48
   macro avg       0.53      0.52      0.48        48
weighted avg       0.53      0.50      0.47        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.44      0.60      0.51        20
           1       0.62      0.46      0.53        28

    accuracy                           0.52        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.55      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.32      0.32        19
           1       0.57      0.59      0.58        29

    accuracy                           0.48        48
   macro avg       0.45      0.45      0.45        48
weighted avg       0.47      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.47      0.38      0.42        24
           1       0.48      0.58      0.53        24

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.47        48
weighted avg       0.48      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.43      0.45      0.44        22
           1       0.52      0.50      0.51        26

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.74      0.58      0.65        24
           1       0.66      0.79      0.72        24

    accuracy                           0.69        48
   macro avg       0.70      0.69      0.68        48
weighted avg       0.70      0.69      0.68        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.48      0.58      0.52        19
           1       0.68      0.59      0.63        29

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.60      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.37      0.47      0.41        15
           1       0.72      0.64      0.68        33

    accuracy                           0.58        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.61      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.71      0.40      0.51        25
           1       0.56      0.83      0.67        23

    accuracy                           0.60        48
   macro avg       0.64      0.61      0.59        48
weighted avg       0.64      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.43      0.24      0.31        25
           1       0.44      0.65      0.53        23

    accuracy                           0.44        48
   macro avg       0.43      0.45      0.42        48
weighted avg       0.43      0.44      0.41        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.42      0.45        24
           1       0.50      0.58      0.54        24

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.55      0.52        22
           1       0.58      0.54      0.56        26

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.40      0.42        20
           1       0.60      0.64      0.62        28

    accuracy                           0.54        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.47      0.33      0.39        24
           1       0.48      0.62      0.55        24

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.47        48
weighted avg       0.48      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.38      0.38      0.38        21
           1       0.52      0.52      0.52        27

    accuracy                           0.46        48
   macro avg       0.45      0.45      0.45        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.73      0.64      0.68        25
           1       0.65      0.74      0.69        23

    accuracy                           0.69        48
   macro avg       0.69      0.69      0.69        48
weighted avg       0.69      0.69      0.69        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.41      0.56      0.47        16
           1       0.73      0.59      0.66        32

    accuracy                           0.58        48
   macro avg       0.57      0.58      0.56        48
weighted avg       0.62      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.39      0.36        18
           1       0.59      0.53      0.56        30

    accuracy                           0.48        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.50      0.48      0.49        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.67      0.57      0.62        21
           1       0.70      0.78      0.74        27

    accuracy                           0.69        48
   macro avg       0.68      0.67      0.68        48
weighted avg       0.69      0.69      0.68        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.60      0.33      0.43        27
           1       0.45      0.71      0.56        21

    accuracy                           0.50        48
   macro avg       0.53      0.52      0.49        48
weighted avg       0.54      0.50      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.56      0.42      0.48        24
           1       0.53      0.67      0.59        24

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.54      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.42      0.48        26
           1       0.46      0.59      0.52        22

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.65      0.65        23
           1       0.68      0.68      0.68        25

    accuracy                           0.67        48
   macro avg       0.67      0.67      0.67        48
weighted avg       0.67      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.33      0.37      0.35        19
           1       0.56      0.52      0.54        29

    accuracy                           0.46        48
   macro avg       0.44      0.44      0.44        48
weighted avg       0.47      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.48      0.61      0.54        18
           1       0.72      0.60      0.65        30

    accuracy                           0.60        48
   macro avg       0.60      0.61      0.60        48
weighted avg       0.63      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.55      0.56        22
           1       0.63      0.65      0.64        26

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.55      0.53        22
           1       0.60      0.58      0.59        26

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.52      0.56        23
           1       0.61      0.68      0.64        25

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.53      0.41      0.46        22
           1       0.58      0.69      0.63        26

    accuracy                           0.56        48
   macro avg       0.56      0.55      0.55        48
weighted avg       0.56      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.47      0.47      0.47        19
           1       0.66      0.66      0.66        29

    accuracy                           0.58        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.48      0.55      0.51        20
           1       0.64      0.57      0.60        28

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.55      0.55      0.55        22
           1       0.62      0.62      0.62        26

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.39      0.45      0.42        20
           1       0.56      0.50      0.53        28

    accuracy                           0.48        48
   macro avg       0.48      0.47      0.47        48
weighted avg       0.49      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.67      0.32      0.43        25
           1       0.53      0.83      0.64        23

    accuracy                           0.56        48
   macro avg       0.60      0.57      0.54        48
weighted avg       0.60      0.56      0.53        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.15      0.24        26
           1       0.45      0.82      0.58        22

    accuracy                           0.46        48
   macro avg       0.47      0.49      0.41        48
weighted avg       0.48      0.46      0.39        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.35      0.44        26
           1       0.48      0.73      0.58        22

    accuracy                           0.52        48
   macro avg       0.54      0.54      0.51        48
weighted avg       0.55      0.52      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.54      0.75      0.63        20
           1       0.75      0.54      0.63        28

    accuracy                           0.62        48
   macro avg       0.64      0.64      0.63        48
weighted avg       0.66      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.57      0.60        23
           1       0.64      0.72      0.68        25

    accuracy                           0.65        48
   macro avg       0.65      0.64      0.64        48
weighted avg       0.65      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.62      0.57      0.59        23
           1       0.63      0.68      0.65        25

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.59      0.43      0.50        23
           1       0.58      0.72      0.64        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.57        48
weighted avg       0.58      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.58      0.26      0.36        27
           1       0.44      0.76      0.56        21

    accuracy                           0.48        48
   macro avg       0.51      0.51      0.46        48
weighted avg       0.52      0.48      0.45        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.29      0.33        17
           1       0.66      0.74      0.70        31

    accuracy                           0.58        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.56      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.33      0.20      0.25        20
           1       0.56      0.71      0.63        28

    accuracy                           0.50        48
   macro avg       0.44      0.46      0.44        48
weighted avg       0.46      0.50      0.47        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.62      0.54      0.58        24
           1       0.59      0.67      0.63        24

    accuracy                           0.60        48
   macro avg       0.61      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.57      0.32      0.41        25
           1       0.50      0.74      0.60        23

    accuracy                           0.52        48
   macro avg       0.54      0.53      0.50        48
weighted avg       0.54      0.52      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.64      0.61      0.62        23
           1       0.65      0.68      0.67        25

    accuracy                           0.65        48
   macro avg       0.65      0.64      0.64        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.65      0.42      0.51        26
           1       0.52      0.73      0.60        22

    accuracy                           0.56        48
   macro avg       0.58      0.58      0.56        48
weighted avg       0.59      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.50      0.46        22
           1       0.50      0.42      0.46        26

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.62      0.76      0.68        21
           1       0.77      0.63      0.69        27

    accuracy                           0.69        48
   macro avg       0.69      0.70      0.69        48
weighted avg       0.70      0.69      0.69        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        24
           1       0.50      1.00      0.67        24

    accuracy                           0.50        48
   macro avg       0.25      0.50      0.33        48
weighted avg       0.25      0.50      0.33        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.82      0.39      0.53        23
           1       0.62      0.92      0.74        25

    accuracy                           0.67        48
   macro avg       0.72      0.66      0.64        48
weighted avg       0.72      0.67      0.64        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.57      0.50        21
           1       0.57      0.44      0.50        27

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.52      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.21      0.30        19
           1       0.62      0.86      0.72        29

    accuracy                           0.60        48
   macro avg       0.56      0.54      0.51        48
weighted avg       0.58      0.60      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.39      0.43      0.41        21
           1       0.52      0.48      0.50        27

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.45        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.33      0.65      0.44        17
           1       0.60      0.29      0.39        31

    accuracy                           0.42        48
   macro avg       0.47      0.47      0.42        48
weighted avg       0.51      0.42      0.41        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.55      0.44      0.49        25
           1       0.50      0.61      0.55        23

    accuracy                           0.52        48
   macro avg       0.53      0.52      0.52        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.31      0.29      0.30        17
           1       0.62      0.65      0.63        31

    accuracy                           0.52        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.51      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.37      0.40        19
           1       0.62      0.69      0.66        29

    accuracy                           0.56        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.55      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.50      0.38      0.43        24
           1       0.50      0.62      0.56        24

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.49        48
weighted avg       0.50      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.57      0.57        23
           1       0.60      0.60      0.60        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.45      0.51        22
           1       0.61      0.73      0.67        26

    accuracy                           0.60        48
   macro avg       0.60      0.59      0.59        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.37      0.38        19
           1       0.60      0.62      0.61        29

    accuracy                           0.52        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.50      0.49        22
           1       0.56      0.54      0.55        26

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.67      0.20      0.31        20
           1       0.62      0.93      0.74        28

    accuracy                           0.62        48
   macro avg       0.64      0.56      0.53        48
weighted avg       0.64      0.62      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.43      0.50        21
           1       0.64      0.78      0.70        27

    accuracy                           0.62        48
   macro avg       0.62      0.60      0.60        48
weighted avg       0.62      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.61      0.55        23
           1       0.55      0.44      0.49        25

    accuracy                           0.52        48
   macro avg       0.53      0.52      0.52        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.71      0.57      0.63        21
           1       0.71      0.81      0.76        27

    accuracy                           0.71        48
   macro avg       0.71      0.69      0.70        48
weighted avg       0.71      0.71      0.70        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.52      0.65      0.58        23
           1       0.58      0.44      0.50        25

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.57      0.31      0.40        26
           1       0.47      0.73      0.57        22

    accuracy                           0.50        48
   macro avg       0.52      0.52      0.49        48
weighted avg       0.53      0.50      0.48        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.65      0.75      0.70        20
           1       0.80      0.71      0.75        28

    accuracy                           0.73        48
   macro avg       0.73      0.73      0.73        48
weighted avg       0.74      0.73      0.73        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.43      0.45      0.44        20
           1       0.59      0.57      0.58        28

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.63      0.55      0.59        22
           1       0.66      0.73      0.69        26

    accuracy                           0.65        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.52      0.58      0.55        19
           1       0.70      0.66      0.68        29

    accuracy                           0.62        48
   macro avg       0.61      0.62      0.61        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.50      0.49        24
           1       0.48      0.46      0.47        24

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.43      0.47        21
           1       0.61      0.70      0.66        27

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.44      0.42        18
           1       0.64      0.60      0.62        30

    accuracy                           0.54        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.55      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.48      0.56      0.51        18
           1       0.70      0.63      0.67        30

    accuracy                           0.60        48
   macro avg       0.59      0.59      0.59        48
weighted avg       0.62      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.44      0.63      0.52        19
           1       0.67      0.48      0.56        29

    accuracy                           0.54        48
   macro avg       0.56      0.56      0.54        48
weighted avg       0.58      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.48      0.45      0.47        22
           1       0.56      0.58      0.57        26

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.36      0.39        22
           1       0.52      0.58      0.55        26

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.47      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.56      0.43      0.49        21
           1       0.62      0.74      0.68        27

    accuracy                           0.60        48
   macro avg       0.59      0.58      0.58        48
weighted avg       0.60      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.45      0.76      0.57        17
           1       0.79      0.48      0.60        31

    accuracy                           0.58        48
   macro avg       0.62      0.62      0.58        48
weighted avg       0.67      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.56      0.39      0.46        23
           1       0.56      0.72      0.63        25

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.55        48
weighted avg       0.56      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.41      0.50      0.45        18
           1       0.65      0.57      0.61        30

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.56      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.44      0.48      0.46        23
           1       0.48      0.44      0.46        25

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.42      0.48        24
           1       0.53      0.67      0.59        24

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.54      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.28      0.62      0.38        13
           1       0.74      0.40      0.52        35

    accuracy                           0.46        48
   macro avg       0.51      0.51      0.45        48
weighted avg       0.61      0.46      0.48        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.53      0.29      0.37        28
           1       0.39      0.65      0.49        20

    accuracy                           0.44        48
   macro avg       0.46      0.47      0.43        48
weighted avg       0.48      0.44      0.42        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.62      0.56        24
           1       0.50      0.38      0.43        24

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.49        48
weighted avg       0.50      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.73      0.59        15
           1       0.85      0.67      0.75        33

    accuracy                           0.69        48
   macro avg       0.67      0.70      0.67        48
weighted avg       0.74      0.69      0.70        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.52      0.47        21
           1       0.55      0.44      0.49        27

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.49      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.23      0.33        26
           1       0.47      0.82      0.60        22

    accuracy                           0.50        48
   macro avg       0.54      0.52      0.47        48
weighted avg       0.54      0.50      0.46        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.59      0.58        22
           1       0.64      0.62      0.63        26

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.60      0.16      0.25        19
           1       0.63      0.93      0.75        29

    accuracy                           0.62        48
   macro avg       0.61      0.54      0.50        48
weighted avg       0.62      0.62      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.38      0.36      0.37        22
           1       0.48      0.50      0.49        26

    accuracy                           0.44        48
   macro avg       0.43      0.43      0.43        48
weighted avg       0.44      0.44      0.44        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.26      0.46      0.33        13
           1       0.72      0.51      0.60        35

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.47        48
weighted avg       0.60      0.50      0.53        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.48      0.51        21
           1       0.63      0.70      0.67        27

    accuracy                           0.60        48
   macro avg       0.59      0.59      0.59        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.68      0.68      0.68        22
           1       0.73      0.73      0.73        26

    accuracy                           0.71        48
   macro avg       0.71      0.71      0.71        48
weighted avg       0.71      0.71      0.71        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.60      0.38      0.46        24
           1       0.55      0.75      0.63        24

    accuracy                           0.56        48
   macro avg       0.57      0.56      0.55        48
weighted avg       0.57      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.42      0.42        19
           1       0.62      0.62      0.62        29

    accuracy                           0.54        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.61      0.61      0.61        18
           1       0.77      0.77      0.77        30

    accuracy                           0.71        48
   macro avg       0.69      0.69      0.69        48
weighted avg       0.71      0.71      0.71        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.40      0.47        20
           1       0.65      0.79      0.71        28

    accuracy                           0.62        48
   macro avg       0.61      0.59      0.59        48
weighted avg       0.62      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.56      0.42        18
           1       0.56      0.33      0.42        30

    accuracy                           0.42        48
   macro avg       0.44      0.44      0.42        48
weighted avg       0.47      0.42      0.42        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.53      0.48      0.50        21
           1       0.62      0.67      0.64        27

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.57        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.33      0.41      0.37        17
           1       0.63      0.55      0.59        31

    accuracy                           0.50        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.52      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.37      0.39        19
           1       0.61      0.66      0.63        29

    accuracy                           0.54        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.53      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.50      0.53        24
           1       0.56      0.62      0.59        24

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.38      0.49        26
           1       0.52      0.77      0.62        22

    accuracy                           0.56        48
   macro avg       0.59      0.58      0.55        48
weighted avg       0.60      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.1)
              precision    recall  f1-score   support

           0       0.45      0.41      0.43        22
           1       0.54      0.58      0.56        26

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.55      0.60        22
           1       0.67      0.77      0.71        26

    accuracy                           0.67        48
   macro avg       0.67      0.66      0.66        48
weighted avg       0.67      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.42      0.38      0.40        21
           1       0.55      0.59      0.57        27

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.49      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.78      0.29      0.42        24
           1       0.56      0.92      0.70        24

    accuracy                           0.60        48
   macro avg       0.67      0.60      0.56        48
weighted avg       0.67      0.60      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.44      0.43        18
           1       0.66      0.63      0.64        30

    accuracy                           0.56        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.61      0.50      0.55        22
           1       0.63      0.73      0.68        26

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.47      0.35      0.40        20
           1       0.61      0.71      0.66        28

    accuracy                           0.56        48
   macro avg       0.54      0.53      0.53        48
weighted avg       0.55      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.48      0.50      0.49        20
           1       0.63      0.61      0.62        28

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.38      0.45        24
           1       0.53      0.71      0.61        24

    accuracy                           0.54        48
   macro avg       0.55      0.54      0.53        48
weighted avg       0.55      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.78      0.48      0.60        29
           1       0.50      0.79      0.61        19

    accuracy                           0.60        48
   macro avg       0.64      0.64      0.60        48
weighted avg       0.67      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.52      0.52      0.52        21
           1       0.63      0.63      0.63        27

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.33      0.39      0.36        18
           1       0.59      0.53      0.56        30

    accuracy                           0.48        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.50      0.48      0.49        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.65      0.55        17
           1       0.76      0.61      0.68        31

    accuracy                           0.62        48
   macro avg       0.62      0.63      0.61        48
weighted avg       0.66      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.44      0.63      0.52        19
           1       0.67      0.48      0.56        29

    accuracy                           0.54        48
   macro avg       0.56      0.56      0.54        48
weighted avg       0.58      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.65      0.44      0.52        25
           1       0.55      0.74      0.63        23

    accuracy                           0.58        48
   macro avg       0.60      0.59      0.58        48
weighted avg       0.60      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.60      0.30      0.40        20
           1       0.63      0.86      0.73        28

    accuracy                           0.62        48
   macro avg       0.62      0.58      0.56        48
weighted avg       0.62      0.62      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.46      0.58      0.51        19
           1       0.67      0.55      0.60        29

    accuracy                           0.56        48
   macro avg       0.56      0.57      0.56        48
weighted avg       0.58      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.74      0.69        23
           1       0.73      0.64      0.68        25

    accuracy                           0.69        48
   macro avg       0.69      0.69      0.69        48
weighted avg       0.69      0.69      0.69        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.55      0.47        20
           1       0.57      0.43      0.49        28

    accuracy                           0.48        48
   macro avg       0.49      0.49      0.48        48
weighted avg       0.50      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.46      0.25      0.32        24
           1       0.49      0.71      0.58        24

    accuracy                           0.48        48
   macro avg       0.47      0.48      0.45        48
weighted avg       0.47      0.48      0.45        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.38      0.44      0.41        18
           1       0.63      0.57      0.60        30

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.54      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.47      0.43        17
           1       0.68      0.61      0.64        31

    accuracy                           0.56        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.58      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.52      0.62      0.57        21
           1       0.65      0.56      0.60        27

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.59      0.62        22
           1       0.68      0.73      0.70        26

    accuracy                           0.67        48
   macro avg       0.66      0.66      0.66        48
weighted avg       0.67      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.71      0.63        21
           1       0.71      0.56      0.63        27

    accuracy                           0.62        48
   macro avg       0.63      0.63      0.63        48
weighted avg       0.64      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.67      0.07      0.13        28
           1       0.42      0.95      0.58        20

    accuracy                           0.44        48
   macro avg       0.54      0.51      0.36        48
weighted avg       0.56      0.44      0.32        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.53      0.30      0.38        27
           1       0.42      0.67      0.52        21

    accuracy                           0.46        48
   macro avg       0.48      0.48      0.45        48
weighted avg       0.49      0.46      0.44        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.56      0.48      0.51        21
           1       0.63      0.70      0.67        27

    accuracy                           0.60        48
   macro avg       0.59      0.59      0.59        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.50      0.49        20
           1       0.63      0.61      0.62        28

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.47      0.70      0.56        20
           1       0.67      0.43      0.52        28

    accuracy                           0.54        48
   macro avg       0.57      0.56      0.54        48
weighted avg       0.58      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.50      0.45        20
           1       0.58      0.50      0.54        28

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.75      0.47      0.58        19
           1       0.72      0.90      0.80        29

    accuracy                           0.73        48
   macro avg       0.74      0.69      0.69        48
weighted avg       0.73      0.73      0.71        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.62      0.57        21
           1       0.65      0.56      0.60        27

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.40      0.56      0.47        18
           1       0.65      0.50      0.57        30

    accuracy                           0.52        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.56      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.43      0.49        21
           1       0.62      0.74      0.68        27

    accuracy                           0.60        48
   macro avg       0.59      0.58      0.58        48
weighted avg       0.60      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       1.00      0.12      0.22        24
           1       0.53      1.00      0.70        24

    accuracy                           0.56        48
   macro avg       0.77      0.56      0.46        48
weighted avg       0.77      0.56      0.46        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.30      0.37        23
           1       0.52      0.68      0.59        25

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.48        48
weighted avg       0.49      0.50      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.31      0.40        26
           1       0.47      0.73      0.57        22

    accuracy                           0.50        48
   macro avg       0.52      0.52      0.49        48
weighted avg       0.53      0.50      0.48        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.46      0.27      0.34        22
           1       0.54      0.73      0.62        26

    accuracy                           0.52        48
   macro avg       0.50      0.50      0.48        48
weighted avg       0.51      0.52      0.49        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.60      0.51        20
           1       0.62      0.46      0.53        28

    accuracy                           0.52        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.55      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       1.00      0.04      0.08        25
           1       0.49      1.00      0.66        23

    accuracy                           0.50        48
   macro avg       0.74      0.52      0.37        48
weighted avg       0.76      0.50      0.35        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.50      0.52        22
           1       0.61      0.65      0.63        26

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.47      0.43        17
           1       0.68      0.61      0.64        31

    accuracy                           0.56        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.58      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.47      0.45      0.46        20
           1       0.62      0.64      0.63        28

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.42      0.36      0.39        22
           1       0.52      0.58      0.55        26

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.47      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.45      0.26      0.33        19
           1       0.62      0.79      0.70        29

    accuracy                           0.58        48
   macro avg       0.54      0.53      0.52        48
weighted avg       0.56      0.58      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.22      0.32        23
           1       0.55      0.88      0.68        25

    accuracy                           0.56        48
   macro avg       0.59      0.55      0.50        48
weighted avg       0.59      0.56      0.51        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.37      0.38        19
           1       0.60      0.62      0.61        29

    accuracy                           0.52        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.63      0.52      0.57        23
           1       0.62      0.72      0.67        25

    accuracy                           0.62        48
   macro avg       0.63      0.62      0.62        48
weighted avg       0.63      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.57      0.59      0.58        22
           1       0.64      0.62      0.63        26

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.47      0.44      0.46        18
           1       0.68      0.70      0.69        30

    accuracy                           0.60        48
   macro avg       0.57      0.57      0.57        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.37      0.33      0.35        21
           1       0.52      0.56      0.54        27

    accuracy                           0.46        48
   macro avg       0.44      0.44      0.44        48
weighted avg       0.45      0.46      0.45        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.56      0.88      0.68        17
           1       0.90      0.61      0.73        31

    accuracy                           0.71        48
   macro avg       0.73      0.75      0.71        48
weighted avg       0.78      0.71      0.71        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.52      0.50        21
           1       0.60      0.56      0.58        27

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.57      0.59      0.58        22
           1       0.64      0.62      0.63        26

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.50      0.42      0.46        19
           1       0.66      0.72      0.69        29

    accuracy                           0.60        48
   macro avg       0.58      0.57      0.57        48
weighted avg       0.59      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.59      0.40      0.48        25
           1       0.52      0.70      0.59        23

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.53        48
weighted avg       0.55      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.56      0.53        18
           1       0.71      0.67      0.69        30

    accuracy                           0.62        48
   macro avg       0.61      0.61      0.61        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.50      0.43        20
           1       0.55      0.43      0.48        28

    accuracy                           0.46        48
   macro avg       0.47      0.46      0.46        48
weighted avg       0.48      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.32      0.39        22
           1       0.56      0.73      0.63        26

    accuracy                           0.54        48
   macro avg       0.53      0.52      0.51        48
weighted avg       0.53      0.54      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.62      0.60        24
           1       0.59      0.54      0.57        24

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.64      0.39      0.49        23
           1       0.59      0.80      0.68        25

    accuracy                           0.60        48
   macro avg       0.62      0.60      0.58        48
weighted avg       0.61      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.62      0.63        21
           1       0.71      0.74      0.73        27

    accuracy                           0.69        48
   macro avg       0.68      0.68      0.68        48
weighted avg       0.69      0.69      0.69        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.31      0.56      0.40        18
           1       0.50      0.27      0.35        30

    accuracy                           0.38        48
   macro avg       0.41      0.41      0.37        48
weighted avg       0.43      0.38      0.37        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.40      0.46        20
           1       0.64      0.75      0.69        28

    accuracy                           0.60        48
   macro avg       0.58      0.57      0.57        48
weighted avg       0.59      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.48      0.49        21
           1       0.61      0.63      0.62        27

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.39      0.40        23
           1       0.46      0.48      0.47        25

    accuracy                           0.44        48
   macro avg       0.44      0.44      0.44        48
weighted avg       0.44      0.44      0.44        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.60      0.12      0.21        24
           1       0.51      0.92      0.66        24

    accuracy                           0.52        48
   macro avg       0.56      0.52      0.43        48
weighted avg       0.56      0.52      0.43        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.38      0.40        21
           1       0.55      0.59      0.57        27

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.49      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.33      0.47      0.39        15
           1       0.70      0.58      0.63        33

    accuracy                           0.54        48
   macro avg       0.52      0.52      0.51        48
weighted avg       0.59      0.54      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.47      0.49        19
           1       0.67      0.69      0.68        29

    accuracy                           0.60        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.43      0.50      0.46        18
           1       0.67      0.60      0.63        30

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.58      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.39      0.45        23
           1       0.55      0.68      0.61        25

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.54      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.37      0.93      0.53        14
           1       0.92      0.35      0.51        34

    accuracy                           0.52        48
   macro avg       0.65      0.64      0.52        48
weighted avg       0.76      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.56      0.49        18
           1       0.68      0.57      0.62        30

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.55        48
weighted avg       0.59      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.46      0.33      0.39        18
           1       0.66      0.77      0.71        30

    accuracy                           0.60        48
   macro avg       0.56      0.55      0.55        48
weighted avg       0.58      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.44      0.58      0.50        19
           1       0.65      0.52      0.58        29

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.57      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.54      0.55        24
           1       0.56      0.58      0.57        24

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.47      0.41      0.44        22
           1       0.55      0.62      0.58        26

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.52      0.52        21
           1       0.63      0.63      0.63        27

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.42      0.58      0.49        19
           1       0.64      0.48      0.55        29

    accuracy                           0.52        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.55      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.65      0.57        20
           1       0.68      0.54      0.60        28

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.61      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.64      0.59        25
           1       0.53      0.43      0.48        23

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.27      0.30        22
           1       0.47      0.54      0.50        26

    accuracy                           0.42        48
   macro avg       0.40      0.41      0.40        48
weighted avg       0.41      0.42      0.41        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.45      0.45        22
           1       0.54      0.54      0.54        26

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.48      0.43      0.45        23
           1       0.52      0.56      0.54        25

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.75      0.11      0.19        27
           1       0.45      0.95      0.62        21

    accuracy                           0.48        48
   macro avg       0.60      0.53      0.40        48
weighted avg       0.62      0.48      0.38        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.62      0.36      0.46        22
           1       0.60      0.81      0.69        26

    accuracy                           0.60        48
   macro avg       0.61      0.59      0.57        48
weighted avg       0.61      0.60      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.46      0.48        24
           1       0.50      0.54      0.52        24

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.74      0.56      0.64        25
           1       0.62      0.78      0.69        23

    accuracy                           0.67        48
   macro avg       0.68      0.67      0.66        48
weighted avg       0.68      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       1.00      0.09      0.17        22
           1       0.57      1.00      0.72        26

    accuracy                           0.58        48
   macro avg       0.78      0.55      0.44        48
weighted avg       0.76      0.58      0.47        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.25      0.34        24
           1       0.51      0.79      0.62        24

    accuracy                           0.52        48
   macro avg       0.53      0.52      0.48        48
weighted avg       0.53      0.52      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.50      0.62      0.56        16
           1       0.79      0.69      0.73        32

    accuracy                           0.67        48
   macro avg       0.64      0.66      0.64        48
weighted avg       0.69      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.63      0.55      0.59        22
           1       0.66      0.73      0.69        26

    accuracy                           0.65        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.38      0.44        21
           1       0.61      0.74      0.67        27

    accuracy                           0.58        48
   macro avg       0.57      0.56      0.56        48
weighted avg       0.57      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.29      0.30      0.29        20
           1       0.48      0.46      0.47        28

    accuracy                           0.40        48
   macro avg       0.38      0.38      0.38        48
weighted avg       0.40      0.40      0.40        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.43      0.45      0.44        20
           1       0.59      0.57      0.58        28

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.58      0.61        24
           1       0.62      0.67      0.64        24

    accuracy                           0.62        48
   macro avg       0.63      0.62      0.62        48
weighted avg       0.63      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.56      0.42        16
           1       0.67      0.44      0.53        32

    accuracy                           0.48        48
   macro avg       0.50      0.50      0.47        48
weighted avg       0.56      0.48      0.49        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.52      0.52        21
           1       0.63      0.63      0.63        27

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.86      0.22      0.35        27
           1       0.49      0.95      0.65        21

    accuracy                           0.54        48
   macro avg       0.67      0.59      0.50        48
weighted avg       0.70      0.54      0.48        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.50      0.09      0.15        22
           1       0.55      0.92      0.69        26

    accuracy                           0.54        48
   macro avg       0.52      0.51      0.42        48
weighted avg       0.52      0.54      0.44        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.35      0.50      0.41        16
           1       0.68      0.53      0.60        32

    accuracy                           0.52        48
   macro avg       0.51      0.52      0.50        48
weighted avg       0.57      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.44      0.37      0.40        19
           1       0.62      0.69      0.66        29

    accuracy                           0.56        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.55      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.63      0.48      0.55        25
           1       0.55      0.70      0.62        23

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.60      0.52      0.56        23
           1       0.61      0.68      0.64        25

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.33      0.44        24
           1       0.56      0.83      0.67        24

    accuracy                           0.58        48
   macro avg       0.61      0.58      0.56        48
weighted avg       0.61      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.71      0.60      0.65        25
           1       0.63      0.74      0.68        23

    accuracy                           0.67        48
   macro avg       0.67      0.67      0.67        48
weighted avg       0.67      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.50      0.55        24
           1       0.57      0.67      0.62        24

    accuracy                           0.58        48
   macro avg       0.59      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.30      0.47      0.37        15
           1       0.68      0.52      0.59        33

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.48        48
weighted avg       0.56      0.50      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.1)
              precision    recall  f1-score   support

           0       0.50      0.56      0.53        18
           1       0.71      0.67      0.69        30

    accuracy                           0.62        48
   macro avg       0.61      0.61      0.61        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.47      0.73      0.57        22
           1       0.57      0.31      0.40        26

    accuracy                           0.50        48
   macro avg       0.52      0.52      0.49        48
weighted avg       0.53      0.50      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.48      0.50      0.49        20
           1       0.63      0.61      0.62        28

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.55      0.52        22
           1       0.58      0.54      0.56        26

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.65      0.58        17
           1       0.78      0.68      0.72        31

    accuracy                           0.67        48
   macro avg       0.65      0.66      0.65        48
weighted avg       0.69      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.32      0.35      0.33        20
           1       0.50      0.46      0.48        28

    accuracy                           0.42        48
   macro avg       0.41      0.41      0.41        48
weighted avg       0.42      0.42      0.42        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.44      0.74      0.55        19
           1       0.69      0.38      0.49        29

    accuracy                           0.52        48
   macro avg       0.56      0.56      0.52        48
weighted avg       0.59      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.64      0.64        22
           1       0.69      0.69      0.69        26

    accuracy                           0.67        48
   macro avg       0.66      0.66      0.66        48
weighted avg       0.67      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.32      0.37        22
           1       0.53      0.65      0.59        26

    accuracy                           0.50        48
   macro avg       0.48      0.49      0.48        48
weighted avg       0.49      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.27      0.34        26
           1       0.42      0.64      0.51        22

    accuracy                           0.44        48
   macro avg       0.45      0.45      0.43        48
weighted avg       0.45      0.44      0.42        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.60      0.38      0.46        24
           1       0.55      0.75      0.63        24

    accuracy                           0.56        48
   macro avg       0.57      0.56      0.55        48
weighted avg       0.57      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.50      0.56        22
           1       0.65      0.77      0.70        26

    accuracy                           0.65        48
   macro avg       0.65      0.63      0.63        48
weighted avg       0.65      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.36      0.40      0.38        20
           1       0.54      0.50      0.52        28

    accuracy                           0.46        48
   macro avg       0.45      0.45      0.45        48
weighted avg       0.47      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.56      0.45        16
           1       0.71      0.53      0.61        32

    accuracy                           0.54        48
   macro avg       0.54      0.55      0.53        48
weighted avg       0.60      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.50      0.50        20
           1       0.64      0.64      0.64        28

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.57        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.55      0.27      0.36        22
           1       0.57      0.81      0.67        26

    accuracy                           0.56        48
   macro avg       0.56      0.54      0.52        48
weighted avg       0.56      0.56      0.53        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.39      0.72      0.51        18
           1       0.67      0.33      0.44        30

    accuracy                           0.48        48
   macro avg       0.53      0.53      0.48        48
weighted avg       0.56      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.41      0.58      0.48        19
           1       0.62      0.45      0.52        29

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.54      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.64      0.39      0.49        23
           1       0.59      0.80      0.68        25

    accuracy                           0.60        48
   macro avg       0.62      0.60      0.58        48
weighted avg       0.61      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.46      0.50      0.48        22
           1       0.54      0.50      0.52        26

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.60      0.55        20
           1       0.67      0.57      0.62        28

    accuracy                           0.58        48
   macro avg       0.58      0.59      0.58        48
weighted avg       0.60      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.39      0.36        18
           1       0.59      0.53      0.56        30

    accuracy                           0.48        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.50      0.48      0.49        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.67      0.54      0.60        26
           1       0.56      0.68      0.61        22

    accuracy                           0.60        48
   macro avg       0.61      0.61      0.60        48
weighted avg       0.62      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.76      0.50      0.60        26
           1       0.58      0.82      0.68        22

    accuracy                           0.65        48
   macro avg       0.67      0.66      0.64        48
weighted avg       0.68      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.38      0.47        24
           1       0.56      0.79      0.66        24

    accuracy                           0.58        48
   macro avg       0.60      0.58      0.56        48
weighted avg       0.60      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.36      0.38        22
           1       0.50      0.54      0.52        26

    accuracy                           0.46        48
   macro avg       0.45      0.45      0.45        48
weighted avg       0.45      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.60      0.38      0.46        24
           1       0.55      0.75      0.63        24

    accuracy                           0.56        48
   macro avg       0.57      0.56      0.55        48
weighted avg       0.57      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.56      0.49        18
           1       0.68      0.57      0.62        30

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.55        48
weighted avg       0.59      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.60      0.59        20
           1       0.70      0.68      0.69        28

    accuracy                           0.65        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.52      0.52        25
           1       0.48      0.48      0.48        23

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.38      0.56      0.45        18
           1       0.64      0.47      0.54        30

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.54      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.57      0.52      0.54        25
           1       0.52      0.57      0.54        23

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.57      0.52      0.55        23
           1       0.59      0.64      0.62        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.28      0.37      0.32        19
           1       0.48      0.38      0.42        29

    accuracy                           0.38        48
   macro avg       0.38      0.37      0.37        48
weighted avg       0.40      0.38      0.38        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.43      0.53        23
           1       0.61      0.80      0.69        25

    accuracy                           0.62        48
   macro avg       0.64      0.62      0.61        48
weighted avg       0.64      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.45      0.43      0.44        23
           1       0.50      0.52      0.51        25

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.25      0.33        24
           1       0.50      0.75      0.60        24

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.47        48
weighted avg       0.50      0.50      0.47        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.46      0.61      0.52        18
           1       0.71      0.57      0.63        30

    accuracy                           0.58        48
   macro avg       0.58      0.59      0.58        48
weighted avg       0.61      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.56      0.64      0.60        22
           1       0.65      0.58      0.61        26

    accuracy                           0.60        48
   macro avg       0.61      0.61      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.38      0.47        21
           1       0.63      0.81      0.71        27

    accuracy                           0.62        48
   macro avg       0.62      0.60      0.59        48
weighted avg       0.62      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.1)
              precision    recall  f1-score   support

           0       0.35      0.42      0.38        19
           1       0.56      0.48      0.52        29

    accuracy                           0.46        48
   macro avg       0.45      0.45      0.45        48
weighted avg       0.48      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.62      0.45      0.52        29
           1       0.41      0.58      0.48        19

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.54      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.57      0.31      0.40        26
           1       0.47      0.73      0.57        22

    accuracy                           0.50        48
   macro avg       0.52      0.52      0.49        48
weighted avg       0.53      0.50      0.48        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.32      0.32      0.32        19
           1       0.55      0.55      0.55        29

    accuracy                           0.46        48
   macro avg       0.43      0.43      0.43        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.55      0.51        20
           1       0.64      0.57      0.60        28

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.37      0.38        19
           1       0.60      0.62      0.61        29

    accuracy                           0.52        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.50      0.44        16
           1       0.71      0.62      0.67        32

    accuracy                           0.58        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.61      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.48      0.62      0.54        16
           1       0.78      0.66      0.71        32

    accuracy                           0.65        48
   macro avg       0.63      0.64      0.63        48
weighted avg       0.68      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.61      0.56      0.58        25
           1       0.56      0.61      0.58        23

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.67      0.48      0.56        21
           1       0.67      0.81      0.73        27

    accuracy                           0.67        48
   macro avg       0.67      0.65      0.64        48
weighted avg       0.67      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.57      0.57      0.57        21
           1       0.67      0.67      0.67        27

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.57      0.32      0.41        25
           1       0.50      0.74      0.60        23

    accuracy                           0.52        48
   macro avg       0.54      0.53      0.50        48
weighted avg       0.54      0.52      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.43      0.46        21
           1       0.60      0.67      0.63        27

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.43      0.50        21
           1       0.64      0.78      0.70        27

    accuracy                           0.62        48
   macro avg       0.62      0.60      0.60        48
weighted avg       0.62      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.33      0.44        27
           1       0.47      0.76      0.58        21

    accuracy                           0.52        48
   macro avg       0.56      0.55      0.51        48
weighted avg       0.57      0.52      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.44      0.61      0.51        18
           1       0.70      0.53      0.60        30

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.60      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.48      0.58      0.52        19
           1       0.68      0.59      0.63        29

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.60      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=0.1, gamma=1)
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        26
           1       0.46      1.00      0.63        22

    accuracy                           0.46        48
   macro avg       0.23      0.50      0.31        48
weighted avg       0.21      0.46      0.29        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.53      0.56      0.54        18
           1       0.72      0.70      0.71        30

    accuracy                           0.65        48
   macro avg       0.63      0.63      0.63        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.35      0.43        23
           1       0.56      0.76      0.64        25

    accuracy                           0.56        48
   macro avg       0.57      0.55      0.54        48
weighted avg       0.56      0.56      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.35      0.37        20
           1       0.57      0.61      0.59        28

    accuracy                           0.50        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.49      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.36      0.43        22
           1       0.58      0.73      0.64        26

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.56      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.29      0.33      0.31        15
           1       0.68      0.64      0.66        33

    accuracy                           0.54        48
   macro avg       0.49      0.48      0.48        48
weighted avg       0.56      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.29      0.31      0.30        16
           1       0.65      0.62      0.63        32

    accuracy                           0.52        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.61      0.48      0.54        23
           1       0.60      0.72      0.65        25

    accuracy                           0.60        48
   macro avg       0.61      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.1)
              precision    recall  f1-score   support

           0       0.48      0.64      0.55        22
           1       0.58      0.42      0.49        26

    accuracy                           0.52        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.52      0.55        21
           1       0.66      0.70      0.68        27

    accuracy                           0.62        48
   macro avg       0.62      0.61      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.61      0.62        23
           1       0.65      0.68      0.67        25

    accuracy                           0.65        48
   macro avg       0.65      0.64      0.64        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.48      0.67      0.56        24
           1       0.47      0.29      0.36        24

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.46        48
weighted avg       0.48      0.48      0.46        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.48      0.55      0.51        22
           1       0.57      0.50      0.53        26

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.43      0.67      0.52        18
           1       0.70      0.47      0.56        30

    accuracy                           0.54        48
   macro avg       0.56      0.57      0.54        48
weighted avg       0.60      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.48      0.57      0.52        21
           1       0.61      0.52      0.56        27

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.59      0.56        17
           1       0.76      0.71      0.73        31

    accuracy                           0.67        48
   macro avg       0.64      0.65      0.64        48
weighted avg       0.68      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.50      0.55        24
           1       0.57      0.67      0.62        24

    accuracy                           0.58        48
   macro avg       0.59      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.46      0.52        28
           1       0.42      0.55      0.48        20

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.52      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.46      0.58      0.51        19
           1       0.67      0.55      0.60        29

    accuracy                           0.56        48
   macro avg       0.56      0.57      0.56        48
weighted avg       0.58      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.86      0.22      0.35        27
           1       0.49      0.95      0.65        21

    accuracy                           0.54        48
   macro avg       0.67      0.59      0.50        48
weighted avg       0.70      0.54      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.36      0.44      0.40        18
           1       0.62      0.53      0.57        30

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.52      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.38      0.48        26
           1       0.50      0.73      0.59        22

    accuracy                           0.54        48
   macro avg       0.56      0.56      0.53        48
weighted avg       0.57      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.70      0.54      0.61        26
           1       0.57      0.73      0.64        22

    accuracy                           0.62        48
   macro avg       0.64      0.63      0.62        48
weighted avg       0.64      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.71      0.25      0.37        20
           1       0.63      0.93      0.75        28

    accuracy                           0.65        48
   macro avg       0.67      0.59      0.56        48
weighted avg       0.67      0.65      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.52      0.47        21
           1       0.55      0.44      0.49        27

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.49      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.75      0.55      0.63        22
           1       0.69      0.85      0.76        26

    accuracy                           0.71        48
   macro avg       0.72      0.70      0.70        48
weighted avg       0.72      0.71      0.70        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.55      0.52        20
           1       0.65      0.61      0.63        28

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.68      0.42      0.52        31
           1       0.38      0.65      0.48        17

    accuracy                           0.50        48
   macro avg       0.53      0.53      0.50        48
weighted avg       0.58      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.54      0.72      0.62        18
           1       0.79      0.63      0.70        30

    accuracy                           0.67        48
   macro avg       0.67      0.68      0.66        48
weighted avg       0.70      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.65      0.48      0.55        23
           1       0.61      0.76      0.68        25

    accuracy                           0.62        48
   macro avg       0.63      0.62      0.61        48
weighted avg       0.63      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.52      0.63      0.57        19
           1       0.72      0.62      0.67        29

    accuracy                           0.62        48
   macro avg       0.62      0.63      0.62        48
weighted avg       0.64      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.58      0.33      0.42        21
           1       0.61      0.81      0.70        27

    accuracy                           0.60        48
   macro avg       0.60      0.57      0.56        48
weighted avg       0.60      0.60      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.53      0.43      0.48        23
           1       0.55      0.64      0.59        25

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.33      0.35      0.34        20
           1       0.52      0.50      0.51        28

    accuracy                           0.44        48
   macro avg       0.43      0.42      0.43        48
weighted avg       0.44      0.44      0.44        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.53      0.40      0.46        20
           1       0.64      0.75      0.69        28

    accuracy                           0.60        48
   macro avg       0.58      0.57      0.57        48
weighted avg       0.59      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.52      0.54      0.53        24
           1       0.52      0.50      0.51        24

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=0.1, gamma=1)
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        21
           1       0.56      1.00      0.72        27

    accuracy                           0.56        48
   macro avg       0.28      0.50      0.36        48
weighted avg       0.32      0.56      0.40        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.34      0.67      0.45        15
           1       0.74      0.42      0.54        33

    accuracy                           0.50        48
   macro avg       0.54      0.55      0.50        48
weighted avg       0.61      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.60      0.50      0.55        24
           1       0.57      0.67      0.62        24

    accuracy                           0.58        48
   macro avg       0.59      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.41      0.42        22
           1       0.52      0.54      0.53        26

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.50      0.53        20
           1       0.67      0.71      0.69        28

    accuracy                           0.62        48
   macro avg       0.61      0.61      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.32      0.37        22
           1       0.53      0.65      0.59        26

    accuracy                           0.50        48
   macro avg       0.48      0.49      0.48        48
weighted avg       0.49      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.62      0.57        21
           1       0.65      0.56      0.60        27

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.54      0.52      0.53        25
           1       0.50      0.52      0.51        23

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.27      0.35        22
           1       0.56      0.77      0.65        26

    accuracy                           0.54        48
   macro avg       0.53      0.52      0.50        48
weighted avg       0.53      0.54      0.51        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.42      0.44      0.43        18
           1       0.66      0.63      0.64        30

    accuracy                           0.56        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.50      0.50        22
           1       0.58      0.58      0.58        26

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.48      0.63      0.55        19
           1       0.70      0.55      0.62        29

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.61      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.33      0.04      0.07        25
           1       0.47      0.91      0.62        23

    accuracy                           0.46        48
   macro avg       0.40      0.48      0.34        48
weighted avg       0.40      0.46      0.33        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.48      0.67      0.56        21
           1       0.63      0.44      0.52        27

    accuracy                           0.54        48
   macro avg       0.56      0.56      0.54        48
weighted avg       0.57      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.50      0.45        20
           1       0.58      0.50      0.54        28

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.35      0.30      0.32        20
           1       0.55      0.61      0.58        28

    accuracy                           0.48        48
   macro avg       0.45      0.45      0.45        48
weighted avg       0.47      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.32      0.41        22
           1       0.58      0.81      0.68        26

    accuracy                           0.58        48
   macro avg       0.58      0.56      0.54        48
weighted avg       0.58      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.41      0.45        27
           1       0.38      0.48      0.43        21

    accuracy                           0.44        48
   macro avg       0.44      0.44      0.44        48
weighted avg       0.45      0.44      0.44        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.43      0.43        21
           1       0.56      0.56      0.56        27

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.63      0.50      0.56        24
           1       0.59      0.71      0.64        24

    accuracy                           0.60        48
   macro avg       0.61      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.25      0.31        20
           1       0.58      0.75      0.66        28

    accuracy                           0.54        48
   macro avg       0.50      0.50      0.48        48
weighted avg       0.51      0.54      0.51        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.57      0.50      0.53        26
           1       0.48      0.55      0.51        22

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=0.1, gamma=1)
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        26
           1       0.46      1.00      0.63        22

    accuracy                           0.46        48
   macro avg       0.23      0.50      0.31        48
weighted avg       0.21      0.46      0.29        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.33      0.35      0.34        20
           1       0.52      0.50      0.51        28

    accuracy                           0.44        48
   macro avg       0.43      0.42      0.43        48
weighted avg       0.44      0.44      0.44        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.41      0.46        22
           1       0.58      0.69      0.63        26

    accuracy                           0.56        48
   macro avg       0.56      0.55      0.55        48
weighted avg       0.56      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.26      0.33      0.29        18
           1       0.52      0.43      0.47        30

    accuracy                           0.40        48
   macro avg       0.39      0.38      0.38        48
weighted avg       0.42      0.40      0.41        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.44      0.41      0.42        17
           1       0.69      0.71      0.70        31

    accuracy                           0.60        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.57      0.55        21
           1       0.64      0.59      0.62        27

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.43      0.43      0.43        23
           1       0.48      0.48      0.48        25

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.46      0.40      0.43        15
           1       0.74      0.79      0.76        33

    accuracy                           0.67        48
   macro avg       0.60      0.59      0.60        48
weighted avg       0.65      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.48      0.50        23
           1       0.56      0.60      0.58        25

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.47      0.45      0.46        20
           1       0.62      0.64      0.63        28

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.50      0.13      0.21        23
           1       0.52      0.88      0.66        25

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.43        48
weighted avg       0.51      0.52      0.44        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.24      0.25      0.24        16
           1       0.61      0.59      0.60        32

    accuracy                           0.48        48
   macro avg       0.42      0.42      0.42        48
weighted avg       0.49      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.68      0.64        22
           1       0.70      0.62      0.65        26

    accuracy                           0.65        48
   macro avg       0.65      0.65      0.65        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.48      0.51        21
           1       0.63      0.70      0.67        27

    accuracy                           0.60        48
   macro avg       0.59      0.59      0.59        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.46      0.52      0.49        21
           1       0.58      0.52      0.55        27

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.44      0.36      0.40        22
           1       0.53      0.62      0.57        26

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.49      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.25      0.32        20
           1       0.59      0.79      0.68        28

    accuracy                           0.56        48
   macro avg       0.52      0.52      0.50        48
weighted avg       0.54      0.56      0.53        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.57      0.50      0.53        24
           1       0.56      0.62      0.59        24

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.44      0.46        18
           1       0.68      0.70      0.69        30

    accuracy                           0.60        48
   macro avg       0.57      0.57      0.57        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.35      0.37      0.36        19
           1       0.57      0.55      0.56        29

    accuracy                           0.48        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.27      0.35        30
           1       0.31      0.56      0.40        18

    accuracy                           0.38        48
   macro avg       0.41      0.41      0.37        48
weighted avg       0.43      0.38      0.37        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.42      0.81      0.55        16
           1       0.82      0.44      0.57        32

    accuracy                           0.56        48
   macro avg       0.62      0.62      0.56        48
weighted avg       0.69      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.58      0.58      0.58        19
           1       0.72      0.72      0.72        29

    accuracy                           0.67        48
   macro avg       0.65      0.65      0.65        48
weighted avg       0.67      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.83      0.19      0.30        27
           1       0.48      0.95      0.63        21

    accuracy                           0.52        48
   macro avg       0.65      0.57      0.47        48
weighted avg       0.68      0.52      0.45        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.39      0.46        23
           1       0.56      0.72      0.63        25

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.55        48
weighted avg       0.56      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.30      0.30      0.30        20
           1       0.50      0.50      0.50        28

    accuracy                           0.42        48
   macro avg       0.40      0.40      0.40        48
weighted avg       0.42      0.42      0.42        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.12      0.18        25
           1       0.44      0.74      0.55        23

    accuracy                           0.42        48
   macro avg       0.38      0.43      0.36        48
weighted avg       0.38      0.42      0.35        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.42      0.46        19
           1       0.66      0.72      0.69        29

    accuracy                           0.60        48
   macro avg       0.58      0.57      0.57        48
weighted avg       0.59      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.50      0.53        20
           1       0.67      0.71      0.69        28

    accuracy                           0.62        48
   macro avg       0.61      0.61      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.36      0.44        25
           1       0.50      0.70      0.58        23

    accuracy                           0.52        48
   macro avg       0.53      0.53      0.51        48
weighted avg       0.53      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.48      0.65      0.55        17
           1       0.76      0.61      0.68        31

    accuracy                           0.62        48
   macro avg       0.62      0.63      0.61        48
weighted avg       0.66      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.35      0.38        17
           1       0.67      0.71      0.69        31

    accuracy                           0.58        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.57      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.54      0.58      0.56        24
           1       0.55      0.50      0.52        24

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.61      0.50        18
           1       0.68      0.50      0.58        30

    accuracy                           0.54        48
   macro avg       0.55      0.56      0.54        48
weighted avg       0.58      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.55      0.51        20
           1       0.64      0.57      0.60        28

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.32      0.32      0.32        19
           1       0.55      0.55      0.55        29

    accuracy                           0.46        48
   macro avg       0.43      0.43      0.43        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.68      0.62      0.65        21
           1       0.72      0.78      0.75        27

    accuracy                           0.71        48
   macro avg       0.70      0.70      0.70        48
weighted avg       0.71      0.71      0.71        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.39      0.32      0.35        22
           1       0.50      0.58      0.54        26

    accuracy                           0.46        48
   macro avg       0.44      0.45      0.44        48
weighted avg       0.45      0.46      0.45        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.55      0.55        22
           1       0.62      0.62      0.62        26

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.40      0.42        20
           1       0.60      0.64      0.62        28

    accuracy                           0.54        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.64      0.58        25
           1       0.50      0.39      0.44        23

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.51        48
weighted avg       0.52      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.35      0.38      0.36        21
           1       0.48      0.44      0.46        27

    accuracy                           0.42        48
   macro avg       0.41      0.41      0.41        48
weighted avg       0.42      0.42      0.42        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.47      0.45      0.46        20
           1       0.62      0.64      0.63        28

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.83      0.19      0.30        27
           1       0.48      0.95      0.63        21

    accuracy                           0.52        48
   macro avg       0.65      0.57      0.47        48
weighted avg       0.68      0.52      0.45        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.63      0.63      0.63        19
           1       0.76      0.76      0.76        29

    accuracy                           0.71        48
   macro avg       0.70      0.70      0.70        48
weighted avg       0.71      0.71      0.71        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.60      0.50      0.55        24
           1       0.57      0.67      0.62        24

    accuracy                           0.58        48
   macro avg       0.59      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.35      0.35      0.35        20
           1       0.54      0.54      0.54        28

    accuracy                           0.46        48
   macro avg       0.44      0.44      0.44        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.54      0.54        24
           1       0.54      0.54      0.54        24

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.59      0.45      0.51        22
           1       0.61      0.73      0.67        26

    accuracy                           0.60        48
   macro avg       0.60      0.59      0.59        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.27      0.38        30
           1       0.39      0.78      0.52        18

    accuracy                           0.46        48
   macro avg       0.53      0.52      0.45        48
weighted avg       0.56      0.46      0.43        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.31      0.25      0.28        20
           1       0.53      0.61      0.57        28

    accuracy                           0.46        48
   macro avg       0.42      0.43      0.42        48
weighted avg       0.44      0.46      0.45        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.40      0.38      0.39        21
           1       0.54      0.56      0.55        27

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.57      0.52      0.55        23
           1       0.59      0.64      0.62        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.61      0.50      0.55        22
           1       0.63      0.73      0.68        26

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.33      0.24      0.28        21
           1       0.52      0.63      0.57        27

    accuracy                           0.46        48
   macro avg       0.42      0.43      0.42        48
weighted avg       0.44      0.46      0.44        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.52      0.72      0.60        18
           1       0.78      0.60      0.68        30

    accuracy                           0.65        48
   macro avg       0.65      0.66      0.64        48
weighted avg       0.68      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.36      0.19      0.25        21
           1       0.54      0.74      0.62        27

    accuracy                           0.50        48
   macro avg       0.45      0.47      0.44        48
weighted avg       0.46      0.50      0.46        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.67      0.50      0.57        24
           1       0.60      0.75      0.67        24

    accuracy                           0.62        48
   macro avg       0.63      0.62      0.62        48
weighted avg       0.63      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.50      0.49        22
           1       0.56      0.54      0.55        26

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.58      0.58        24
           1       0.58      0.58      0.58        24

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.55      0.55      0.55        20
           1       0.68      0.68      0.68        28

    accuracy                           0.62        48
   macro avg       0.61      0.61      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.50      0.65      0.57        20
           1       0.68      0.54      0.60        28

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.61      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.64      0.45      0.53        20
           1       0.68      0.82      0.74        28

    accuracy                           0.67        48
   macro avg       0.66      0.64      0.64        48
weighted avg       0.66      0.67      0.65        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.56      0.45      0.50        22
           1       0.60      0.69      0.64        26

    accuracy                           0.58        48
   macro avg       0.58      0.57      0.57        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.33      0.29      0.31        21
           1       0.50      0.56      0.53        27

    accuracy                           0.44        48
   macro avg       0.42      0.42      0.42        48
weighted avg       0.43      0.44      0.43        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.41      0.33      0.37        21
           1       0.55      0.63      0.59        27

    accuracy                           0.50        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.49      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.32      0.40        19
           1       0.65      0.83      0.73        29

    accuracy                           0.62        48
   macro avg       0.60      0.57      0.56        48
weighted avg       0.61      0.62      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.57      0.54      0.55        24
           1       0.56      0.58      0.57        24

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.45      0.70      0.55        20
           1       0.65      0.39      0.49        28

    accuracy                           0.52        48
   macro avg       0.55      0.55      0.52        48
weighted avg       0.57      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.42      0.40        19
           1       0.59      0.55      0.57        29

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.35      0.36      0.36        22
           1       0.44      0.42      0.43        26

    accuracy                           0.40        48
   macro avg       0.39      0.39      0.39        48
weighted avg       0.40      0.40      0.40        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.28      0.36        29
           1       0.34      0.58      0.43        19

    accuracy                           0.40        48
   macro avg       0.42      0.43      0.39        48
weighted avg       0.44      0.40      0.39        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.62      0.57        21
           1       0.65      0.56      0.60        27

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.29      0.34        21
           1       0.56      0.70      0.62        27

    accuracy                           0.52        48
   macro avg       0.49      0.49      0.48        48
weighted avg       0.50      0.52      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.43      0.44        21
           1       0.57      0.59      0.58        27

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.47      0.45        19
           1       0.63      0.59      0.61        29

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.77      0.40      0.53        25
           1       0.57      0.87      0.69        23

    accuracy                           0.62        48
   macro avg       0.67      0.63      0.61        48
weighted avg       0.67      0.62      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.41      0.49        22
           1       0.61      0.77      0.68        26

    accuracy                           0.60        48
   macro avg       0.60      0.59      0.58        48
weighted avg       0.60      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.50      0.44        18
           1       0.64      0.53      0.58        30

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.51        48
weighted avg       0.55      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.65      0.56        17
           1       0.77      0.65      0.70        31

    accuracy                           0.65        48
   macro avg       0.63      0.65      0.63        48
weighted avg       0.67      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.40      0.48        20
           1       0.66      0.82      0.73        28

    accuracy                           0.65        48
   macro avg       0.64      0.61      0.61        48
weighted avg       0.64      0.65      0.63        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.41      0.47      0.44        19
           1       0.62      0.55      0.58        29

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.53      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.53      0.55        17
           1       0.75      0.77      0.76        31

    accuracy                           0.69        48
   macro avg       0.66      0.65      0.65        48
weighted avg       0.68      0.69      0.69        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.25      0.24      0.24        17
           1       0.59      0.61      0.60        31

    accuracy                           0.48        48
   macro avg       0.42      0.42      0.42        48
weighted avg       0.47      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.38      0.56      0.45        18
           1       0.64      0.47      0.54        30

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.54      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.1)
              precision    recall  f1-score   support

           0       0.60      0.44      0.51        27
           1       0.46      0.62      0.53        21

    accuracy                           0.52        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.54      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.58      0.64      0.61        22
           1       0.67      0.62      0.64        26

    accuracy                           0.62        48
   macro avg       0.62      0.63      0.62        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.48      0.49        21
           1       0.61      0.63      0.62        27

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.21      0.29        24
           1       0.49      0.75      0.59        24

    accuracy                           0.48        48
   macro avg       0.47      0.48      0.44        48
weighted avg       0.47      0.48      0.44        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.53      0.53        19
           1       0.69      0.69      0.69        29

    accuracy                           0.62        48
   macro avg       0.61      0.61      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.59      0.42      0.49        24
           1       0.55      0.71      0.62        24

    accuracy                           0.56        48
   macro avg       0.57      0.56      0.55        48
weighted avg       0.57      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.62      0.42      0.50        24
           1       0.56      0.75      0.64        24

    accuracy                           0.58        48
   macro avg       0.59      0.58      0.57        48
weighted avg       0.59      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.44      0.35      0.39        20
           1       0.59      0.68      0.63        28

    accuracy                           0.54        48
   macro avg       0.52      0.51      0.51        48
weighted avg       0.53      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.33      0.71      0.45        14
           1       0.78      0.41      0.54        34

    accuracy                           0.50        48
   macro avg       0.56      0.56      0.50        48
weighted avg       0.65      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.45      0.45      0.45        20
           1       0.61      0.61      0.61        28

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.58      0.32      0.41        22
           1       0.58      0.81      0.68        26

    accuracy                           0.58        48
   macro avg       0.58      0.56      0.54        48
weighted avg       0.58      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.18      0.10      0.12        21
           1       0.49      0.67      0.56        27

    accuracy                           0.42        48
   macro avg       0.33      0.38      0.34        48
weighted avg       0.35      0.42      0.37        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.45      0.50        20
           1       0.66      0.75      0.70        28

    accuracy                           0.62        48
   macro avg       0.61      0.60      0.60        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.68      0.46      0.55        28
           1       0.48      0.70      0.57        20

    accuracy                           0.56        48
   macro avg       0.58      0.58      0.56        48
weighted avg       0.60      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.39      0.40        23
           1       0.46      0.48      0.47        25

    accuracy                           0.44        48
   macro avg       0.44      0.44      0.44        48
weighted avg       0.44      0.44      0.44        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.68      0.65      0.67        20
           1       0.76      0.79      0.77        28

    accuracy                           0.73        48
   macro avg       0.72      0.72      0.72        48
weighted avg       0.73      0.73      0.73        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.58      0.61        19
           1       0.74      0.79      0.77        29

    accuracy                           0.71        48
   macro avg       0.69      0.69      0.69        48
weighted avg       0.70      0.71      0.71        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.68      0.68      0.68        22
           1       0.73      0.73      0.73        26

    accuracy                           0.71        48
   macro avg       0.71      0.71      0.71        48
weighted avg       0.71      0.71      0.71        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.54      0.59        24
           1       0.61      0.71      0.65        24

    accuracy                           0.62        48
   macro avg       0.63      0.62      0.62        48
weighted avg       0.63      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=0.1, gamma=1)
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        21
           1       0.56      1.00      0.72        27

    accuracy                           0.56        48
   macro avg       0.28      0.50      0.36        48
weighted avg       0.32      0.56      0.40        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.35      0.27      0.31        22
           1       0.48      0.58      0.53        26

    accuracy                           0.44        48
   macro avg       0.42      0.42      0.42        48
weighted avg       0.42      0.44      0.43        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.65      0.58      0.61        26
           1       0.56      0.64      0.60        22

    accuracy                           0.60        48
   macro avg       0.61      0.61      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.50      0.62      0.56        16
           1       0.79      0.69      0.73        32

    accuracy                           0.67        48
   macro avg       0.64      0.66      0.64        48
weighted avg       0.69      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.59      0.47        17
           1       0.68      0.48      0.57        31

    accuracy                           0.52        48
   macro avg       0.53      0.54      0.52        48
weighted avg       0.58      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.42      0.22      0.29        23
           1       0.50      0.72      0.59        25

    accuracy                           0.48        48
   macro avg       0.46      0.47      0.44        48
weighted avg       0.46      0.48      0.44        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.1)
              precision    recall  f1-score   support

           0       0.28      0.28      0.28        18
           1       0.57      0.57      0.57        30

    accuracy                           0.46        48
   macro avg       0.42      0.42      0.42        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.53      0.41      0.46        22
           1       0.58      0.69      0.63        26

    accuracy                           0.56        48
   macro avg       0.56      0.55      0.55        48
weighted avg       0.56      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.62      0.53        16
           1       0.77      0.62      0.69        32

    accuracy                           0.62        48
   macro avg       0.61      0.62      0.61        48
weighted avg       0.66      0.62      0.64        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.33      0.35      0.34        17
           1       0.63      0.61      0.62        31

    accuracy                           0.52        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.45      0.47        22
           1       0.56      0.58      0.57        26

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.59      0.52      0.55        25
           1       0.54      0.61      0.57        23

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.33      0.40        24
           1       0.50      0.67      0.57        24

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.49        48
weighted avg       0.50      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.48      0.45      0.47        22
           1       0.56      0.58      0.57        26

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.45      0.43      0.44        21
           1       0.57      0.59      0.58        27

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.53      0.53        19
           1       0.69      0.69      0.69        29

    accuracy                           0.62        48
   macro avg       0.61      0.61      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.57      0.57        23
           1       0.60      0.60      0.60        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.50      0.53        18
           1       0.72      0.77      0.74        30

    accuracy                           0.67        48
   macro avg       0.64      0.63      0.64        48
weighted avg       0.66      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.29      0.34        17
           1       0.67      0.77      0.72        31

    accuracy                           0.60        48
   macro avg       0.54      0.53      0.53        48
weighted avg       0.58      0.60      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.41      0.45        22
           1       0.57      0.65      0.61        26

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.52      0.70      0.59        23
           1       0.59      0.40      0.48        25

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.53        48
weighted avg       0.55      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.60      0.24      0.34        25
           1       0.50      0.83      0.62        23

    accuracy                           0.52        48
   macro avg       0.55      0.53      0.48        48
weighted avg       0.55      0.52      0.48        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.44      0.58      0.50        19
           1       0.65      0.52      0.58        29

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.57      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.36      0.40        22
           1       0.53      0.62      0.57        26

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.49      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.48      0.53        25
           1       0.54      0.65      0.59        23

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.50      0.38      0.43        21
           1       0.59      0.70      0.64        27

    accuracy                           0.56        48
   macro avg       0.55      0.54      0.54        48
weighted avg       0.55      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.55      0.51        20
           1       0.64      0.57      0.60        28

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.62      0.64      0.63        25
           1       0.59      0.57      0.58        23

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.26      0.34        23
           1       0.53      0.76      0.62        25

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.48        48
weighted avg       0.51      0.52      0.49        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.72      0.50      0.59        26
           1       0.57      0.77      0.65        22

    accuracy                           0.62        48
   macro avg       0.64      0.64      0.62        48
weighted avg       0.65      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.79      0.62        19
           1       0.79      0.52      0.62        29

    accuracy                           0.62        48
   macro avg       0.65      0.65      0.62        48
weighted avg       0.68      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.54      0.50      0.52        26
           1       0.46      0.50      0.48        22

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.55      0.46      0.50        24
           1       0.54      0.62      0.58        24

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.57      0.62      0.59        21
           1       0.68      0.63      0.65        27

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.44      0.43        18
           1       0.66      0.63      0.64        30

    accuracy                           0.56        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.56      0.51        18
           1       0.70      0.63      0.67        30

    accuracy                           0.60        48
   macro avg       0.59      0.59      0.59        48
weighted avg       0.62      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.83      0.19      0.31        26
           1       0.50      0.95      0.66        22

    accuracy                           0.54        48
   macro avg       0.67      0.57      0.48        48
weighted avg       0.68      0.54      0.47        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.45      0.56      0.50        18
           1       0.69      0.60      0.64        30

    accuracy                           0.58        48
   macro avg       0.57      0.58      0.57        48
weighted avg       0.60      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.50      0.55        26
           1       0.52      0.64      0.57        22

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.39      0.46        23
           1       0.56      0.72      0.63        25

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.55        48
weighted avg       0.56      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.48      0.57      0.52        21
           1       0.61      0.52      0.56        27

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.46      0.61      0.52        18
           1       0.71      0.57      0.63        30

    accuracy                           0.58        48
   macro avg       0.58      0.59      0.58        48
weighted avg       0.61      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.45      0.48      0.47        21
           1       0.58      0.56      0.57        27

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.63      0.55      0.59        22
           1       0.66      0.73      0.69        26

    accuracy                           0.65        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.33      0.39        21
           1       0.58      0.70      0.63        27

    accuracy                           0.54        48
   macro avg       0.52      0.52      0.51        48
weighted avg       0.53      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.47      0.35      0.40        20
           1       0.61      0.71      0.66        28

    accuracy                           0.56        48
   macro avg       0.54      0.53      0.53        48
weighted avg       0.55      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.37      0.35      0.36        20
           1       0.55      0.57      0.56        28

    accuracy                           0.48        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.42      0.43      0.43        23
           1       0.46      0.44      0.45        25

    accuracy                           0.44        48
   macro avg       0.44      0.44      0.44        48
weighted avg       0.44      0.44      0.44        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.74      0.56      0.64        25
           1       0.62      0.78      0.69        23

    accuracy                           0.67        48
   macro avg       0.68      0.67      0.66        48
weighted avg       0.68      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.42      0.38      0.40        21
           1       0.55      0.59      0.57        27

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.49      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.35      0.41        20
           1       0.62      0.75      0.68        28

    accuracy                           0.58        48
   macro avg       0.56      0.55      0.54        48
weighted avg       0.57      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.45      0.41      0.43        22
           1       0.54      0.58      0.56        26

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.47      0.38      0.42        24
           1       0.48      0.58      0.53        24

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.47        48
weighted avg       0.48      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.48      0.50        21
           1       0.62      0.67      0.64        27

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.57        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.48      0.65      0.55        20
           1       0.67      0.50      0.57        28

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.59      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.40      0.46        20
           1       0.64      0.75      0.69        28

    accuracy                           0.60        48
   macro avg       0.58      0.57      0.57        48
weighted avg       0.59      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.56      0.60      0.58        15
           1       0.81      0.79      0.80        33

    accuracy                           0.73        48
   macro avg       0.69      0.69      0.69        48
weighted avg       0.73      0.73      0.73        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.38      0.49        26
           1       0.52      0.77      0.62        22

    accuracy                           0.56        48
   macro avg       0.59      0.58      0.55        48
weighted avg       0.60      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.78      0.65        18
           1       0.83      0.63      0.72        30

    accuracy                           0.69        48
   macro avg       0.69      0.71      0.68        48
weighted avg       0.73      0.69      0.69        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.80      0.48      0.60        25
           1       0.61      0.87      0.71        23

    accuracy                           0.67        48
   macro avg       0.70      0.67      0.66        48
weighted avg       0.71      0.67      0.65        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.50      0.49        20
           1       0.63      0.61      0.62        28

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.71      0.57      0.63        21
           1       0.71      0.81      0.76        27

    accuracy                           0.71        48
   macro avg       0.71      0.69      0.70        48
weighted avg       0.71      0.71      0.70        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.44      0.49        25
           1       0.50      0.61      0.55        23

    accuracy                           0.52        48
   macro avg       0.53      0.52      0.52        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.53      0.51        17
           1       0.73      0.71      0.72        31

    accuracy                           0.65        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.35      0.44        23
           1       0.57      0.80      0.67        25

    accuracy                           0.58        48
   macro avg       0.59      0.57      0.56        48
weighted avg       0.59      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.36      0.28      0.31        18
           1       0.62      0.70      0.66        30

    accuracy                           0.54        48
   macro avg       0.49      0.49      0.48        48
weighted avg       0.52      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.44      0.41      0.42        17
           1       0.69      0.71      0.70        31

    accuracy                           0.60        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.43      0.51        21
           1       0.65      0.81      0.72        27

    accuracy                           0.65        48
   macro avg       0.64      0.62      0.62        48
weighted avg       0.65      0.65      0.63        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.33      0.42      0.37        19
           1       0.54      0.45      0.49        29

    accuracy                           0.44        48
   macro avg       0.44      0.43      0.43        48
weighted avg       0.46      0.44      0.44        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.58      0.48      0.52        23
           1       0.59      0.68      0.63        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.31      0.28      0.29        18
           1       0.59      0.63      0.61        30

    accuracy                           0.50        48
   macro avg       0.45      0.46      0.45        48
weighted avg       0.49      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.50      0.44      0.47        18
           1       0.69      0.73      0.71        30

    accuracy                           0.62        48
   macro avg       0.59      0.59      0.59        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.21      0.29      0.24        14
           1       0.66      0.56      0.60        34

    accuracy                           0.48        48
   macro avg       0.43      0.42      0.42        48
weighted avg       0.53      0.48      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.59      0.48      0.53        21
           1       0.65      0.74      0.69        27

    accuracy                           0.62        48
   macro avg       0.62      0.61      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.34      0.69      0.46        16
           1       0.69      0.34      0.46        32

    accuracy                           0.46        48
   macro avg       0.52      0.52      0.46        48
weighted avg       0.57      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.42      0.48        19
           1       0.68      0.79      0.73        29

    accuracy                           0.65        48
   macro avg       0.62      0.61      0.61        48
weighted avg       0.63      0.65      0.63        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.55      0.48      0.51        23
           1       0.57      0.64      0.60        25

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.33      0.41      0.37        17
           1       0.63      0.55      0.59        31

    accuracy                           0.50        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.52      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.45      0.51        20
           1       0.67      0.79      0.72        28

    accuracy                           0.65        48
   macro avg       0.63      0.62      0.62        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.53      0.39      0.45        23
           1       0.55      0.68      0.61        25

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.54      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.70      0.58      0.64        24
           1       0.64      0.75      0.69        24

    accuracy                           0.67        48
   macro avg       0.67      0.67      0.66        48
weighted avg       0.67      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.50      0.17      0.26        23
           1       0.53      0.84      0.65        25

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.45        48
weighted avg       0.51      0.52      0.46        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.53      0.35      0.42        26
           1       0.45      0.64      0.53        22

    accuracy                           0.48        48
   macro avg       0.49      0.49      0.47        48
weighted avg       0.49      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.69      0.44      0.54        25
           1       0.56      0.78      0.65        23

    accuracy                           0.60        48
   macro avg       0.62      0.61      0.60        48
weighted avg       0.63      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.19      0.29        26
           1       0.47      0.86      0.61        22

    accuracy                           0.50        48
   macro avg       0.55      0.53      0.45        48
weighted avg       0.56      0.50      0.44        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.62      0.60        24
           1       0.59      0.54      0.57        24

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.61      0.48      0.54        23
           1       0.60      0.72      0.65        25

    accuracy                           0.60        48
   macro avg       0.61      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.46      0.24      0.32        25
           1       0.46      0.70      0.55        23

    accuracy                           0.46        48
   macro avg       0.46      0.47      0.43        48
weighted avg       0.46      0.46      0.43        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.58      0.61        26
           1       0.56      0.64      0.60        22

    accuracy                           0.60        48
   macro avg       0.61      0.61      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.44      0.44        16
           1       0.72      0.72      0.72        32

    accuracy                           0.62        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.43      0.44        23
           1       0.50      0.52      0.51        25

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.67      0.17      0.28        23
           1       0.55      0.92      0.69        25

    accuracy                           0.56        48
   macro avg       0.61      0.55      0.48        48
weighted avg       0.60      0.56      0.49        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.30      0.50      0.37        16
           1       0.62      0.41      0.49        32

    accuracy                           0.44        48
   macro avg       0.46      0.45      0.43        48
weighted avg       0.51      0.44      0.45        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.42      0.46        19
           1       0.66      0.72      0.69        29

    accuracy                           0.60        48
   macro avg       0.58      0.57      0.57        48
weighted avg       0.59      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.76      0.65      0.70        20
           1       0.77      0.86      0.81        28

    accuracy                           0.77        48
   macro avg       0.77      0.75      0.76        48
weighted avg       0.77      0.77      0.77        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.24      0.30        21
           1       0.56      0.74      0.63        27

    accuracy                           0.52        48
   macro avg       0.49      0.49      0.47        48
weighted avg       0.49      0.52      0.49        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.45      0.49        22
           1       0.59      0.65      0.62        26

    accuracy                           0.56        48
   macro avg       0.56      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.56      0.57        25
           1       0.54      0.57      0.55        23

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.48      0.55        23
           1       0.61      0.76      0.68        25

    accuracy                           0.62        48
   macro avg       0.63      0.62      0.61        48
weighted avg       0.63      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.45      0.51        20
           1       0.67      0.79      0.72        28

    accuracy                           0.65        48
   macro avg       0.63      0.62      0.62        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.43      0.44        21
           1       0.57      0.59      0.58        27

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.62      0.56        16
           1       0.79      0.69      0.73        32

    accuracy                           0.67        48
   macro avg       0.64      0.66      0.64        48
weighted avg       0.69      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        16
           1       0.66      0.97      0.78        32

    accuracy                           0.65        48
   macro avg       0.33      0.48      0.39        48
weighted avg       0.44      0.65      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.44      0.30      0.36        23
           1       0.50      0.64      0.56        25

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.46        48
weighted avg       0.47      0.48      0.46        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.60      0.48      0.53        25
           1       0.54      0.65      0.59        23

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.46      0.25      0.32        24
           1       0.49      0.71      0.58        24

    accuracy                           0.48        48
   macro avg       0.47      0.48      0.45        48
weighted avg       0.47      0.48      0.45        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.41      0.41      0.41        22
           1       0.50      0.50      0.50        26

    accuracy                           0.46        48
   macro avg       0.45      0.45      0.45        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.52      0.51        21
           1       0.62      0.59      0.60        27

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.63      0.68      0.65        25
           1       0.62      0.57      0.59        23

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.55      0.52        20
           1       0.65      0.61      0.63        28

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.53      0.49        19
           1       0.65      0.59      0.62        29

    accuracy                           0.56        48
   macro avg       0.55      0.56      0.55        48
weighted avg       0.57      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.37      0.59      0.45        17
           1       0.67      0.45      0.54        31

    accuracy                           0.50        48
   macro avg       0.52      0.52      0.50        48
weighted avg       0.56      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.61      0.46      0.52        24
           1       0.57      0.71      0.63        24

    accuracy                           0.58        48
   macro avg       0.59      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.50      0.50      0.50        22
           1       0.58      0.58      0.58        26

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.42      0.44        24
           1       0.48      0.54      0.51        24

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.29      0.38        24
           1       0.51      0.75      0.61        24

    accuracy                           0.52        48
   macro avg       0.53      0.52      0.49        48
weighted avg       0.53      0.52      0.49        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.62      0.40      0.48        20
           1       0.66      0.82      0.73        28

    accuracy                           0.65        48
   macro avg       0.64      0.61      0.61        48
weighted avg       0.64      0.65      0.63        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.62      0.40      0.49        25
           1       0.53      0.74      0.62        23

    accuracy                           0.56        48
   macro avg       0.58      0.57      0.55        48
weighted avg       0.58      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.59      0.45      0.51        22
           1       0.61      0.73      0.67        26

    accuracy                           0.60        48
   macro avg       0.60      0.59      0.59        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.37      0.40        19
           1       0.62      0.69      0.66        29

    accuracy                           0.56        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.55      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        21
           1       0.55      0.96      0.70        27

    accuracy                           0.54        48
   macro avg       0.28      0.48      0.35        48
weighted avg       0.31      0.54      0.40        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.60      0.43      0.50        21
           1       0.64      0.78      0.70        27

    accuracy                           0.62        48
   macro avg       0.62      0.60      0.60        48
weighted avg       0.62      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.45      0.51        22
           1       0.61      0.73      0.67        26

    accuracy                           0.60        48
   macro avg       0.60      0.59      0.59        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.50      0.37      0.42        19
           1       0.65      0.76      0.70        29

    accuracy                           0.60        48
   macro avg       0.57      0.56      0.56        48
weighted avg       0.59      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.33      0.36        21
           1       0.53      0.59      0.56        27

    accuracy                           0.48        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.47      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.32      0.75      0.45        16
           1       0.64      0.22      0.33        32

    accuracy                           0.40        48
   macro avg       0.48      0.48      0.39        48
weighted avg       0.53      0.40      0.37        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.50      0.14      0.22        21
           1       0.57      0.89      0.70        27

    accuracy                           0.56        48
   macro avg       0.54      0.52      0.46        48
weighted avg       0.54      0.56      0.49        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.30      0.41        20
           1       0.64      0.89      0.75        28

    accuracy                           0.65        48
   macro avg       0.65      0.60      0.58        48
weighted avg       0.65      0.65      0.61        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.60      0.55      0.57        22
           1       0.64      0.69      0.67        26

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.50      0.38      0.43        21
           1       0.59      0.70      0.64        27

    accuracy                           0.56        48
   macro avg       0.55      0.54      0.54        48
weighted avg       0.55      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.45      0.46        20
           1       0.62      0.64      0.63        28

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.61      0.48      0.54        23
           1       0.60      0.72      0.65        25

    accuracy                           0.60        48
   macro avg       0.61      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.38      0.43        21
           1       0.59      0.70      0.64        27

    accuracy                           0.56        48
   macro avg       0.55      0.54      0.54        48
weighted avg       0.55      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.61      0.55      0.58        20
           1       0.70      0.75      0.72        28

    accuracy                           0.67        48
   macro avg       0.66      0.65      0.65        48
weighted avg       0.66      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.58      0.52      0.55        21
           1       0.66      0.70      0.68        27

    accuracy                           0.62        48
   macro avg       0.62      0.61      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.32      0.32      0.32        19
           1       0.55      0.55      0.55        29

    accuracy                           0.46        48
   macro avg       0.43      0.43      0.43        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.47      0.39      0.42        18
           1       0.67      0.73      0.70        30

    accuracy                           0.60        48
   macro avg       0.57      0.56      0.56        48
weighted avg       0.59      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.53      0.45      0.49        20
           1       0.65      0.71      0.68        28

    accuracy                           0.60        48
   macro avg       0.59      0.58      0.58        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.75      0.36      0.49        25
           1       0.56      0.87      0.68        23

    accuracy                           0.60        48
   macro avg       0.65      0.61      0.58        48
weighted avg       0.66      0.60      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.47      0.44      0.46        18
           1       0.68      0.70      0.69        30

    accuracy                           0.60        48
   macro avg       0.57      0.57      0.57        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.21      0.26        19
           1       0.58      0.72      0.65        29

    accuracy                           0.52        48
   macro avg       0.46      0.47      0.45        48
weighted avg       0.48      0.52      0.49        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.47      0.43      0.45        21
           1       0.59      0.63      0.61        27

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.58      0.52        19
           1       0.68      0.59      0.63        29

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.60      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.35      0.35      0.35        17
           1       0.65      0.65      0.65        31

    accuracy                           0.54        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.32      0.44      0.37        16
           1       0.65      0.53      0.59        32

    accuracy                           0.50        48
   macro avg       0.49      0.48      0.48        48
weighted avg       0.54      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.35      0.29      0.32        21
           1       0.52      0.59      0.55        27

    accuracy                           0.46        48
   macro avg       0.43      0.44      0.43        48
weighted avg       0.44      0.46      0.45        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.52      0.61      0.56        18
           1       0.74      0.67      0.70        30

    accuracy                           0.65        48
   macro avg       0.63      0.64      0.63        48
weighted avg       0.66      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.45      0.53        22
           1       0.62      0.77      0.69        26

    accuracy                           0.62        48
   macro avg       0.62      0.61      0.61        48
weighted avg       0.62      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.46      0.57      0.51        21
           1       0.59      0.48      0.53        27

    accuracy                           0.52        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.71      0.44      0.55        27
           1       0.52      0.76      0.62        21

    accuracy                           0.58        48
   macro avg       0.61      0.60      0.58        48
weighted avg       0.62      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.32      0.32      0.32        19
           1       0.55      0.55      0.55        29

    accuracy                           0.46        48
   macro avg       0.43      0.43      0.43        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.75      0.12      0.20        26
           1       0.48      0.95      0.64        22

    accuracy                           0.50        48
   macro avg       0.61      0.53      0.42        48
weighted avg       0.62      0.50      0.40        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.70      0.30      0.42        23
           1       0.58      0.88      0.70        25

    accuracy                           0.60        48
   macro avg       0.64      0.59      0.56        48
weighted avg       0.64      0.60      0.57        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.46      0.48        24
           1       0.50      0.54      0.52        24

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.39      0.47        23
           1       0.58      0.76      0.66        25

    accuracy                           0.58        48
   macro avg       0.59      0.58      0.56        48
weighted avg       0.59      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.41      0.45      0.43        20
           1       0.58      0.54      0.56        28

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.45      0.42      0.43        24
           1       0.46      0.50      0.48        24

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.36      0.17      0.24        23
           1       0.49      0.72      0.58        25

    accuracy                           0.46        48
   macro avg       0.43      0.45      0.41        48
weighted avg       0.43      0.46      0.42        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.31      0.29      0.30        17
           1       0.62      0.65      0.63        31

    accuracy                           0.52        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.51      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.50      0.50        20
           1       0.64      0.64      0.64        28

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.57        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.35      0.41      0.38        17
           1       0.64      0.58      0.61        31

    accuracy                           0.52        48
   macro avg       0.50      0.50      0.49        48
weighted avg       0.54      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.57      0.59        21
           1       0.68      0.70      0.69        27

    accuracy                           0.65        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.38      0.47      0.42        17
           1       0.67      0.58      0.62        31

    accuracy                           0.54        48
   macro avg       0.52      0.53      0.52        48
weighted avg       0.57      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.20      0.04      0.06        28
           1       0.37      0.80      0.51        20

    accuracy                           0.35        48
   macro avg       0.29      0.42      0.28        48
weighted avg       0.27      0.35      0.25        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.59      0.63      0.61        27
           1       0.47      0.43      0.45        21

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.58      0.52        19
           1       0.68      0.59      0.63        29

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.60      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.64      0.39      0.49        23
           1       0.59      0.80      0.68        25

    accuracy                           0.60        48
   macro avg       0.62      0.60      0.58        48
weighted avg       0.61      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.16      0.24        25
           1       0.46      0.78      0.58        23

    accuracy                           0.46        48
   macro avg       0.45      0.47      0.41        48
weighted avg       0.45      0.46      0.40        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.79      0.52      0.63        21
           1       0.71      0.89      0.79        27

    accuracy                           0.73        48
   macro avg       0.75      0.71      0.71        48
weighted avg       0.74      0.73      0.72        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.36      0.43        22
           1       0.58      0.73      0.64        26

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.56      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.36      0.71      0.48        14
           1       0.80      0.47      0.59        34

    accuracy                           0.54        48
   macro avg       0.58      0.59      0.53        48
weighted avg       0.67      0.54      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.48      0.65      0.55        17
           1       0.76      0.61      0.68        31

    accuracy                           0.62        48
   macro avg       0.62      0.63      0.61        48
weighted avg       0.66      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.71      0.18      0.29        28
           1       0.44      0.90      0.59        20

    accuracy                           0.48        48
   macro avg       0.58      0.54      0.44        48
weighted avg       0.60      0.48      0.41        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.56      0.45      0.50        22
           1       0.60      0.69      0.64        26

    accuracy                           0.58        48
   macro avg       0.58      0.57      0.57        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.42      0.81      0.55        16
           1       0.82      0.44      0.57        32

    accuracy                           0.56        48
   macro avg       0.62      0.62      0.56        48
weighted avg       0.69      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.39      0.32      0.35        22
           1       0.50      0.58      0.54        26

    accuracy                           0.46        48
   macro avg       0.44      0.45      0.44        48
weighted avg       0.45      0.46      0.45        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.67      0.17      0.28        23
           1       0.55      0.92      0.69        25

    accuracy                           0.56        48
   macro avg       0.61      0.55      0.48        48
weighted avg       0.60      0.56      0.49        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.52      0.78      0.62        18
           1       0.81      0.57      0.67        30

    accuracy                           0.65        48
   macro avg       0.66      0.67      0.64        48
weighted avg       0.70      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.61      0.55        18
           1       0.73      0.63      0.68        30

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.61        48
weighted avg       0.64      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.47      0.36      0.41        22
           1       0.55      0.65      0.60        26

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.51      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.07      0.12        30
           1       0.36      0.89      0.52        18

    accuracy                           0.38        48
   macro avg       0.43      0.48      0.32        48
weighted avg       0.45      0.38      0.27        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.47      0.50      0.49        18
           1       0.69      0.67      0.68        30

    accuracy                           0.60        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.75      0.25      0.38        24
           1       0.55      0.92      0.69        24

    accuracy                           0.58        48
   macro avg       0.65      0.58      0.53        48
weighted avg       0.65      0.58      0.53        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.67      0.62        21
           1       0.71      0.63      0.67        27

    accuracy                           0.65        48
   macro avg       0.65      0.65      0.64        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.45      0.50      0.48        20
           1       0.62      0.57      0.59        28

    accuracy                           0.54        48
   macro avg       0.53      0.54      0.53        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        27
           1       0.43      0.95      0.59        21

    accuracy                           0.42        48
   macro avg       0.21      0.48      0.29        48
weighted avg       0.19      0.42      0.26        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.57      0.57      0.57        23
           1       0.60      0.60      0.60        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.70      0.32      0.44        22
           1       0.61      0.88      0.72        26

    accuracy                           0.62        48
   macro avg       0.65      0.60      0.58        48
weighted avg       0.65      0.62      0.59        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.60      0.27      0.37        22
           1       0.58      0.85      0.69        26

    accuracy                           0.58        48
   macro avg       0.59      0.56      0.53        48
weighted avg       0.59      0.58      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.43      0.48        23
           1       0.55      0.64      0.59        25

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.57      0.35      0.43        23
           1       0.56      0.76      0.64        25

    accuracy                           0.56        48
   macro avg       0.57      0.55      0.54        48
weighted avg       0.56      0.56      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.61      0.42      0.50        26
           1       0.50      0.68      0.58        22

    accuracy                           0.54        48
   macro avg       0.56      0.55      0.54        48
weighted avg       0.56      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.60      0.57      0.59        21
           1       0.68      0.70      0.69        27

    accuracy                           0.65        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.50      0.41      0.45        22
           1       0.57      0.65      0.61        26

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.52      0.51        21
           1       0.62      0.59      0.60        27

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.48      0.51        25
           1       0.50      0.57      0.53        23

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.47      0.36      0.41        22
           1       0.55      0.65      0.60        26

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.51      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.32      0.37        22
           1       0.53      0.65      0.59        26

    accuracy                           0.50        48
   macro avg       0.48      0.49      0.48        48
weighted avg       0.49      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.57      0.59      0.58        22
           1       0.64      0.62      0.63        26

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.42      0.44        19
           1       0.65      0.69      0.67        29

    accuracy                           0.58        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.40      0.32      0.35        19
           1       0.61      0.69      0.65        29

    accuracy                           0.54        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.52      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.56      0.45      0.50        22
           1       0.60      0.69      0.64        26

    accuracy                           0.58        48
   macro avg       0.58      0.57      0.57        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.42      0.38      0.40        21
           1       0.55      0.59      0.57        27

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.49      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.57      0.57        21
           1       0.67      0.67      0.67        27

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.54      0.53        24
           1       0.52      0.50      0.51        24

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.46      0.40      0.43        15
           1       0.74      0.79      0.76        33

    accuracy                           0.67        48
   macro avg       0.60      0.59      0.60        48
weighted avg       0.65      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.57      0.57      0.57        23
           1       0.60      0.60      0.60        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.53      0.35      0.42        23
           1       0.55      0.72      0.62        25

    accuracy                           0.54        48
   macro avg       0.54      0.53      0.52        48
weighted avg       0.54      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.50      0.44        16
           1       0.71      0.62      0.67        32

    accuracy                           0.58        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.61      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.35      0.61      0.45        18
           1       0.59      0.33      0.43        30

    accuracy                           0.44        48
   macro avg       0.47      0.47      0.44        48
weighted avg       0.50      0.44      0.43        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.38      0.47        24
           1       0.56      0.79      0.66        24

    accuracy                           0.58        48
   macro avg       0.60      0.58      0.56        48
weighted avg       0.60      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.67      0.56        18
           1       0.74      0.57      0.64        30

    accuracy                           0.60        48
   macro avg       0.61      0.62      0.60        48
weighted avg       0.64      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.58      0.58        19
           1       0.72      0.72      0.72        29

    accuracy                           0.67        48
   macro avg       0.65      0.65      0.65        48
weighted avg       0.67      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.69      0.48      0.56        23
           1       0.62      0.80      0.70        25

    accuracy                           0.65        48
   macro avg       0.66      0.64      0.63        48
weighted avg       0.65      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.53      0.47        19
           1       0.62      0.52      0.57        29

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.54      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.42      0.47        24
           1       0.52      0.62      0.57        24

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.65      0.54      0.59        24
           1       0.61      0.71      0.65        24

    accuracy                           0.62        48
   macro avg       0.63      0.62      0.62        48
weighted avg       0.63      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.40      0.41        20
           1       0.59      0.61      0.60        28

    accuracy                           0.52        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.43      0.39      0.41        23
           1       0.48      0.52      0.50        25

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.45        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.43      0.44        21
           1       0.57      0.59      0.58        27

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.45      0.67      0.54        21
           1       0.59      0.37      0.45        27

    accuracy                           0.50        48
   macro avg       0.52      0.52      0.50        48
weighted avg       0.53      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.25      0.11      0.15        19
           1       0.57      0.79      0.67        29

    accuracy                           0.52        48
   macro avg       0.41      0.45      0.41        48
weighted avg       0.45      0.52      0.46        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.63      0.52      0.57        23
           1       0.62      0.72      0.67        25

    accuracy                           0.62        48
   macro avg       0.63      0.62      0.62        48
weighted avg       0.63      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.60      0.56        20
           1       0.68      0.61      0.64        28

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.25      0.32        20
           1       0.59      0.79      0.68        28

    accuracy                           0.56        48
   macro avg       0.52      0.52      0.50        48
weighted avg       0.54      0.56      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.46      0.25      0.32        24
           1       0.49      0.71      0.58        24

    accuracy                           0.48        48
   macro avg       0.47      0.48      0.45        48
weighted avg       0.47      0.48      0.45        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.44      0.58      0.50        19
           1       0.65      0.52      0.58        29

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.57      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.57      0.54        23
           1       0.57      0.52      0.54        25

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.62      0.52      0.57        25
           1       0.56      0.65      0.60        23

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.53      0.39      0.45        23
           1       0.55      0.68      0.61        25

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.54      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.41      0.63      0.50        19
           1       0.63      0.41      0.50        29

    accuracy                           0.50        48
   macro avg       0.52      0.52      0.50        48
weighted avg       0.55      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.80      0.14      0.24        28
           1       0.44      0.95      0.60        20

    accuracy                           0.48        48
   macro avg       0.62      0.55      0.42        48
weighted avg       0.65      0.48      0.39        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.50      0.45        20
           1       0.58      0.50      0.54        28

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.41      0.37      0.39        19
           1       0.61      0.66      0.63        29

    accuracy                           0.54        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.53      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.50      0.48        20
           1       0.62      0.57      0.59        28

    accuracy                           0.54        48
   macro avg       0.53      0.54      0.53        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.55      0.50      0.52        22
           1       0.61      0.65      0.63        26

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.76      0.67        21
           1       0.76      0.59      0.67        27

    accuracy                           0.67        48
   macro avg       0.68      0.68      0.67        48
weighted avg       0.69      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.45      0.19      0.26        27
           1       0.41      0.71      0.52        21

    accuracy                           0.42        48
   macro avg       0.43      0.45      0.39        48
weighted avg       0.43      0.42      0.37        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.57      0.57      0.57        21
           1       0.67      0.67      0.67        27

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.45      0.22      0.29        23
           1       0.51      0.76      0.61        25

    accuracy                           0.50        48
   macro avg       0.48      0.49      0.45        48
weighted avg       0.49      0.50      0.46        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.53      0.43      0.47        21
           1       0.61      0.70      0.66        27

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.52      0.47        21
           1       0.55      0.44      0.49        27

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.49      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.57      0.54      0.55        24
           1       0.56      0.58      0.57        24

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.75      0.48      0.59        25
           1       0.59      0.83      0.69        23

    accuracy                           0.65        48
   macro avg       0.67      0.65      0.64        48
weighted avg       0.68      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.40      0.44        20
           1       0.62      0.71      0.67        28

    accuracy                           0.58        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.36      0.42        25
           1       0.47      0.61      0.53        23

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.47        48
weighted avg       0.48      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.41      0.45      0.43        20
           1       0.58      0.54      0.56        28

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.58      0.65      0.61        23
           1       0.64      0.56      0.60        25

    accuracy                           0.60        48
   macro avg       0.61      0.61      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.56      0.50      0.53        20
           1       0.67      0.71      0.69        28

    accuracy                           0.62        48
   macro avg       0.61      0.61      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.57      0.55        21
           1       0.64      0.59      0.62        27

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.47      0.43        17
           1       0.68      0.61      0.64        31

    accuracy                           0.56        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.58      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.64      0.32      0.42        22
           1       0.59      0.85      0.70        26

    accuracy                           0.60        48
   macro avg       0.62      0.58      0.56        48
weighted avg       0.61      0.60      0.57        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.31      0.31      0.31        16
           1       0.66      0.66      0.66        32

    accuracy                           0.54        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.50      0.54        22
           1       0.62      0.69      0.65        26

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.52      0.56        23
           1       0.61      0.68      0.64        25

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.57      0.35      0.43        23
           1       0.56      0.76      0.64        25

    accuracy                           0.56        48
   macro avg       0.57      0.55      0.54        48
weighted avg       0.56      0.56      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.58      0.60      0.59        25
           1       0.55      0.52      0.53        23

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.48      0.45      0.47        22
           1       0.56      0.58      0.57        26

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.65      0.58      0.61        19
           1       0.74      0.79      0.77        29

    accuracy                           0.71        48
   macro avg       0.69      0.69      0.69        48
weighted avg       0.70      0.71      0.71        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.54      0.29      0.38        24
           1       0.51      0.75      0.61        24

    accuracy                           0.52        48
   macro avg       0.53      0.52      0.49        48
weighted avg       0.53      0.52      0.49        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.62      0.48      0.54        21
           1       0.66      0.78      0.71        27

    accuracy                           0.65        48
   macro avg       0.64      0.63      0.63        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.53      0.45      0.49        20
           1       0.65      0.71      0.68        28

    accuracy                           0.60        48
   macro avg       0.59      0.58      0.58        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.36      0.42        25
           1       0.47      0.61      0.53        23

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.47        48
weighted avg       0.48      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.80      0.29      0.42        28
           1       0.47      0.90      0.62        20

    accuracy                           0.54        48
   macro avg       0.64      0.59      0.52        48
weighted avg       0.66      0.54      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.46      0.50        26
           1       0.46      0.55      0.50        22

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.16      0.21        19
           1       0.59      0.79      0.68        29

    accuracy                           0.54        48
   macro avg       0.46      0.48      0.45        48
weighted avg       0.49      0.54      0.49        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.29      0.31        17
           1       0.64      0.68      0.66        31

    accuracy                           0.54        48
   macro avg       0.48      0.49      0.48        48
weighted avg       0.53      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.56      0.43      0.49        21
           1       0.62      0.74      0.68        27

    accuracy                           0.60        48
   macro avg       0.59      0.58      0.58        48
weighted avg       0.60      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.58      0.54        19
           1       0.69      0.62      0.65        29

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.62      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.57      0.50        21
           1       0.57      0.44      0.50        27

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.52      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.46      0.61      0.52        18
           1       0.71      0.57      0.63        30

    accuracy                           0.58        48
   macro avg       0.58      0.59      0.58        48
weighted avg       0.61      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.45      0.46        20
           1       0.62      0.64      0.63        28

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.55      0.23      0.32        26
           1       0.46      0.77      0.58        22

    accuracy                           0.48        48
   macro avg       0.50      0.50      0.45        48
weighted avg       0.51      0.48      0.44        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.59      0.45      0.51        22
           1       0.61      0.73      0.67        26

    accuracy                           0.60        48
   macro avg       0.60      0.59      0.59        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.29      0.40        21
           1       0.62      0.89      0.73        27

    accuracy                           0.62        48
   macro avg       0.64      0.59      0.56        48
weighted avg       0.64      0.62      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.59      0.36      0.44        28
           1       0.42      0.65      0.51        20

    accuracy                           0.48        48
   macro avg       0.50      0.50      0.48        48
weighted avg       0.52      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.40      0.38      0.39        21
           1       0.54      0.56      0.55        27

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.47      0.82      0.60        17
           1       0.83      0.48      0.61        31

    accuracy                           0.60        48
   macro avg       0.65      0.65      0.60        48
weighted avg       0.70      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.55      0.46      0.50        24
           1       0.54      0.62      0.58        24

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.21      0.30        24
           1       0.51      0.83      0.63        24

    accuracy                           0.52        48
   macro avg       0.53      0.52      0.47        48
weighted avg       0.53      0.52      0.47        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.43      0.50        23
           1       0.58      0.72      0.64        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.57        48
weighted avg       0.58      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.64      0.39      0.49        23
           1       0.59      0.80      0.68        25

    accuracy                           0.60        48
   macro avg       0.62      0.60      0.58        48
weighted avg       0.61      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.62      0.56      0.59        27
           1       0.50      0.57      0.53        21

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.53      0.53      0.53        19
           1       0.69      0.69      0.69        29

    accuracy                           0.62        48
   macro avg       0.61      0.61      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.19      0.29        26
           1       0.46      0.82      0.59        22

    accuracy                           0.48        48
   macro avg       0.51      0.51      0.44        48
weighted avg       0.51      0.48      0.43        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.54      0.62      0.58        21
           1       0.67      0.59      0.63        27

    accuracy                           0.60        48
   macro avg       0.60      0.61      0.60        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.26      0.47      0.33        15
           1       0.62      0.39      0.48        33

    accuracy                           0.42        48
   macro avg       0.44      0.43      0.41        48
weighted avg       0.51      0.42      0.44        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.32      0.35        19
           1       0.61      0.69      0.65        29

    accuracy                           0.54        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.52      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.41      0.45      0.43        20
           1       0.58      0.54      0.56        28

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.25      0.23      0.24        22
           1       0.39      0.42      0.41        26

    accuracy                           0.33        48
   macro avg       0.32      0.33      0.32        48
weighted avg       0.33      0.33      0.33        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.69      0.52      0.59        21
           1       0.69      0.81      0.75        27

    accuracy                           0.69        48
   macro avg       0.69      0.67      0.67        48
weighted avg       0.69      0.69      0.68        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.1)
              precision    recall  f1-score   support

           0       0.45      0.41      0.43        22
           1       0.54      0.58      0.56        26

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.35      0.32      0.33        19
           1       0.58      0.62      0.60        29

    accuracy                           0.50        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.49      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.41      0.43        22
           1       0.54      0.58      0.56        26

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.75      0.27      0.40        22
           1       0.60      0.92      0.73        26

    accuracy                           0.62        48
   macro avg       0.68      0.60      0.56        48
weighted avg       0.67      0.62      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.52      0.55      0.53        22
           1       0.60      0.58      0.59        26

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.56      0.48      0.51        21
           1       0.63      0.70      0.67        27

    accuracy                           0.60        48
   macro avg       0.59      0.59      0.59        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.50      0.52        22
           1       0.61      0.65      0.63        26

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.74      0.60        19
           1       0.75      0.52      0.61        29

    accuracy                           0.60        48
   macro avg       0.62      0.63      0.60        48
weighted avg       0.65      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.50      0.54        26
           1       0.50      0.59      0.54        22

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.50      0.48        20
           1       0.62      0.57      0.59        28

    accuracy                           0.54        48
   macro avg       0.53      0.54      0.53        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.67      0.42      0.51        24
           1       0.58      0.79      0.67        24

    accuracy                           0.60        48
   macro avg       0.62      0.60      0.59        48
weighted avg       0.62      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.43      0.50      0.46        18
           1       0.67      0.60      0.63        30

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.58      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.35      0.30      0.32        20
           1       0.55      0.61      0.58        28

    accuracy                           0.48        48
   macro avg       0.45      0.45      0.45        48
weighted avg       0.47      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.35      0.53      0.42        17
           1       0.64      0.45      0.53        31

    accuracy                           0.48        48
   macro avg       0.49      0.49      0.47        48
weighted avg       0.53      0.48      0.49        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.43      0.25      0.32        24
           1       0.47      0.67      0.55        24

    accuracy                           0.46        48
   macro avg       0.45      0.46      0.43        48
weighted avg       0.45      0.46      0.43        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.50      0.48      0.49        21
           1       0.61      0.63      0.62        27

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.63      0.74      0.68        23
           1       0.71      0.60      0.65        25

    accuracy                           0.67        48
   macro avg       0.67      0.67      0.67        48
weighted avg       0.67      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.60      0.38      0.46        24
           1       0.55      0.75      0.63        24

    accuracy                           0.56        48
   macro avg       0.57      0.56      0.55        48
weighted avg       0.57      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.45      0.54        22
           1       0.64      0.81      0.71        26

    accuracy                           0.65        48
   macro avg       0.65      0.63      0.63        48
weighted avg       0.65      0.65      0.63        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.76      0.67        25
           1       0.62      0.43      0.51        23

    accuracy                           0.60        48
   macro avg       0.61      0.60      0.59        48
weighted avg       0.61      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.74      0.61        19
           1       0.76      0.55      0.64        29

    accuracy                           0.62        48
   macro avg       0.64      0.64      0.62        48
weighted avg       0.67      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.35      0.41        23
           1       0.53      0.68      0.60        25

    accuracy                           0.52        48
   macro avg       0.52      0.51      0.50        48
weighted avg       0.52      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.52      0.52        21
           1       0.63      0.63      0.63        27

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.52      0.58        21
           1       0.68      0.78      0.72        27

    accuracy                           0.67        48
   macro avg       0.66      0.65      0.65        48
weighted avg       0.66      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.42      0.36      0.39        22
           1       0.52      0.58      0.55        26

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.47      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.50      0.40      0.44        20
           1       0.62      0.71      0.67        28

    accuracy                           0.58        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.67      0.63        18
           1       0.79      0.73      0.76        30

    accuracy                           0.71        48
   macro avg       0.69      0.70      0.70        48
weighted avg       0.72      0.71      0.71        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.04      0.07        28
           1       0.41      0.95      0.58        20

    accuracy                           0.42        48
   macro avg       0.46      0.49      0.32        48
weighted avg       0.46      0.42      0.28        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.43      0.52      0.47        23
           1       0.45      0.36      0.40        25

    accuracy                           0.44        48
   macro avg       0.44      0.44      0.44        48
weighted avg       0.44      0.44      0.43        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.53      0.50        19
           1       0.67      0.62      0.64        29

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.57        48
weighted avg       0.59      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.55      0.48      0.51        23
           1       0.57      0.64      0.60        25

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.67      0.21      0.32        28
           1       0.44      0.85      0.58        20

    accuracy                           0.48        48
   macro avg       0.55      0.53      0.45        48
weighted avg       0.57      0.48      0.43        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.76      0.63        21
           1       0.72      0.48      0.58        27

    accuracy                           0.60        48
   macro avg       0.63      0.62      0.60        48
weighted avg       0.64      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.67      0.67        24
           1       0.67      0.67      0.67        24

    accuracy                           0.67        48
   macro avg       0.67      0.67      0.67        48
weighted avg       0.67      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.45      0.49        22
           1       0.59      0.65      0.62        26

    accuracy                           0.56        48
   macro avg       0.56      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.25      0.32        20
           1       0.59      0.79      0.68        28

    accuracy                           0.56        48
   macro avg       0.52      0.52      0.50        48
weighted avg       0.54      0.56      0.53        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.47      0.49        19
           1       0.67      0.69      0.68        29

    accuracy                           0.60        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.48      0.55      0.51        22
           1       0.57      0.50      0.53        26

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.40      0.40        20
           1       0.57      0.57      0.57        28

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.62      0.57        21
           1       0.65      0.56      0.60        27

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.55      0.57        22
           1       0.64      0.69      0.67        26

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.57      0.57      0.57        23
           1       0.60      0.60      0.60        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.48      0.55      0.51        22
           1       0.57      0.50      0.53        26

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.70      0.30      0.42        23
           1       0.58      0.88      0.70        25

    accuracy                           0.60        48
   macro avg       0.64      0.59      0.56        48
weighted avg       0.64      0.60      0.57        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.25      0.36      0.29        14
           1       0.68      0.56      0.61        34

    accuracy                           0.50        48
   macro avg       0.46      0.46      0.45        48
weighted avg       0.55      0.50      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.60      0.12      0.20        25
           1       0.49      0.91      0.64        23

    accuracy                           0.50        48
   macro avg       0.54      0.52      0.42        48
weighted avg       0.55      0.50      0.41        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.45      0.47        20
           1       0.63      0.68      0.66        28

    accuracy                           0.58        48
   macro avg       0.57      0.56      0.56        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.37      0.65      0.47        17
           1       0.67      0.39      0.49        31

    accuracy                           0.48        48
   macro avg       0.52      0.52      0.48        48
weighted avg       0.56      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.40      0.47        20
           1       0.65      0.79      0.71        28

    accuracy                           0.62        48
   macro avg       0.61      0.59      0.59        48
weighted avg       0.62      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.54      0.50      0.52        26
           1       0.46      0.50      0.48        22

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.54      0.64      0.58        22
           1       0.64      0.54      0.58        26

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.35      0.44        26
           1       0.48      0.73      0.58        22

    accuracy                           0.52        48
   macro avg       0.54      0.54      0.51        48
weighted avg       0.55      0.52      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.55      0.55      0.55        22
           1       0.62      0.62      0.62        26

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.28      0.23      0.25        22
           1       0.43      0.50      0.46        26

    accuracy                           0.38        48
   macro avg       0.36      0.36      0.36        48
weighted avg       0.36      0.38      0.37        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.08      0.13        25
           1       0.47      0.87      0.61        23

    accuracy                           0.46        48
   macro avg       0.43      0.47      0.37        48
weighted avg       0.43      0.46      0.36        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.48      0.48        21
           1       0.59      0.59      0.59        27

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.48      0.57      0.52        21
           1       0.61      0.52      0.56        27

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.64      0.73      0.68        22
           1       0.74      0.65      0.69        26

    accuracy                           0.69        48
   macro avg       0.69      0.69      0.69        48
weighted avg       0.69      0.69      0.69        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.29      0.26      0.28        19
           1       0.55      0.59      0.57        29

    accuracy                           0.46        48
   macro avg       0.42      0.42      0.42        48
weighted avg       0.45      0.46      0.45        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.45      0.47        20
           1       0.63      0.68      0.66        28

    accuracy                           0.58        48
   macro avg       0.57      0.56      0.56        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.39      0.40        18
           1       0.65      0.67      0.66        30

    accuracy                           0.56        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.78      0.32      0.45        22
           1       0.62      0.92      0.74        26

    accuracy                           0.65        48
   macro avg       0.70      0.62      0.60        48
weighted avg       0.69      0.65      0.61        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.59      0.60        22
           1       0.67      0.69      0.68        26

    accuracy                           0.65        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.64      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.40      0.62      0.49        16
           1       0.74      0.53      0.62        32

    accuracy                           0.56        48
   macro avg       0.57      0.58      0.55        48
weighted avg       0.63      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.41      0.50        22
           1       0.62      0.81      0.70        26

    accuracy                           0.62        48
   macro avg       0.63      0.61      0.60        48
weighted avg       0.63      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.38      0.53      0.44        15
           1       0.74      0.61      0.67        33

    accuracy                           0.58        48
   macro avg       0.56      0.57      0.56        48
weighted avg       0.63      0.58      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.79      0.55      0.65        20
           1       0.74      0.89      0.81        28

    accuracy                           0.75        48
   macro avg       0.76      0.72      0.73        48
weighted avg       0.76      0.75      0.74        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.68      0.58        19
           1       0.73      0.55      0.63        29

    accuracy                           0.60        48
   macro avg       0.61      0.62      0.60        48
weighted avg       0.64      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.45      0.48      0.47        21
           1       0.58      0.56      0.57        27

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.35      0.34        20
           1       0.52      0.50      0.51        28

    accuracy                           0.44        48
   macro avg       0.43      0.42      0.43        48
weighted avg       0.44      0.44      0.44        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.59      0.59        22
           1       0.65      0.65      0.65        26

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.60      0.65      0.63        23
           1       0.65      0.60      0.63        25

    accuracy                           0.62        48
   macro avg       0.63      0.63      0.63        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.33      0.21      0.26        19
           1       0.58      0.72      0.65        29

    accuracy                           0.52        48
   macro avg       0.46      0.47      0.45        48
weighted avg       0.48      0.52      0.49        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.43      0.47        23
           1       0.54      0.60      0.57        25

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.25      0.34        24
           1       0.51      0.79      0.62        24

    accuracy                           0.52        48
   macro avg       0.53      0.52      0.48        48
weighted avg       0.53      0.52      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.54      0.35      0.42        20
           1       0.63      0.79      0.70        28

    accuracy                           0.60        48
   macro avg       0.58      0.57      0.56        48
weighted avg       0.59      0.60      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.43      0.47        23
           1       0.54      0.60      0.57        25

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.54      0.30      0.39        23
           1       0.54      0.76      0.63        25

    accuracy                           0.54        48
   macro avg       0.54      0.53      0.51        48
weighted avg       0.54      0.54      0.52        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.32      0.35        22
           1       0.50      0.58      0.54        26

    accuracy                           0.46        48
   macro avg       0.44      0.45      0.44        48
weighted avg       0.45      0.46      0.45        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.46      0.55      0.50        20
           1       0.62      0.54      0.58        28

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.56      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.73      0.63        15
           1       0.86      0.73      0.79        33

    accuracy                           0.73        48
   macro avg       0.70      0.73      0.71        48
weighted avg       0.76      0.73      0.74        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.45      0.50      0.48        20
           1       0.62      0.57      0.59        28

    accuracy                           0.54        48
   macro avg       0.53      0.54      0.53        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.75      0.22      0.34        27
           1       0.47      0.90      0.62        21

    accuracy                           0.52        48
   macro avg       0.61      0.56      0.48        48
weighted avg       0.63      0.52      0.47        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.55      0.57        22
           1       0.64      0.69      0.67        26

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.35      0.32      0.33        19
           1       0.58      0.62      0.60        29

    accuracy                           0.50        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.49      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.37      0.65      0.47        17
           1       0.67      0.39      0.49        31

    accuracy                           0.48        48
   macro avg       0.52      0.52      0.48        48
weighted avg       0.56      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.36      0.45        28
           1       0.44      0.70      0.54        20

    accuracy                           0.50        48
   macro avg       0.53      0.53      0.50        48
weighted avg       0.55      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.35      0.30      0.32        20
           1       0.55      0.61      0.58        28

    accuracy                           0.48        48
   macro avg       0.45      0.45      0.45        48
weighted avg       0.47      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.64      0.57        22
           1       0.62      0.50      0.55        26

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.83      0.37      0.51        27
           1       0.53      0.90      0.67        21

    accuracy                           0.60        48
   macro avg       0.68      0.64      0.59        48
weighted avg       0.70      0.60      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.48      0.53      0.50        19
           1       0.67      0.62      0.64        29

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.57        48
weighted avg       0.59      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.38      0.44        21
           1       0.61      0.74      0.67        27

    accuracy                           0.58        48
   macro avg       0.57      0.56      0.56        48
weighted avg       0.57      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.35      0.43      0.39        14
           1       0.74      0.68      0.71        34

    accuracy                           0.60        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.63      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.50      0.78      0.61        18
           1       0.80      0.53      0.64        30

    accuracy                           0.62        48
   macro avg       0.65      0.66      0.62        48
weighted avg       0.69      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.42      0.48      0.44        21
           1       0.54      0.48      0.51        27

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.49      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.45      0.59      0.51        17
           1       0.73      0.61      0.67        31

    accuracy                           0.60        48
   macro avg       0.59      0.60      0.59        48
weighted avg       0.63      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.57      0.53        21
           1       0.62      0.56      0.59        27

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.33      0.30      0.32        20
           1       0.53      0.57      0.55        28

    accuracy                           0.46        48
   macro avg       0.43      0.44      0.43        48
weighted avg       0.45      0.46      0.45        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.20      0.26        25
           1       0.43      0.65      0.52        23

    accuracy                           0.42        48
   macro avg       0.41      0.43      0.39        48
weighted avg       0.41      0.42      0.38        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.69      0.39      0.50        28
           1       0.47      0.75      0.58        20

    accuracy                           0.54        48
   macro avg       0.58      0.57      0.54        48
weighted avg       0.60      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.71      0.63        17
           1       0.81      0.71      0.76        31

    accuracy                           0.71        48
   macro avg       0.69      0.71      0.70        48
weighted avg       0.73      0.71      0.71        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.44      0.42        18
           1       0.64      0.60      0.62        30

    accuracy                           0.54        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.55      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.47      0.43      0.45        21
           1       0.59      0.63      0.61        27

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.42      0.47        19
           1       0.67      0.76      0.71        29

    accuracy                           0.62        48
   macro avg       0.60      0.59      0.59        48
weighted avg       0.61      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.53      0.35      0.42        23
           1       0.55      0.72      0.62        25

    accuracy                           0.54        48
   macro avg       0.54      0.53      0.52        48
weighted avg       0.54      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.68      0.52      0.59        25
           1       0.59      0.74      0.65        23

    accuracy                           0.62        48
   macro avg       0.64      0.63      0.62        48
weighted avg       0.64      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.52      0.67      0.59        18
           1       0.76      0.63      0.69        30

    accuracy                           0.65        48
   macro avg       0.64      0.65      0.64        48
weighted avg       0.67      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.55      0.55      0.55        20
           1       0.68      0.68      0.68        28

    accuracy                           0.62        48
   macro avg       0.61      0.61      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.64      0.38      0.47        24
           1       0.56      0.79      0.66        24

    accuracy                           0.58        48
   macro avg       0.60      0.58      0.56        48
weighted avg       0.60      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.42      0.33      0.37        24
           1       0.45      0.54      0.49        24

    accuracy                           0.44        48
   macro avg       0.43      0.44      0.43        48
weighted avg       0.43      0.44      0.43        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.74      0.54      0.62        26
           1       0.59      0.77      0.67        22

    accuracy                           0.65        48
   macro avg       0.66      0.66      0.64        48
weighted avg       0.67      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.47      0.51        19
           1       0.69      0.76      0.72        29

    accuracy                           0.65        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.44      0.35      0.39        23
           1       0.50      0.60      0.55        25

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.47      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.55      0.55        20
           1       0.68      0.68      0.68        28

    accuracy                           0.62        48
   macro avg       0.61      0.61      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.69      0.46      0.55        24
           1       0.59      0.79      0.68        24

    accuracy                           0.62        48
   macro avg       0.64      0.62      0.61        48
weighted avg       0.64      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.57      0.16      0.25        25
           1       0.49      0.87      0.62        23

    accuracy                           0.50        48
   macro avg       0.53      0.51      0.44        48
weighted avg       0.53      0.50      0.43        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.25      0.20      0.22        15
           1       0.67      0.73      0.70        33

    accuracy                           0.56        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.54      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.53      0.41      0.46        22
           1       0.58      0.69      0.63        26

    accuracy                           0.56        48
   macro avg       0.56      0.55      0.55        48
weighted avg       0.56      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.61      0.50      0.55        28
           1       0.44      0.55      0.49        20

    accuracy                           0.52        48
   macro avg       0.52      0.53      0.52        48
weighted avg       0.54      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.52      0.52      0.52        21
           1       0.63      0.63      0.63        27

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.59      0.49        17
           1       0.71      0.55      0.62        31

    accuracy                           0.56        48
   macro avg       0.56      0.57      0.55        48
weighted avg       0.61      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.52      0.52      0.52        23
           1       0.56      0.56      0.56        25

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.50      0.54        26
           1       0.50      0.59      0.54        22

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.38      0.47        26
           1       0.48      0.68      0.57        22

    accuracy                           0.52        48
   macro avg       0.54      0.53      0.52        48
weighted avg       0.54      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.22      0.33        27
           1       0.46      0.86      0.60        21

    accuracy                           0.50        48
   macro avg       0.56      0.54      0.47        48
weighted avg       0.58      0.50      0.45        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.45      0.48      0.47        21
           1       0.58      0.56      0.57        27

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.42      0.35      0.38        23
           1       0.48      0.56      0.52        25

    accuracy                           0.46        48
   macro avg       0.45      0.45      0.45        48
weighted avg       0.45      0.46      0.45        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.38      0.44        24
           1       0.52      0.67      0.58        24

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.51        48
weighted avg       0.52      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.48      0.74      0.58        19
           1       0.74      0.48      0.58        29

    accuracy                           0.58        48
   macro avg       0.61      0.61      0.58        48
weighted avg       0.64      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.45      0.49        20
           1       0.65      0.71      0.68        28

    accuracy                           0.60        48
   macro avg       0.59      0.58      0.58        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.48      0.48      0.48        21
           1       0.59      0.59      0.59        27

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.52      0.51        21
           1       0.62      0.59      0.60        27

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.41      0.69      0.51        13
           1       0.85      0.63      0.72        35

    accuracy                           0.65        48
   macro avg       0.63      0.66      0.62        48
weighted avg       0.73      0.65      0.67        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.53      0.50      0.51        18
           1       0.71      0.73      0.72        30

    accuracy                           0.65        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.45      0.44        22
           1       0.52      0.50      0.51        26

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.59      0.50      0.54        20
           1       0.68      0.75      0.71        28

    accuracy                           0.65        48
   macro avg       0.63      0.62      0.63        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.47      0.33      0.39        21
           1       0.58      0.70      0.63        27

    accuracy                           0.54        48
   macro avg       0.52      0.52      0.51        48
weighted avg       0.53      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.56      0.43      0.49        21
           1       0.62      0.74      0.68        27

    accuracy                           0.60        48
   macro avg       0.59      0.58      0.58        48
weighted avg       0.60      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.39      0.35      0.37        20
           1       0.57      0.61      0.59        28

    accuracy                           0.50        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.49      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.60      0.43      0.50        21
           1       0.64      0.78      0.70        27

    accuracy                           0.62        48
   macro avg       0.62      0.60      0.60        48
weighted avg       0.62      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.47      0.50      0.49        18
           1       0.69      0.67      0.68        30

    accuracy                           0.60        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.43      0.45        23
           1       0.52      0.56      0.54        25

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.61      0.58      0.59        19
           1       0.73      0.76      0.75        29

    accuracy                           0.69        48
   macro avg       0.67      0.67      0.67        48
weighted avg       0.68      0.69      0.69        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.70      0.58      0.64        24
           1       0.64      0.75      0.69        24

    accuracy                           0.67        48
   macro avg       0.67      0.67      0.66        48
weighted avg       0.67      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.37      0.40        19
           1       0.62      0.69      0.66        29

    accuracy                           0.56        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.55      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.43      0.46        21
           1       0.60      0.67      0.63        27

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.78      0.30      0.44        23
           1       0.59      0.92      0.72        25

    accuracy                           0.62        48
   macro avg       0.68      0.61      0.58        48
weighted avg       0.68      0.62      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.69      0.44      0.54        25
           1       0.56      0.78      0.65        23

    accuracy                           0.60        48
   macro avg       0.62      0.61      0.60        48
weighted avg       0.63      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.57      0.33      0.42        24
           1       0.53      0.75      0.62        24

    accuracy                           0.54        48
   macro avg       0.55      0.54      0.52        48
weighted avg       0.55      0.54      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.56      0.51        16
           1       0.76      0.69      0.72        32

    accuracy                           0.65        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.66      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.45      0.48        22
           1       0.57      0.62      0.59        26

    accuracy                           0.54        48
   macro avg       0.54      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.46      0.55      0.50        20
           1       0.62      0.54      0.58        28

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.56      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.50      0.56        20
           1       0.69      0.79      0.73        28

    accuracy                           0.67        48
   macro avg       0.66      0.64      0.64        48
weighted avg       0.66      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.27      0.36        22
           1       0.57      0.81      0.67        26

    accuracy                           0.56        48
   macro avg       0.56      0.54      0.52        48
weighted avg       0.56      0.56      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.25      0.16      0.19        19
           1       0.56      0.69      0.62        29

    accuracy                           0.48        48
   macro avg       0.40      0.42      0.40        48
weighted avg       0.43      0.48      0.45        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.43      0.16      0.23        19
           1       0.61      0.86      0.71        29

    accuracy                           0.58        48
   macro avg       0.52      0.51      0.47        48
weighted avg       0.54      0.58      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.50      0.05      0.09        21
           1       0.57      0.96      0.71        27

    accuracy                           0.56        48
   macro avg       0.53      0.51      0.40        48
weighted avg       0.54      0.56      0.44        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.80      0.35      0.48        23
           1       0.61      0.92      0.73        25

    accuracy                           0.65        48
   macro avg       0.70      0.63      0.61        48
weighted avg       0.70      0.65      0.61        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.45      0.48        22
           1       0.57      0.62      0.59        26

    accuracy                           0.54        48
   macro avg       0.54      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.47      0.44        17
           1       0.69      0.65      0.67        31

    accuracy                           0.58        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.59      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.53      0.50      0.51        20
           1       0.66      0.68      0.67        28

    accuracy                           0.60        48
   macro avg       0.59      0.59      0.59        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.74      0.52      0.61        27
           1       0.55      0.76      0.64        21

    accuracy                           0.62        48
   macro avg       0.64      0.64      0.62        48
weighted avg       0.66      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.55      0.53        22
           1       0.60      0.58      0.59        26

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.68      0.50      0.58        26
           1       0.55      0.73      0.63        22

    accuracy                           0.60        48
   macro avg       0.62      0.61      0.60        48
weighted avg       0.62      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.64      0.65        22
           1       0.70      0.73      0.72        26

    accuracy                           0.69        48
   macro avg       0.69      0.68      0.68        48
weighted avg       0.69      0.69      0.69        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.65      0.55        20
           1       0.67      0.50      0.57        28

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.59      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.75      0.29      0.41        21
           1       0.62      0.93      0.75        27

    accuracy                           0.65        48
   macro avg       0.69      0.61      0.58        48
weighted avg       0.68      0.65      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.33      0.44        24
           1       0.56      0.83      0.67        24

    accuracy                           0.58        48
   macro avg       0.61      0.58      0.56        48
weighted avg       0.61      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.54      0.59      0.57        22
           1       0.62      0.58      0.60        26

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.67      0.40      0.50        25
           1       0.55      0.78      0.64        23

    accuracy                           0.58        48
   macro avg       0.61      0.59      0.57        48
weighted avg       0.61      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.52      0.51        23
           1       0.54      0.52      0.53        25

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.46      0.44      0.45        25
           1       0.42      0.43      0.43        23

    accuracy                           0.44        48
   macro avg       0.44      0.44      0.44        48
weighted avg       0.44      0.44      0.44        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.50      0.44        18
           1       0.64      0.53      0.58        30

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.51        48
weighted avg       0.55      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.36      0.35      0.36        23
           1       0.42      0.44      0.43        25

    accuracy                           0.40        48
   macro avg       0.39      0.39      0.39        48
weighted avg       0.39      0.40      0.40        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.32      0.34        19
           1       0.59      0.66      0.62        29

    accuracy                           0.52        48
   macro avg       0.48      0.49      0.48        48
weighted avg       0.51      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.62      0.56      0.59        27
           1       0.50      0.57      0.53        21

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.61      0.50      0.55        22
           1       0.63      0.73      0.68        26

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.53      0.33      0.41        24
           1       0.52      0.71      0.60        24

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.50        48
weighted avg       0.52      0.52      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.53      0.38      0.44        21
           1       0.61      0.74      0.67        27

    accuracy                           0.58        48
   macro avg       0.57      0.56      0.56        48
weighted avg       0.57      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.46      0.63      0.53        19
           1       0.68      0.52      0.59        29

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.59      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.37      0.77      0.50        13
           1       0.86      0.51      0.64        35

    accuracy                           0.58        48
   macro avg       0.61      0.64      0.57        48
weighted avg       0.73      0.58      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.44      0.42      0.43        19
           1       0.63      0.66      0.64        29

    accuracy                           0.56        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.61      0.60        23
           1       0.62      0.60      0.61        25

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.46      0.51        24
           1       0.55      0.67      0.60        24

    accuracy                           0.56        48
   macro avg       0.57      0.56      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.48      0.53      0.50        19
           1       0.67      0.62      0.64        29

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.57        48
weighted avg       0.59      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.65      0.42      0.51        26
           1       0.52      0.73      0.60        22

    accuracy                           0.56        48
   macro avg       0.58      0.58      0.56        48
weighted avg       0.59      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.40      0.42      0.41        19
           1       0.61      0.59      0.60        29

    accuracy                           0.52        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.50      0.32      0.39        25
           1       0.47      0.65      0.55        23

    accuracy                           0.48        48
   macro avg       0.48      0.49      0.47        48
weighted avg       0.49      0.48      0.46        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.45      0.51        20
           1       0.67      0.79      0.72        28

    accuracy                           0.65        48
   macro avg       0.63      0.62      0.62        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.53      0.56        19
           1       0.71      0.76      0.73        29

    accuracy                           0.67        48
   macro avg       0.65      0.64      0.64        48
weighted avg       0.66      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.58      0.54      0.56        26
           1       0.50      0.55      0.52        22

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.37      0.69      0.48        16
           1       0.72      0.41      0.52        32

    accuracy                           0.50        48
   macro avg       0.54      0.55      0.50        48
weighted avg       0.60      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.41      0.45      0.43        20
           1       0.58      0.54      0.56        28

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.50      0.50      0.50        26
           1       0.41      0.41      0.41        22

    accuracy                           0.46        48
   macro avg       0.45      0.45      0.45        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.56      0.18      0.27        28
           1       0.41      0.80      0.54        20

    accuracy                           0.44        48
   macro avg       0.48      0.49      0.41        48
weighted avg       0.50      0.44      0.38        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.43      0.45      0.44        20
           1       0.59      0.57      0.58        28

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.35      0.44        26
           1       0.48      0.73      0.58        22

    accuracy                           0.52        48
   macro avg       0.54      0.54      0.51        48
weighted avg       0.55      0.52      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.68      0.46      0.55        28
           1       0.48      0.70      0.57        20

    accuracy                           0.56        48
   macro avg       0.58      0.58      0.56        48
weighted avg       0.60      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.50      0.50        20
           1       0.64      0.64      0.64        28

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.57        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.45      0.51        22
           1       0.61      0.73      0.67        26

    accuracy                           0.60        48
   macro avg       0.60      0.59      0.59        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.60      0.43      0.50        21
           1       0.64      0.78      0.70        27

    accuracy                           0.62        48
   macro avg       0.62      0.60      0.60        48
weighted avg       0.62      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.33      0.42      0.37        19
           1       0.54      0.45      0.49        29

    accuracy                           0.44        48
   macro avg       0.44      0.43      0.43        48
weighted avg       0.46      0.44      0.44        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.67      0.82      0.73        22
           1       0.81      0.65      0.72        26

    accuracy                           0.73        48
   macro avg       0.74      0.74      0.73        48
weighted avg       0.74      0.73      0.73        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.50      0.51        18
           1       0.71      0.73      0.72        30

    accuracy                           0.65        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.55      0.56        22
           1       0.63      0.65      0.64        26

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.1)
              precision    recall  f1-score   support

           0       0.45      0.45      0.45        20
           1       0.61      0.61      0.61        28

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.75      0.47      0.58        19
           1       0.72      0.90      0.80        29

    accuracy                           0.73        48
   macro avg       0.74      0.69      0.69        48
weighted avg       0.73      0.73      0.71        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.67      0.61        21
           1       0.70      0.59      0.64        27

    accuracy                           0.62        48
   macro avg       0.63      0.63      0.62        48
weighted avg       0.64      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.50      0.53        26
           1       0.48      0.55      0.51        22

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.30      0.39        23
           1       0.54      0.76      0.63        25

    accuracy                           0.54        48
   macro avg       0.54      0.53      0.51        48
weighted avg       0.54      0.54      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.30      0.47      0.37        15
           1       0.68      0.52      0.59        33

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.48        48
weighted avg       0.56      0.50      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.50      0.49        22
           1       0.56      0.54      0.55        26

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.57      0.59        23
           1       0.63      0.68      0.65        25

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.52      0.62      0.57        21
           1       0.65      0.56      0.60        27

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.46      0.55      0.50        20
           1       0.62      0.54      0.58        28

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.56      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.48      0.58      0.52        19
           1       0.68      0.59      0.63        29

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.60      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.40      0.44        20
           1       0.62      0.71      0.67        28

    accuracy                           0.58        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.48      0.50        21
           1       0.62      0.67      0.64        27

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.57        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.57      0.62        28
           1       0.50      0.60      0.55        20

    accuracy                           0.58        48
   macro avg       0.58      0.59      0.58        48
weighted avg       0.60      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.50      0.49        22
           1       0.56      0.54      0.55        26

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.42      0.45        24
           1       0.50      0.58      0.54        24

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.58      0.55      0.56        20
           1       0.69      0.71      0.70        28

    accuracy                           0.65        48
   macro avg       0.63      0.63      0.63        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.47      0.43        19
           1       0.60      0.52      0.56        29

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.49        48
weighted avg       0.52      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.47      0.53      0.50        17
           1       0.72      0.68      0.70        31

    accuracy                           0.62        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.64      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.50      0.50        20
           1       0.64      0.64      0.64        28

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.57        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       1.00      0.04      0.07        26
           1       0.47      1.00      0.64        22

    accuracy                           0.48        48
   macro avg       0.73      0.52      0.36        48
weighted avg       0.76      0.48      0.33        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.50      0.46        16
           1       0.72      0.66      0.69        32

    accuracy                           0.60        48
   macro avg       0.57      0.58      0.57        48
weighted avg       0.62      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.64      0.39      0.49        23
           1       0.59      0.80      0.68        25

    accuracy                           0.60        48
   macro avg       0.62      0.60      0.58        48
weighted avg       0.61      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.35      0.73      0.47        11
           1       0.88      0.59      0.71        37

    accuracy                           0.62        48
   macro avg       0.61      0.66      0.59        48
weighted avg       0.76      0.62      0.65        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.52      0.56        23
           1       0.61      0.68      0.64        25

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.60      0.48      0.53        25
           1       0.54      0.65      0.59        23

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.26      0.34        23
           1       0.53      0.76      0.62        25

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.48        48
weighted avg       0.51      0.52      0.49        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.59      0.49        17
           1       0.71      0.55      0.62        31

    accuracy                           0.56        48
   macro avg       0.56      0.57      0.55        48
weighted avg       0.61      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.31      0.67      0.42        12
           1       0.82      0.50      0.62        36

    accuracy                           0.54        48
   macro avg       0.56      0.58      0.52        48
weighted avg       0.69      0.54      0.57        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.42      0.43        19
           1       0.63      0.66      0.64        29

    accuracy                           0.56        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.50      0.12      0.19        25
           1       0.48      0.87      0.62        23

    accuracy                           0.48        48
   macro avg       0.49      0.49      0.40        48
weighted avg       0.49      0.48      0.40        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.47      0.32      0.38        22
           1       0.55      0.69      0.61        26

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.49        48
weighted avg       0.51      0.52      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.47      0.51        19
           1       0.69      0.76      0.72        29

    accuracy                           0.65        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.43      0.50        23
           1       0.58      0.72      0.64        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.57        48
weighted avg       0.58      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.29      0.31      0.30        16
           1       0.65      0.62      0.63        32

    accuracy                           0.52        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.48      0.61      0.54        18
           1       0.72      0.60      0.65        30

    accuracy                           0.60        48
   macro avg       0.60      0.61      0.60        48
weighted avg       0.63      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.36      0.44        22
           1       0.59      0.77      0.67        26

    accuracy                           0.58        48
   macro avg       0.58      0.57      0.56        48
weighted avg       0.58      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.44      0.33      0.38        24
           1       0.47      0.58      0.52        24

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.45        48
weighted avg       0.46      0.46      0.45        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.29      0.35      0.32        17
           1       0.59      0.52      0.55        31

    accuracy                           0.46        48
   macro avg       0.44      0.43      0.43        48
weighted avg       0.48      0.46      0.47        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.32      0.40        25
           1       0.48      0.70      0.57        23

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.49        48
weighted avg       0.51      0.50      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=0.1, gamma=1)
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        29
           1       0.40      1.00      0.57        19

    accuracy                           0.40        48
   macro avg       0.20      0.50      0.28        48
weighted avg       0.16      0.40      0.22        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.52      0.58      0.55        19
           1       0.70      0.66      0.68        29

    accuracy                           0.62        48
   macro avg       0.61      0.62      0.61        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.43      0.50      0.46        18
           1       0.67      0.60      0.63        30

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.58      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.35      0.45        26
           1       0.50      0.77      0.61        22

    accuracy                           0.54        48
   macro avg       0.57      0.56      0.53        48
weighted avg       0.58      0.54      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=0.1, gamma=1)
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        26
           1       0.46      1.00      0.63        22

    accuracy                           0.46        48
   macro avg       0.23      0.50      0.31        48
weighted avg       0.21      0.46      0.29        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.68      0.58        19
           1       0.73      0.55      0.63        29

    accuracy                           0.60        48
   macro avg       0.61      0.62      0.60        48
weighted avg       0.64      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.53      0.56        19
           1       0.71      0.76      0.73        29

    accuracy                           0.67        48
   macro avg       0.65      0.64      0.64        48
weighted avg       0.66      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.61      0.55        18
           1       0.73      0.63      0.68        30

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.61        48
weighted avg       0.64      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.35      0.35      0.35        17
           1       0.65      0.65      0.65        31

    accuracy                           0.54        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.59      0.68      0.63        19
           1       0.77      0.69      0.73        29

    accuracy                           0.69        48
   macro avg       0.68      0.69      0.68        48
weighted avg       0.70      0.69      0.69        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.40      0.21      0.28        19
           1       0.61      0.79      0.69        29

    accuracy                           0.56        48
   macro avg       0.50      0.50      0.48        48
weighted avg       0.52      0.56      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.48      0.70      0.57        20
           1       0.68      0.46      0.55        28

    accuracy                           0.56        48
   macro avg       0.58      0.58      0.56        48
weighted avg       0.60      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.48      0.48      0.48        21
           1       0.59      0.59      0.59        27

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.54      0.64      0.58        22
           1       0.64      0.54      0.58        26

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.45      0.50      0.48        20
           1       0.62      0.57      0.59        28

    accuracy                           0.54        48
   macro avg       0.53      0.54      0.53        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.29      0.29      0.29        17
           1       0.61      0.61      0.61        31

    accuracy                           0.50        48
   macro avg       0.45      0.45      0.45        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.50      0.50        20
           1       0.64      0.64      0.64        28

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.57        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.45      0.41      0.43        22
           1       0.54      0.58      0.56        26

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.78      0.32      0.45        22
           1       0.62      0.92      0.74        26

    accuracy                           0.65        48
   macro avg       0.70      0.62      0.60        48
weighted avg       0.69      0.65      0.61        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.35      0.37      0.36        19
           1       0.57      0.55      0.56        29

    accuracy                           0.48        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.36      0.42        22
           1       0.56      0.69      0.62        26

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.53      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.44      0.36      0.40        22
           1       0.53      0.62      0.57        26

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.49      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.54      0.56        26
           1       0.50      0.55      0.52        22

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.45      0.44        20
           1       0.59      0.57      0.58        28

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.69      0.39      0.50        28
           1       0.47      0.75      0.58        20

    accuracy                           0.54        48
   macro avg       0.58      0.57      0.54        48
weighted avg       0.60      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.71      0.21      0.32        24
           1       0.54      0.92      0.68        24

    accuracy                           0.56        48
   macro avg       0.63      0.56      0.50        48
weighted avg       0.63      0.56      0.50        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.46      0.50      0.48        22
           1       0.54      0.50      0.52        26

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.58      0.44      0.50        25
           1       0.52      0.65      0.58        23

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.63      0.55      0.59        22
           1       0.66      0.73      0.69        26

    accuracy                           0.65        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.58      0.41      0.48        27
           1       0.45      0.62      0.52        21

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.52      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.68      0.65      0.67        23
           1       0.69      0.72      0.71        25

    accuracy                           0.69        48
   macro avg       0.69      0.69      0.69        48
weighted avg       0.69      0.69      0.69        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.61      0.44      0.51        25
           1       0.53      0.70      0.60        23

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.68      0.54      0.60        28
           1       0.50      0.65      0.57        20

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.61      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.37      0.35      0.36        20
           1       0.55      0.57      0.56        28

    accuracy                           0.48        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.45      0.43        20
           1       0.58      0.54      0.56        28

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.63      0.52      0.57        23
           1       0.62      0.72      0.67        25

    accuracy                           0.62        48
   macro avg       0.63      0.62      0.62        48
weighted avg       0.63      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.41      0.47      0.44        19
           1       0.62      0.55      0.58        29

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.53      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.57      0.60        23
           1       0.64      0.72      0.68        25

    accuracy                           0.65        48
   macro avg       0.65      0.64      0.64        48
weighted avg       0.65      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.48      0.53        21
           1       0.65      0.74      0.69        27

    accuracy                           0.62        48
   macro avg       0.62      0.61      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.75      0.60      0.67        20
           1       0.75      0.86      0.80        28

    accuracy                           0.75        48
   macro avg       0.75      0.73      0.73        48
weighted avg       0.75      0.75      0.74        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.1)
              precision    recall  f1-score   support

           0       0.44      0.70      0.54        20
           1       0.62      0.36      0.45        28

    accuracy                           0.50        48
   macro avg       0.53      0.53      0.50        48
weighted avg       0.55      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.50      0.41      0.45        22
           1       0.57      0.65      0.61        26

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.56      0.47        16
           1       0.73      0.59      0.66        32

    accuracy                           0.58        48
   macro avg       0.57      0.58      0.56        48
weighted avg       0.62      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.44      0.33      0.38        24
           1       0.47      0.58      0.52        24

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.45        48
weighted avg       0.46      0.46      0.45        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.42      0.40        19
           1       0.59      0.55      0.57        29

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.68      0.59      0.63        22
           1       0.69      0.77      0.73        26

    accuracy                           0.69        48
   macro avg       0.69      0.68      0.68        48
weighted avg       0.69      0.69      0.68        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.59      0.60        22
           1       0.67      0.69      0.68        26

    accuracy                           0.65        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.64      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       1.00      0.05      0.10        19
           1       0.62      1.00      0.76        29

    accuracy                           0.62        48
   macro avg       0.81      0.53      0.43        48
weighted avg       0.77      0.62      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.35      0.42      0.38        19
           1       0.56      0.48      0.52        29

    accuracy                           0.46        48
   macro avg       0.45      0.45      0.45        48
weighted avg       0.48      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       1.00      0.17      0.30        23
           1       0.57      1.00      0.72        25

    accuracy                           0.60        48
   macro avg       0.78      0.59      0.51        48
weighted avg       0.78      0.60      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.67      0.43      0.53        23
           1       0.61      0.80      0.69        25

    accuracy                           0.62        48
   macro avg       0.64      0.62      0.61        48
weighted avg       0.64      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.53      0.59      0.56        17
           1       0.76      0.71      0.73        31

    accuracy                           0.67        48
   macro avg       0.64      0.65      0.64        48
weighted avg       0.68      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.63      0.48      0.55        25
           1       0.55      0.70      0.62        23

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.57      0.54      0.55        24
           1       0.56      0.58      0.57        24

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.60      0.38      0.46        24
           1       0.55      0.75      0.63        24

    accuracy                           0.56        48
   macro avg       0.57      0.56      0.55        48
weighted avg       0.57      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.67      0.44      0.53        27
           1       0.50      0.71      0.59        21

    accuracy                           0.56        48
   macro avg       0.58      0.58      0.56        48
weighted avg       0.59      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.31      0.35        26
           1       0.36      0.45      0.40        22

    accuracy                           0.38        48
   macro avg       0.38      0.38      0.37        48
weighted avg       0.38      0.38      0.37        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.42      0.47      0.44        17
           1       0.69      0.65      0.67        31

    accuracy                           0.58        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.59      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.50      0.50        22
           1       0.58      0.58      0.58        26

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.27      0.32        22
           1       0.52      0.65      0.58        26

    accuracy                           0.48        48
   macro avg       0.46      0.46      0.45        48
weighted avg       0.46      0.48      0.46        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.54      0.62      0.58        24
           1       0.55      0.46      0.50        24

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.33      0.42        24
           1       0.53      0.75      0.62        24

    accuracy                           0.54        48
   macro avg       0.55      0.54      0.52        48
weighted avg       0.55      0.54      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.37      0.59      0.45        17
           1       0.67      0.45      0.54        31

    accuracy                           0.50        48
   macro avg       0.52      0.52      0.50        48
weighted avg       0.56      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.63      0.52      0.57        23
           1       0.62      0.72      0.67        25

    accuracy                           0.62        48
   macro avg       0.63      0.62      0.62        48
weighted avg       0.63      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.63      0.64        27
           1       0.55      0.57      0.56        21

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.45      0.43      0.44        21
           1       0.57      0.59      0.58        27

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.46      0.25      0.32        24
           1       0.49      0.71      0.58        24

    accuracy                           0.48        48
   macro avg       0.47      0.48      0.45        48
weighted avg       0.47      0.48      0.45        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.57      0.62      0.59        26
           1       0.50      0.45      0.48        22

    accuracy                           0.54        48
   macro avg       0.54      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.53      0.48      0.50        21
           1       0.62      0.67      0.64        27

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.57        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.58      0.50      0.54        22
           1       0.62      0.69      0.65        26

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.1)
              precision    recall  f1-score   support

           0       0.50      0.50      0.50        20
           1       0.64      0.64      0.64        28

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.57        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.48      0.50        21
           1       0.62      0.67      0.64        27

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.57        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.67      0.59        18
           1       0.76      0.63      0.69        30

    accuracy                           0.65        48
   macro avg       0.64      0.65      0.64        48
weighted avg       0.67      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.58      0.58        26
           1       0.50      0.50      0.50        22

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.27      0.38        26
           1       0.49      0.82      0.61        22

    accuracy                           0.52        48
   macro avg       0.56      0.54      0.49        48
weighted avg       0.57      0.52      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.48      0.48        23
           1       0.52      0.52      0.52        25

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.56      0.45      0.50        22
           1       0.60      0.69      0.64        26

    accuracy                           0.58        48
   macro avg       0.58      0.57      0.57        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.61      0.47        18
           1       0.63      0.40      0.49        30

    accuracy                           0.48        48
   macro avg       0.51      0.51      0.48        48
weighted avg       0.54      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.76      0.54        17
           1       0.76      0.42      0.54        31

    accuracy                           0.54        48
   macro avg       0.59      0.59      0.54        48
weighted avg       0.64      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.24      0.33        21
           1       0.59      0.85      0.70        27

    accuracy                           0.58        48
   macro avg       0.57      0.54      0.52        48
weighted avg       0.57      0.58      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.43      0.62      0.51        16
           1       0.76      0.59      0.67        32

    accuracy                           0.60        48
   macro avg       0.60      0.61      0.59        48
weighted avg       0.65      0.60      0.62        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.54      0.61      0.57        23
           1       0.59      0.52      0.55        25

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.56      0.39      0.46        23
           1       0.56      0.72      0.63        25

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.55        48
weighted avg       0.56      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.38      0.46        24
           1       0.55      0.75      0.63        24

    accuracy                           0.56        48
   macro avg       0.57      0.56      0.55        48
weighted avg       0.57      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.36      0.53      0.43        17
           1       0.65      0.48      0.56        31

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.49        48
weighted avg       0.55      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        26
           1       0.45      0.95      0.61        22

    accuracy                           0.44        48
   macro avg       0.22      0.48      0.30        48
weighted avg       0.20      0.44      0.28        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.45      0.49        20
           1       0.65      0.71      0.68        28

    accuracy                           0.60        48
   macro avg       0.59      0.58      0.58        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.45      0.50        20
           1       0.66      0.75      0.70        28

    accuracy                           0.62        48
   macro avg       0.61      0.60      0.60        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.57      0.56        21
           1       0.65      0.63      0.64        27

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.37      0.59      0.45        17
           1       0.67      0.45      0.54        31

    accuracy                           0.50        48
   macro avg       0.52      0.52      0.50        48
weighted avg       0.56      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.57      0.53        23
           1       0.55      0.48      0.51        25

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.43      0.50        21
           1       0.64      0.78      0.70        27

    accuracy                           0.62        48
   macro avg       0.62      0.60      0.60        48
weighted avg       0.62      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.56      0.70      0.62        20
           1       0.74      0.61      0.67        28

    accuracy                           0.65        48
   macro avg       0.65      0.65      0.64        48
weighted avg       0.66      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.53      0.43      0.48        23
           1       0.55      0.64      0.59        25

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.46      0.43      0.44        28
           1       0.27      0.30      0.29        20

    accuracy                           0.38        48
   macro avg       0.37      0.36      0.37        48
weighted avg       0.38      0.38      0.38        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.52      0.46      0.49        24
           1       0.52      0.58      0.55        24

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.53      0.45        19
           1       0.61      0.48      0.54        29

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.53      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.76      0.57      0.65        23
           1       0.68      0.84      0.75        25

    accuracy                           0.71        48
   macro avg       0.72      0.70      0.70        48
weighted avg       0.72      0.71      0.70        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.69      0.48      0.56        23
           1       0.62      0.80      0.70        25

    accuracy                           0.65        48
   macro avg       0.66      0.64      0.63        48
weighted avg       0.65      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.50      0.40        16
           1       0.67      0.50      0.57        32

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.49        48
weighted avg       0.56      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.61      0.50      0.55        22
           1       0.63      0.73      0.68        26

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.46      0.57      0.51        21
           1       0.59      0.48      0.53        27

    accuracy                           0.52        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.62      0.57        21
           1       0.65      0.56      0.60        27

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.36      0.18      0.24        22
           1       0.51      0.73      0.60        26

    accuracy                           0.48        48
   macro avg       0.44      0.46      0.42        48
weighted avg       0.44      0.48      0.44        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.37      0.35      0.36        20
           1       0.55      0.57      0.56        28

    accuracy                           0.48        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       1.00      0.15      0.27        26
           1       0.50      1.00      0.67        22

    accuracy                           0.54        48
   macro avg       0.75      0.58      0.47        48
weighted avg       0.77      0.54      0.45        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.36      0.38      0.37        21
           1       0.50      0.48      0.49        27

    accuracy                           0.44        48
   macro avg       0.43      0.43      0.43        48
weighted avg       0.44      0.44      0.44        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.27      0.35        26
           1       0.44      0.68      0.54        22

    accuracy                           0.46        48
   macro avg       0.47      0.48      0.44        48
weighted avg       0.47      0.46      0.44        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.68      0.61        22
           1       0.67      0.54      0.60        26

    accuracy                           0.60        48
   macro avg       0.61      0.61      0.60        48
weighted avg       0.62      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.26      0.29      0.28        17
           1       0.59      0.55      0.57        31

    accuracy                           0.46        48
   macro avg       0.42      0.42      0.42        48
weighted avg       0.47      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.28      0.41      0.33        17
           1       0.57      0.42      0.48        31

    accuracy                           0.42        48
   macro avg       0.42      0.42      0.41        48
weighted avg       0.46      0.42      0.43        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.54      0.58        26
           1       0.54      0.64      0.58        22

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.55      0.51        20
           1       0.64      0.57      0.60        28

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.41      0.47        22
           1       0.59      0.73      0.66        26

    accuracy                           0.58        48
   macro avg       0.58      0.57      0.56        48
weighted avg       0.58      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.75      0.35      0.47        26
           1       0.53      0.86      0.66        22

    accuracy                           0.58        48
   macro avg       0.64      0.60      0.56        48
weighted avg       0.65      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.50      0.40      0.44        25
           1       0.46      0.57      0.51        23

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.60      0.32      0.42        28
           1       0.42      0.70      0.53        20

    accuracy                           0.48        48
   macro avg       0.51      0.51      0.47        48
weighted avg       0.53      0.48      0.46        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.39      0.39        18
           1       0.63      0.63      0.63        30

    accuracy                           0.54        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.47      0.40      0.43        20
           1       0.61      0.68      0.64        28

    accuracy                           0.56        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.55      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.47      0.43      0.45        21
           1       0.59      0.63      0.61        27

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.60      0.27      0.37        22
           1       0.58      0.85      0.69        26

    accuracy                           0.58        48
   macro avg       0.59      0.56      0.53        48
weighted avg       0.59      0.58      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.64      0.58      0.61        24
           1       0.62      0.67      0.64        24

    accuracy                           0.62        48
   macro avg       0.63      0.62      0.62        48
weighted avg       0.63      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.41      0.45      0.43        20
           1       0.58      0.54      0.56        28

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.44      0.39      0.41        18
           1       0.66      0.70      0.68        30

    accuracy                           0.58        48
   macro avg       0.55      0.54      0.54        48
weighted avg       0.57      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.57      0.57      0.57        23
           1       0.60      0.60      0.60        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.45      0.23      0.30        22
           1       0.54      0.77      0.63        26

    accuracy                           0.52        48
   macro avg       0.50      0.50      0.47        48
weighted avg       0.50      0.52      0.48        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.70      0.30      0.42        23
           1       0.58      0.88      0.70        25

    accuracy                           0.60        48
   macro avg       0.64      0.59      0.56        48
weighted avg       0.64      0.60      0.57        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.41      0.53      0.46        17
           1       0.69      0.58      0.63        31

    accuracy                           0.56        48
   macro avg       0.55      0.56      0.55        48
weighted avg       0.59      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.43      0.49        23
           1       0.57      0.68      0.62        25

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.36      0.47      0.41        17
           1       0.65      0.55      0.60        31

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.55      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.56      0.58      0.57        24
           1       0.57      0.54      0.55        24

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.74      0.60        19
           1       0.75      0.52      0.61        29

    accuracy                           0.60        48
   macro avg       0.62      0.63      0.60        48
weighted avg       0.65      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.57      0.55      0.56        22
           1       0.63      0.65      0.64        26

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.32      0.42        25
           1       0.51      0.78      0.62        23

    accuracy                           0.54        48
   macro avg       0.56      0.55      0.52        48
weighted avg       0.57      0.54      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.48      0.58      0.52        19
           1       0.68      0.59      0.63        29

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.60      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.59      0.54      0.57        24
           1       0.58      0.62      0.60        24

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.32      0.38        22
           1       0.55      0.69      0.61        26

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.49        48
weighted avg       0.51      0.52      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.72      0.52      0.60        25
           1       0.60      0.78      0.68        23

    accuracy                           0.65        48
   macro avg       0.66      0.65      0.64        48
weighted avg       0.66      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.48      0.47        21
           1       0.58      0.56      0.57        27

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.47      0.43        17
           1       0.68      0.61      0.64        31

    accuracy                           0.56        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.58      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       1.00      0.21      0.35        19
           1       0.66      1.00      0.79        29

    accuracy                           0.69        48
   macro avg       0.83      0.61      0.57        48
weighted avg       0.79      0.69      0.62        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.60      0.57        20
           1       0.69      0.64      0.67        28

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.58      0.44      0.50        25
           1       0.52      0.65      0.58        23

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.44      0.50        25
           1       0.52      0.65      0.58        23

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.33      0.44      0.38        18
           1       0.58      0.47      0.52        30

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.45        48
weighted avg       0.49      0.46      0.47        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.62      0.32      0.42        25
           1       0.51      0.78      0.62        23

    accuracy                           0.54        48
   macro avg       0.56      0.55      0.52        48
weighted avg       0.57      0.54      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.29      0.34        24
           1       0.45      0.58      0.51        24

    accuracy                           0.44        48
   macro avg       0.43      0.44      0.43        48
weighted avg       0.43      0.44      0.43        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.52      0.50      0.51        26
           1       0.43      0.45      0.44        22

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.35      0.43        23
           1       0.56      0.76      0.64        25

    accuracy                           0.56        48
   macro avg       0.57      0.55      0.54        48
weighted avg       0.56      0.56      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.20      0.04      0.07        25
           1       0.44      0.83      0.58        23

    accuracy                           0.42        48
   macro avg       0.32      0.43      0.32        48
weighted avg       0.32      0.42      0.31        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.58      0.46      0.51        24
           1       0.55      0.67      0.60        24

    accuracy                           0.56        48
   macro avg       0.57      0.56      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.69      0.48      0.56        23
           1       0.62      0.80      0.70        25

    accuracy                           0.65        48
   macro avg       0.66      0.64      0.63        48
weighted avg       0.65      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.48      0.55      0.51        20
           1       0.64      0.57      0.60        28

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.69      0.38      0.49        24
           1       0.57      0.83      0.68        24

    accuracy                           0.60        48
   macro avg       0.63      0.60      0.58        48
weighted avg       0.63      0.60      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.35      0.58      0.44        19
           1       0.53      0.31      0.39        29

    accuracy                           0.42        48
   macro avg       0.44      0.44      0.42        48
weighted avg       0.46      0.42      0.41        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.50      0.48      0.49        21
           1       0.61      0.63      0.62        27

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.26      0.34        19
           1       0.63      0.83      0.72        29

    accuracy                           0.60        48
   macro avg       0.57      0.55      0.53        48
weighted avg       0.58      0.60      0.57        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        23
           1       0.51      0.96      0.67        25

    accuracy                           0.50        48
   macro avg       0.26      0.48      0.33        48
weighted avg       0.27      0.50      0.35        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.39      0.56      0.46        16
           1       0.72      0.56      0.63        32

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.55        48
weighted avg       0.61      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.32      0.39        22
           1       0.56      0.73      0.63        26

    accuracy                           0.54        48
   macro avg       0.53      0.52      0.51        48
weighted avg       0.53      0.54      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=1000, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.50      0.33      0.40        24
           1       0.50      0.67      0.57        24

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.49        48
weighted avg       0.50      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.23      0.31        22
           1       0.55      0.81      0.66        26

    accuracy                           0.54        48
   macro avg       0.53      0.52      0.48        48
weighted avg       0.53      0.54      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.48      0.53      0.50        19
           1       0.67      0.62      0.64        29

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.57        48
weighted avg       0.59      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.46      0.49        24
           1       0.52      0.58      0.55        24

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.67      0.40      0.50        25
           1       0.55      0.78      0.64        23

    accuracy                           0.58        48
   macro avg       0.61      0.59      0.57        48
weighted avg       0.61      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.50      0.42      0.45        24
           1       0.50      0.58      0.54        24

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.73      0.44      0.55        25
           1       0.58      0.83      0.68        23

    accuracy                           0.62        48
   macro avg       0.65      0.63      0.61        48
weighted avg       0.66      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.60      0.55      0.57        22
           1       0.64      0.69      0.67        26

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.63      0.52        19
           1       0.67      0.48      0.56        29

    accuracy                           0.54        48
   macro avg       0.56      0.56      0.54        48
weighted avg       0.58      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.56      0.45        18
           1       0.64      0.47      0.54        30

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.54      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.59      0.59        22
           1       0.65      0.65      0.65        26

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.41      0.46        22
           1       0.58      0.69      0.63        26

    accuracy                           0.56        48
   macro avg       0.56      0.55      0.55        48
weighted avg       0.56      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.61      0.48      0.54        23
           1       0.60      0.72      0.65        25

    accuracy                           0.60        48
   macro avg       0.61      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.67      0.58        21
           1       0.67      0.52      0.58        27

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.60      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.48      0.60      0.53        20
           1       0.65      0.54      0.59        28

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.58      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.44      0.49        27
           1       0.42      0.52      0.47        21

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.49      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.69      0.46      0.55        24
           1       0.59      0.79      0.68        24

    accuracy                           0.62        48
   macro avg       0.64      0.62      0.61        48
weighted avg       0.64      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.65      0.50      0.56        22
           1       0.65      0.77      0.70        26

    accuracy                           0.65        48
   macro avg       0.65      0.63      0.63        48
weighted avg       0.65      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.48      0.43      0.45        23
           1       0.52      0.56      0.54        25

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.39      0.45      0.42        20
           1       0.56      0.50      0.53        28

    accuracy                           0.48        48
   macro avg       0.48      0.47      0.47        48
weighted avg       0.49      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.48      0.49        21
           1       0.61      0.63      0.62        27

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.20      0.25        20
           1       0.56      0.71      0.63        28

    accuracy                           0.50        48
   macro avg       0.44      0.46      0.44        48
weighted avg       0.46      0.50      0.47        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.67      0.60        18
           1       0.77      0.67      0.71        30

    accuracy                           0.67        48
   macro avg       0.66      0.67      0.66        48
weighted avg       0.69      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.53      0.35      0.42        26
           1       0.45      0.64      0.53        22

    accuracy                           0.48        48
   macro avg       0.49      0.49      0.47        48
weighted avg       0.49      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.55      0.56        22
           1       0.63      0.65      0.64        26

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.43      0.13      0.20        23
           1       0.51      0.84      0.64        25

    accuracy                           0.50        48
   macro avg       0.47      0.49      0.42        48
weighted avg       0.47      0.50      0.43        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.71      0.24      0.36        21
           1       0.61      0.93      0.74        27

    accuracy                           0.62        48
   macro avg       0.66      0.58      0.55        48
weighted avg       0.66      0.62      0.57        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.56      0.45      0.50        20
           1       0.66      0.75      0.70        28

    accuracy                           0.62        48
   macro avg       0.61      0.60      0.60        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.68      0.63      0.65        27
           1       0.57      0.62      0.59        21

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.36      0.40      0.38        20
           1       0.54      0.50      0.52        28

    accuracy                           0.46        48
   macro avg       0.45      0.45      0.45        48
weighted avg       0.47      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.50      0.28      0.36        25
           1       0.47      0.70      0.56        23

    accuracy                           0.48        48
   macro avg       0.49      0.49      0.46        48
weighted avg       0.49      0.48      0.46        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.31      0.40        26
           1       0.47      0.73      0.57        22

    accuracy                           0.50        48
   macro avg       0.52      0.52      0.49        48
weighted avg       0.53      0.50      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.41      0.41      0.41        17
           1       0.68      0.68      0.68        31

    accuracy                           0.58        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.38      0.41        21
           1       0.57      0.63      0.60        27

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.51      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.39      0.44        23
           1       0.53      0.64      0.58        25

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.51        48
weighted avg       0.52      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.45      0.45        20
           1       0.61      0.61      0.61        28

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.62      0.64        26
           1       0.58      0.64      0.61        22

    accuracy                           0.62        48
   macro avg       0.62      0.63      0.62        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.52      0.60      0.56        20
           1       0.68      0.61      0.64        28

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.39      0.45        23
           1       0.55      0.68      0.61        25

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.54      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.46      0.48        26
           1       0.42      0.45      0.43        22

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=0.1, gamma=1)
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        27
           1       0.44      1.00      0.61        21

    accuracy                           0.44        48
   macro avg       0.22      0.50      0.30        48
weighted avg       0.19      0.44      0.27        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.42      0.47        19
           1       0.67      0.76      0.71        29

    accuracy                           0.62        48
   macro avg       0.60      0.59      0.59        48
weighted avg       0.61      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.36      0.38        22
           1       0.50      0.54      0.52        26

    accuracy                           0.46        48
   macro avg       0.45      0.45      0.45        48
weighted avg       0.45      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.64      0.60        22
           1       0.65      0.58      0.61        26

    accuracy                           0.60        48
   macro avg       0.61      0.61      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.36      0.40        25
           1       0.43      0.52      0.47        23

    accuracy                           0.44        48
   macro avg       0.44      0.44      0.44        48
weighted avg       0.44      0.44      0.43        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.25      0.35        24
           1       0.53      0.83      0.65        24

    accuracy                           0.54        48
   macro avg       0.56      0.54      0.50        48
weighted avg       0.56      0.54      0.50        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.78      0.30      0.44        23
           1       0.59      0.92      0.72        25

    accuracy                           0.62        48
   macro avg       0.68      0.61      0.58        48
weighted avg       0.68      0.62      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.43      0.60      0.50        20
           1       0.60      0.43      0.50        28

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.53      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.48      0.52        23
           1       0.59      0.68      0.63        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.75      0.63        20
           1       0.75      0.54      0.63        28

    accuracy                           0.62        48
   macro avg       0.64      0.64      0.63        48
weighted avg       0.66      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.58      0.27      0.37        26
           1       0.47      0.77      0.59        22

    accuracy                           0.50        48
   macro avg       0.53      0.52      0.48        48
weighted avg       0.53      0.50      0.47        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.27      0.37        30
           1       0.37      0.72      0.49        18

    accuracy                           0.44        48
   macro avg       0.49      0.49      0.43        48
weighted avg       0.52      0.44      0.42        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.30      0.38        23
           1       0.53      0.72      0.61        25

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.49        48
weighted avg       0.52      0.52      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.53      0.56        19
           1       0.71      0.76      0.73        29

    accuracy                           0.67        48
   macro avg       0.65      0.64      0.64        48
weighted avg       0.66      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.56      0.68      0.61        22
           1       0.67      0.54      0.60        26

    accuracy                           0.60        48
   macro avg       0.61      0.61      0.60        48
weighted avg       0.62      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.50      0.16      0.24        19
           1       0.62      0.90      0.73        29

    accuracy                           0.60        48
   macro avg       0.56      0.53      0.49        48
weighted avg       0.57      0.60      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.59      0.57      0.58        23
           1       0.62      0.64      0.63        25

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.36      0.53      0.43        17
           1       0.65      0.48      0.56        31

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.49        48
weighted avg       0.55      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.50      0.51        22
           1       0.59      0.62      0.60        26

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.42      0.50        24
           1       0.56      0.75      0.64        24

    accuracy                           0.58        48
   macro avg       0.59      0.58      0.57        48
weighted avg       0.59      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.60      0.41      0.49        22
           1       0.61      0.77      0.68        26

    accuracy                           0.60        48
   macro avg       0.60      0.59      0.58        48
weighted avg       0.60      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.40      0.50        25
           1       0.55      0.78      0.64        23

    accuracy                           0.58        48
   macro avg       0.61      0.59      0.57        48
weighted avg       0.61      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.53      0.50      0.51        20
           1       0.66      0.68      0.67        28

    accuracy                           0.60        48
   macro avg       0.59      0.59      0.59        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.50      0.51        24
           1       0.52      0.54      0.53        24

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.43      0.45        21
           1       0.59      0.63      0.61        27

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.57      0.38      0.46        21
           1       0.62      0.78      0.69        27

    accuracy                           0.60        48
   macro avg       0.59      0.58      0.57        48
weighted avg       0.60      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.09      0.14        22
           1       0.52      0.85      0.65        26

    accuracy                           0.50        48
   macro avg       0.43      0.47      0.39        48
weighted avg       0.44      0.50      0.42        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.58      0.56        19
           1       0.71      0.69      0.70        29

    accuracy                           0.65        48
   macro avg       0.63      0.63      0.63        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.62      0.40      0.48        20
           1       0.66      0.82      0.73        28

    accuracy                           0.65        48
   macro avg       0.64      0.61      0.61        48
weighted avg       0.64      0.65      0.63        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.55      0.55        22
           1       0.62      0.62      0.62        26

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.50      0.30      0.37        27
           1       0.41      0.62      0.49        21

    accuracy                           0.44        48
   macro avg       0.45      0.46      0.43        48
weighted avg       0.46      0.44      0.42        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.24      0.32        21
           1       0.58      0.81      0.68        27

    accuracy                           0.56        48
   macro avg       0.54      0.53      0.50        48
weighted avg       0.54      0.56      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.67      0.17      0.27        24
           1       0.52      0.92      0.67        24

    accuracy                           0.54        48
   macro avg       0.60      0.54      0.47        48
weighted avg       0.60      0.54      0.47        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.61      0.46      0.52        24
           1       0.57      0.71      0.63        24

    accuracy                           0.58        48
   macro avg       0.59      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.75      0.58      0.65        26
           1       0.61      0.77      0.68        22

    accuracy                           0.67        48
   macro avg       0.68      0.67      0.67        48
weighted avg       0.68      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.61      0.64      0.62        22
           1       0.68      0.65      0.67        26

    accuracy                           0.65        48
   macro avg       0.64      0.65      0.64        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.37      0.33      0.35        21
           1       0.52      0.56      0.54        27

    accuracy                           0.46        48
   macro avg       0.44      0.44      0.44        48
weighted avg       0.45      0.46      0.45        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.58      0.61        24
           1       0.62      0.67      0.64        24

    accuracy                           0.62        48
   macro avg       0.63      0.62      0.62        48
weighted avg       0.63      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.39      0.44        23
           1       0.53      0.64      0.58        25

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.51        48
weighted avg       0.52      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.45      0.48        22
           1       0.57      0.62      0.59        26

    accuracy                           0.54        48
   macro avg       0.54      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.36      0.42        22
           1       0.56      0.69      0.62        26

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.53      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.38      0.47      0.42        17
           1       0.67      0.58      0.62        31

    accuracy                           0.54        48
   macro avg       0.52      0.53      0.52        48
weighted avg       0.57      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.82      0.33      0.47        27
           1       0.51      0.90      0.66        21

    accuracy                           0.58        48
   macro avg       0.67      0.62      0.56        48
weighted avg       0.68      0.58      0.55        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.36      0.50      0.42        18
           1       0.61      0.47      0.53        30

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.47        48
weighted avg       0.52      0.48      0.49        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.53      0.45      0.49        22
           1       0.59      0.65      0.62        26

    accuracy                           0.56        48
   macro avg       0.56      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.44      0.61      0.51        18
           1       0.70      0.53      0.60        30

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.60      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.36      0.60      0.45        15
           1       0.74      0.52      0.61        33

    accuracy                           0.54        48
   macro avg       0.55      0.56      0.53        48
weighted avg       0.62      0.54      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.71      0.48      0.57        25
           1       0.58      0.78      0.67        23

    accuracy                           0.62        48
   macro avg       0.64      0.63      0.62        48
weighted avg       0.65      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.69      0.38      0.49        24
           1       0.57      0.83      0.68        24

    accuracy                           0.60        48
   macro avg       0.63      0.60      0.58        48
weighted avg       0.63      0.60      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.59      0.50      0.54        26
           1       0.50      0.59      0.54        22

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.69      0.41      0.51        27
           1       0.50      0.76      0.60        21

    accuracy                           0.56        48
   macro avg       0.59      0.58      0.56        48
weighted avg       0.61      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.29      0.47      0.36        15
           1       0.67      0.48      0.56        33

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.46        48
weighted avg       0.55      0.48      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.53      0.48        19
           1       0.64      0.55      0.59        29

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.56      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.46      0.26      0.33        23
           1       0.51      0.72      0.60        25

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.47        48
weighted avg       0.49      0.50      0.47        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.43      0.57      0.49        21
           1       0.55      0.41      0.47        27

    accuracy                           0.48        48
   macro avg       0.49      0.49      0.48        48
weighted avg       0.50      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.42      0.40        19
           1       0.59      0.55      0.57        29

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.48      0.51        21
           1       0.63      0.70      0.67        27

    accuracy                           0.60        48
   macro avg       0.59      0.59      0.59        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.33      0.42        21
           1       0.61      0.81      0.70        27

    accuracy                           0.60        48
   macro avg       0.60      0.57      0.56        48
weighted avg       0.60      0.60      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.52      0.51        21
           1       0.62      0.59      0.60        27

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.64      0.60        22
           1       0.65      0.58      0.61        26

    accuracy                           0.60        48
   macro avg       0.61      0.61      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.50      0.54        22
           1       0.62      0.69      0.65        26

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.56      0.47      0.51        19
           1       0.69      0.76      0.72        29

    accuracy                           0.65        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.83      0.42      0.56        24
           1       0.61      0.92      0.73        24

    accuracy                           0.67        48
   macro avg       0.72      0.67      0.64        48
weighted avg       0.72      0.67      0.64        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.60      0.50        20
           1       0.60      0.43      0.50        28

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.53      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.55      0.46      0.50        24
           1       0.54      0.62      0.58        24

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.62      0.40      0.49        25
           1       0.53      0.74      0.62        23

    accuracy                           0.56        48
   macro avg       0.58      0.57      0.55        48
weighted avg       0.58      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.46      0.65      0.54        17
           1       0.75      0.58      0.65        31

    accuracy                           0.60        48
   macro avg       0.60      0.61      0.60        48
weighted avg       0.65      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.54      0.55        24
           1       0.56      0.58      0.57        24

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.71      0.37      0.49        27
           1       0.50      0.81      0.62        21

    accuracy                           0.56        48
   macro avg       0.61      0.59      0.55        48
weighted avg       0.62      0.56      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.30      0.39        27
           1       0.44      0.71      0.55        21

    accuracy                           0.48        48
   macro avg       0.51      0.51      0.47        48
weighted avg       0.51      0.48      0.46        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.56      0.38      0.45        26
           1       0.47      0.64      0.54        22

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.51      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.60      0.63      0.62        19
           1       0.75      0.72      0.74        29

    accuracy                           0.69        48
   macro avg       0.68      0.68      0.68        48
weighted avg       0.69      0.69      0.69        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.75      0.43      0.55        28
           1       0.50      0.80      0.62        20

    accuracy                           0.58        48
   macro avg       0.62      0.61      0.58        48
weighted avg       0.65      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.45      0.39      0.42        23
           1       0.50      0.56      0.53        25

    accuracy                           0.48        48
   macro avg       0.47      0.48      0.47        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.30      0.34        27
           1       0.32      0.43      0.37        21

    accuracy                           0.35        48
   macro avg       0.36      0.36      0.35        48
weighted avg       0.37      0.35      0.35        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.48      0.57      0.52        21
           1       0.61      0.52      0.56        27

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.60      0.52      0.56        29
           1       0.39      0.47      0.43        19

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.49        48
weighted avg       0.52      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.67      0.43      0.53        23
           1       0.61      0.80      0.69        25

    accuracy                           0.62        48
   macro avg       0.64      0.62      0.61        48
weighted avg       0.64      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.71      0.65      0.68        26
           1       0.62      0.68      0.65        22

    accuracy                           0.67        48
   macro avg       0.67      0.67      0.67        48
weighted avg       0.67      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.57      0.57        23
           1       0.60      0.60      0.60        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.46      0.55      0.50        20
           1       0.62      0.54      0.58        28

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.56      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.60      0.50        20
           1       0.60      0.43      0.50        28

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.53      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.59      0.70      0.64        23
           1       0.67      0.56      0.61        25

    accuracy                           0.62        48
   macro avg       0.63      0.63      0.62        48
weighted avg       0.63      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.42      0.50        24
           1       0.56      0.75      0.64        24

    accuracy                           0.58        48
   macro avg       0.59      0.58      0.57        48
weighted avg       0.59      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.26      0.34        23
           1       0.53      0.76      0.62        25

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.48        48
weighted avg       0.51      0.52      0.49        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.50      0.50        22
           1       0.58      0.58      0.58        26

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.30      0.19      0.23        16
           1       0.66      0.78      0.71        32

    accuracy                           0.58        48
   macro avg       0.48      0.48      0.47        48
weighted avg       0.54      0.58      0.55        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.27      0.25      0.26        16
           1       0.64      0.66      0.65        32

    accuracy                           0.52        48
   macro avg       0.45      0.45      0.45        48
weighted avg       0.51      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.33      0.44        24
           1       0.56      0.83      0.67        24

    accuracy                           0.58        48
   macro avg       0.61      0.58      0.56        48
weighted avg       0.61      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.37      0.39        19
           1       0.61      0.66      0.63        29

    accuracy                           0.54        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.53      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.56      0.38      0.45        26
           1       0.47      0.64      0.54        22

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.51      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.32      0.42        25
           1       0.51      0.78      0.62        23

    accuracy                           0.54        48
   macro avg       0.56      0.55      0.52        48
weighted avg       0.57      0.54      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.55      0.56        22
           1       0.63      0.65      0.64        26

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.43      0.43        23
           1       0.48      0.48      0.48        25

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.50      0.48        20
           1       0.62      0.57      0.59        28

    accuracy                           0.54        48
   macro avg       0.53      0.54      0.53        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.38      0.29      0.32        21
           1       0.53      0.63      0.58        27

    accuracy                           0.48        48
   macro avg       0.45      0.46      0.45        48
weighted avg       0.46      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.57      0.19      0.29        21
           1       0.59      0.89      0.71        27

    accuracy                           0.58        48
   macro avg       0.58      0.54      0.50        48
weighted avg       0.58      0.58      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.29      0.50      0.37        14
           1       0.71      0.50      0.59        34

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.48        48
weighted avg       0.59      0.50      0.52        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.47      0.40      0.43        20
           1       0.61      0.68      0.64        28

    accuracy                           0.56        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.55      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.43      0.38      0.40        24
           1       0.44      0.50      0.47        24

    accuracy                           0.44        48
   macro avg       0.44      0.44      0.44        48
weighted avg       0.44      0.44      0.44        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.57      0.13      0.22        30
           1       0.37      0.83      0.51        18

    accuracy                           0.40        48
   macro avg       0.47      0.48      0.36        48
weighted avg       0.49      0.40      0.33        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.41      0.52      0.46        21
           1       0.52      0.41      0.46        27

    accuracy                           0.46        48
   macro avg       0.47      0.47      0.46        48
weighted avg       0.47      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.68      0.57      0.62        23
           1       0.66      0.76      0.70        25

    accuracy                           0.67        48
   macro avg       0.67      0.66      0.66        48
weighted avg       0.67      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.35      0.39        20
           1       0.59      0.68      0.63        28

    accuracy                           0.54        48
   macro avg       0.52      0.51      0.51        48
weighted avg       0.53      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.37      0.53      0.43        19
           1       0.57      0.41      0.48        29

    accuracy                           0.46        48
   macro avg       0.47      0.47      0.46        48
weighted avg       0.49      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.54      0.28      0.37        25
           1       0.49      0.74      0.59        23

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.48        48
weighted avg       0.51      0.50      0.47        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.46      0.49        26
           1       0.44      0.50      0.47        22

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.46      0.61      0.52        18
           1       0.71      0.57      0.63        30

    accuracy                           0.58        48
   macro avg       0.58      0.59      0.58        48
weighted avg       0.61      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.16      0.25        25
           1       0.49      0.87      0.62        23

    accuracy                           0.50        48
   macro avg       0.53      0.51      0.44        48
weighted avg       0.53      0.50      0.43        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.75      0.11      0.19        27
           1       0.45      0.95      0.62        21

    accuracy                           0.48        48
   macro avg       0.60      0.53      0.40        48
weighted avg       0.62      0.48      0.38        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.44      0.17      0.24        24
           1       0.49      0.79      0.60        24

    accuracy                           0.48        48
   macro avg       0.47      0.48      0.42        48
weighted avg       0.47      0.48      0.42        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.42      0.43        19
           1       0.63      0.66      0.64        29

    accuracy                           0.56        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.52      0.61      0.56        18
           1       0.74      0.67      0.70        30

    accuracy                           0.65        48
   macro avg       0.63      0.64      0.63        48
weighted avg       0.66      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.50      0.52        22
           1       0.61      0.65      0.63        26

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.50      0.53        26
           1       0.48      0.55      0.51        22

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.50      0.23      0.31        22
           1       0.55      0.81      0.66        26

    accuracy                           0.54        48
   macro avg       0.53      0.52      0.48        48
weighted avg       0.53      0.54      0.50        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.39      0.45        23
           1       0.55      0.68      0.61        25

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.54      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.50      0.52        24
           1       0.54      0.58      0.56        24

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.32      0.40      0.35        15
           1       0.69      0.61      0.65        33

    accuracy                           0.54        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.57      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.68      0.60      0.64        25
           1       0.62      0.70      0.65        23

    accuracy                           0.65        48
   macro avg       0.65      0.65      0.65        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        31
           1       0.35      1.00      0.52        17

    accuracy                           0.35        48
   macro avg       0.18      0.50      0.26        48
weighted avg       0.13      0.35      0.19        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.36      0.28      0.31        18
           1       0.62      0.70      0.66        30

    accuracy                           0.54        48
   macro avg       0.49      0.49      0.48        48
weighted avg       0.52      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.59      0.52      0.55        25
           1       0.54      0.61      0.57        23

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.52      0.50      0.51        22
           1       0.59      0.62      0.60        26

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.43      0.42        21
           1       0.54      0.52      0.53        27

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.45      0.64      0.53        22
           1       0.53      0.35      0.42        26

    accuracy                           0.48        48
   macro avg       0.49      0.49      0.47        48
weighted avg       0.49      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       1.00      0.14      0.25        21
           1       0.60      1.00      0.75        27

    accuracy                           0.62        48
   macro avg       0.80      0.57      0.50        48
weighted avg       0.78      0.62      0.53        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.50      0.45        18
           1       0.65      0.57      0.61        30

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.56      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.47      0.44        19
           1       0.62      0.55      0.58        29

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.53      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.20      0.33      0.25        12
           1       0.71      0.56      0.63        36

    accuracy                           0.50        48
   macro avg       0.46      0.44      0.44        48
weighted avg       0.59      0.50      0.53        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.48      0.49        23
           1       0.54      0.56      0.55        25

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.78      0.28      0.41        25
           1       0.54      0.91      0.68        23

    accuracy                           0.58        48
   macro avg       0.66      0.60      0.54        48
weighted avg       0.66      0.58      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.58      0.50        19
           1       0.65      0.52      0.58        29

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.57      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.37      0.39        19
           1       0.61      0.66      0.63        29

    accuracy                           0.54        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.53      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.44      0.37      0.40        19
           1       0.62      0.69      0.66        29

    accuracy                           0.56        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.55      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.50      0.29      0.36        21
           1       0.58      0.78      0.67        27

    accuracy                           0.56        48
   macro avg       0.54      0.53      0.52        48
weighted avg       0.55      0.56      0.53        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.57      0.52      0.55        23
           1       0.59      0.64      0.62        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.57      0.62      0.59        21
           1       0.68      0.63      0.65        27

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.42      0.36      0.39        22
           1       0.52      0.58      0.55        26

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.47      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.45      0.38      0.41        24
           1       0.46      0.54      0.50        24

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.45        48
weighted avg       0.46      0.46      0.45        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.37      0.41      0.39        17
           1       0.66      0.61      0.63        31

    accuracy                           0.54        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.55      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.55      0.44      0.49        25
           1       0.50      0.61      0.55        23

    accuracy                           0.52        48
   macro avg       0.53      0.52      0.52        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.48      0.51        21
           1       0.63      0.70      0.67        27

    accuracy                           0.60        48
   macro avg       0.59      0.59      0.59        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.46      0.53        28
           1       0.44      0.60      0.51        20

    accuracy                           0.52        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.55      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.36      0.42        22
           1       0.56      0.69      0.62        26

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.53      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.67      0.15      0.25        26
           1       0.48      0.91      0.62        22

    accuracy                           0.50        48
   macro avg       0.57      0.53      0.44        48
weighted avg       0.58      0.50      0.42        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.45      0.45      0.45        22
           1       0.54      0.54      0.54        26

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.65      0.44      0.52        25
           1       0.55      0.74      0.63        23

    accuracy                           0.58        48
   macro avg       0.60      0.59      0.58        48
weighted avg       0.60      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.40      0.44      0.42        18
           1       0.64      0.60      0.62        30

    accuracy                           0.54        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.55      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.36      0.42        25
           1       0.47      0.61      0.53        23

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.47        48
weighted avg       0.48      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.27      0.33      0.30        18
           1       0.54      0.47      0.50        30

    accuracy                           0.42        48
   macro avg       0.41      0.40      0.40        48
weighted avg       0.44      0.42      0.42        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.41      0.45        22
           1       0.57      0.65      0.61        26

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.83      0.58      0.68        26
           1       0.63      0.86      0.73        22

    accuracy                           0.71        48
   macro avg       0.73      0.72      0.71        48
weighted avg       0.74      0.71      0.70        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.28      0.31      0.29        16
           1       0.63      0.59      0.61        32

    accuracy                           0.50        48
   macro avg       0.46      0.45      0.45        48
weighted avg       0.51      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.45      0.53        22
           1       0.62      0.77      0.69        26

    accuracy                           0.62        48
   macro avg       0.62      0.61      0.61        48
weighted avg       0.62      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       1.00      0.04      0.08        24
           1       0.51      1.00      0.68        24

    accuracy                           0.52        48
   macro avg       0.76      0.52      0.38        48
weighted avg       0.76      0.52      0.38        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.50      0.13      0.21        23
           1       0.52      0.88      0.66        25

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.43        48
weighted avg       0.51      0.52      0.44        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.23      0.27        22
           1       0.48      0.62      0.54        26

    accuracy                           0.44        48
   macro avg       0.41      0.42      0.41        48
weighted avg       0.42      0.44      0.42        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.71      0.41      0.52        29
           1       0.45      0.74      0.56        19

    accuracy                           0.54        48
   macro avg       0.58      0.58      0.54        48
weighted avg       0.61      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=0.1, gamma=1)
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        27
           1       0.44      1.00      0.61        21

    accuracy                           0.44        48
   macro avg       0.22      0.50      0.30        48
weighted avg       0.19      0.44      0.27        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.57      0.38      0.46        21
           1       0.62      0.78      0.69        27

    accuracy                           0.60        48
   macro avg       0.59      0.58      0.57        48
weighted avg       0.60      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.46      0.46      0.46        24
           1       0.46      0.46      0.46        24

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.69      0.46      0.55        24
           1       0.59      0.79      0.68        24

    accuracy                           0.62        48
   macro avg       0.64      0.62      0.61        48
weighted avg       0.64      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=0.1, gamma=1)
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        26
           1       0.46      1.00      0.63        22

    accuracy                           0.46        48
   macro avg       0.23      0.50      0.31        48
weighted avg       0.21      0.46      0.29        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.41      0.33      0.37        21
           1       0.55      0.63      0.59        27

    accuracy                           0.50        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.49      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.62      0.59      0.60        22
           1       0.67      0.69      0.68        26

    accuracy                           0.65        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.64      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.46      0.57      0.51        21
           1       0.59      0.48      0.53        27

    accuracy                           0.52        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.43      0.53      0.48        19
           1       0.64      0.55      0.59        29

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.56      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.45      0.50        22
           1       0.60      0.69      0.64        26

    accuracy                           0.58        48
   macro avg       0.58      0.57      0.57        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.40      0.57      0.47        21
           1       0.50      0.33      0.40        27

    accuracy                           0.44        48
   macro avg       0.45      0.45      0.44        48
weighted avg       0.46      0.44      0.43        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.60      0.58      0.59        26
           1       0.52      0.55      0.53        22

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.55      0.63      0.59        19
           1       0.73      0.66      0.69        29

    accuracy                           0.65        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.66      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.44      0.30      0.36        23
           1       0.50      0.64      0.56        25

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.46        48
weighted avg       0.47      0.48      0.46        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.65      0.52        17
           1       0.74      0.55      0.63        31

    accuracy                           0.58        48
   macro avg       0.59      0.60      0.58        48
weighted avg       0.63      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.42      0.48        24
           1       0.53      0.67      0.59        24

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.54      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.43      0.41      0.42        22
           1       0.52      0.54      0.53        26

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.40      0.36        20
           1       0.50      0.43      0.46        28

    accuracy                           0.42        48
   macro avg       0.42      0.41      0.41        48
weighted avg       0.43      0.42      0.42        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.45      0.53      0.49        19
           1       0.65      0.59      0.62        29

    accuracy                           0.56        48
   macro avg       0.55      0.56      0.55        48
weighted avg       0.57      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.55      0.57        22
           1       0.64      0.69      0.67        26

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.35      0.33      0.34        18
           1       0.61      0.63      0.62        30

    accuracy                           0.52        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.39      0.39        18
           1       0.63      0.63      0.63        30

    accuracy                           0.54        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.59      0.76      0.67        17
           1       0.85      0.71      0.77        31

    accuracy                           0.73        48
   macro avg       0.72      0.74      0.72        48
weighted avg       0.76      0.73      0.73        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.73      0.64      0.68        25
           1       0.65      0.74      0.69        23

    accuracy                           0.69        48
   macro avg       0.69      0.69      0.69        48
weighted avg       0.69      0.69      0.69        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.42      0.45        24
           1       0.50      0.58      0.54        24

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.81      0.45      0.58        29
           1       0.50      0.84      0.63        19

    accuracy                           0.60        48
   macro avg       0.66      0.65      0.60        48
weighted avg       0.69      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.67      0.16      0.26        25
           1       0.50      0.91      0.65        23

    accuracy                           0.52        48
   macro avg       0.58      0.54      0.45        48
weighted avg       0.59      0.52      0.44        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.53      0.49        19
           1       0.65      0.59      0.62        29

    accuracy                           0.56        48
   macro avg       0.55      0.56      0.55        48
weighted avg       0.57      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.76      0.59        17
           1       0.81      0.55      0.65        31

    accuracy                           0.62        48
   macro avg       0.65      0.66      0.62        48
weighted avg       0.69      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.46      0.63      0.53        19
           1       0.68      0.52      0.59        29

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.59      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.56      0.54        18
           1       0.72      0.70      0.71        30

    accuracy                           0.65        48
   macro avg       0.63      0.63      0.63        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.59      0.45      0.51        22
           1       0.61      0.73      0.67        26

    accuracy                           0.60        48
   macro avg       0.60      0.59      0.59        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.58      0.32      0.41        22
           1       0.58      0.81      0.68        26

    accuracy                           0.58        48
   macro avg       0.58      0.56      0.54        48
weighted avg       0.58      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.57      0.55      0.56        22
           1       0.63      0.65      0.64        26

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.67      0.61      0.64        23
           1       0.67      0.72      0.69        25

    accuracy                           0.67        48
   macro avg       0.67      0.66      0.66        48
weighted avg       0.67      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.62      0.59      0.60        22
           1       0.67      0.69      0.68        26

    accuracy                           0.65        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.64      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.62      0.58      0.60        26
           1       0.54      0.59      0.57        22

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.59      0.50      0.54        20
           1       0.68      0.75      0.71        28

    accuracy                           0.65        48
   macro avg       0.63      0.62      0.63        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.52      0.84      0.64        19
           1       0.82      0.48      0.61        29

    accuracy                           0.62        48
   macro avg       0.67      0.66      0.62        48
weighted avg       0.70      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.30      0.35      0.32        17
           1       0.61      0.55      0.58        31

    accuracy                           0.48        48
   macro avg       0.45      0.45      0.45        48
weighted avg       0.50      0.48      0.49        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.46      0.29      0.35        21
           1       0.57      0.74      0.65        27

    accuracy                           0.54        48
   macro avg       0.52      0.51      0.50        48
weighted avg       0.52      0.54      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.57      0.24      0.33        17
           1       0.68      0.90      0.78        31

    accuracy                           0.67        48
   macro avg       0.63      0.57      0.56        48
weighted avg       0.64      0.67      0.62        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.39      0.45        23
           1       0.55      0.68      0.61        25

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.54      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.67      0.52      0.59        23
           1       0.63      0.76      0.69        25

    accuracy                           0.65        48
   macro avg       0.65      0.64      0.64        48
weighted avg       0.65      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.71      0.50      0.59        24
           1       0.61      0.79      0.69        24

    accuracy                           0.65        48
   macro avg       0.66      0.65      0.64        48
weighted avg       0.66      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.52      0.53        25
           1       0.50      0.52      0.51        23

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.69      0.41      0.51        27
           1       0.50      0.76      0.60        21

    accuracy                           0.56        48
   macro avg       0.59      0.58      0.56        48
weighted avg       0.61      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.77      0.32      0.45        31
           1       0.40      0.82      0.54        17

    accuracy                           0.50        48
   macro avg       0.58      0.57      0.50        48
weighted avg       0.64      0.50      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.53      0.49        17
           1       0.71      0.65      0.68        31

    accuracy                           0.60        48
   macro avg       0.58      0.59      0.58        48
weighted avg       0.62      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.43      0.56      0.49        16
           1       0.74      0.62      0.68        32

    accuracy                           0.60        48
   macro avg       0.58      0.59      0.58        48
weighted avg       0.64      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.44      0.46        18
           1       0.68      0.70      0.69        30

    accuracy                           0.60        48
   macro avg       0.57      0.57      0.57        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.68      0.59      0.63        22
           1       0.69      0.77      0.73        26

    accuracy                           0.69        48
   macro avg       0.69      0.68      0.68        48
weighted avg       0.69      0.69      0.68        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.56      0.40      0.47        25
           1       0.50      0.65      0.57        23

    accuracy                           0.52        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.53      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.26      0.34        27
           1       0.41      0.67      0.51        21

    accuracy                           0.44        48
   macro avg       0.46      0.46      0.43        48
weighted avg       0.46      0.44      0.41        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.83      0.20      0.32        25
           1       0.52      0.96      0.68        23

    accuracy                           0.56        48
   macro avg       0.68      0.58      0.50        48
weighted avg       0.69      0.56      0.49        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.45      0.49        22
           1       0.59      0.65      0.62        26

    accuracy                           0.56        48
   macro avg       0.56      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.68      0.62      0.65        21
           1       0.72      0.78      0.75        27

    accuracy                           0.71        48
   macro avg       0.70      0.70      0.70        48
weighted avg       0.71      0.71      0.71        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.83      0.19      0.30        27
           1       0.48      0.95      0.63        21

    accuracy                           0.52        48
   macro avg       0.65      0.57      0.47        48
weighted avg       0.68      0.52      0.45        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.29      0.31        17
           1       0.64      0.68      0.66        31

    accuracy                           0.54        48
   macro avg       0.48      0.49      0.48        48
weighted avg       0.53      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.42      0.51        26
           1       0.52      0.73      0.60        22

    accuracy                           0.56        48
   macro avg       0.58      0.58      0.56        48
weighted avg       0.59      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.47      0.42      0.44        19
           1       0.65      0.69      0.67        29

    accuracy                           0.58        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.65      0.42      0.51        26
           1       0.52      0.73      0.60        22

    accuracy                           0.56        48
   macro avg       0.58      0.58      0.56        48
weighted avg       0.59      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.59      0.52      0.55        25
           1       0.54      0.61      0.57        23

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.41      0.49        22
           1       0.61      0.77      0.68        26

    accuracy                           0.60        48
   macro avg       0.60      0.59      0.58        48
weighted avg       0.60      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.50      0.44        20
           1       0.57      0.46      0.51        28

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.50      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.47      0.32      0.38        25
           1       0.45      0.61      0.52        23

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.45        48
weighted avg       0.46      0.46      0.45        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.73      0.32      0.44        25
           1       0.54      0.87      0.67        23

    accuracy                           0.58        48
   macro avg       0.63      0.59      0.56        48
weighted avg       0.64      0.58      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.22      0.30        23
           1       0.53      0.80      0.63        25

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.47        48
weighted avg       0.51      0.52      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.48      0.55        23
           1       0.61      0.76      0.68        25

    accuracy                           0.62        48
   macro avg       0.63      0.62      0.61        48
weighted avg       0.63      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.56      0.54      0.55        26
           1       0.48      0.50      0.49        22

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.001)
              precision    recall  f1-score   support

           0       0.44      0.31      0.36        13
           1       0.77      0.86      0.81        35

    accuracy                           0.71        48
   macro avg       0.61      0.58      0.59        48
weighted avg       0.68      0.71      0.69        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.40      0.47        25
           1       0.50      0.65      0.57        23

    accuracy                           0.52        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.53      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.33      0.50      0.40        14
           1       0.74      0.59      0.66        34

    accuracy                           0.56        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.62      0.56      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.71      0.55      0.62        22
           1       0.68      0.81      0.74        26

    accuracy                           0.69        48
   macro avg       0.69      0.68      0.68        48
weighted avg       0.69      0.69      0.68        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.61      0.50      0.55        22
           1       0.63      0.73      0.68        26

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.50      0.46        18
           1       0.67      0.60      0.63        30

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.58      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.35      0.43        23
           1       0.56      0.76      0.64        25

    accuracy                           0.56        48
   macro avg       0.57      0.55      0.54        48
weighted avg       0.56      0.56      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.31      0.18      0.23        22
           1       0.49      0.65      0.56        26

    accuracy                           0.44        48
   macro avg       0.40      0.42      0.39        48
weighted avg       0.40      0.44      0.41        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.48      0.58      0.52        19
           1       0.68      0.59      0.63        29

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.60      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.57      0.31      0.40        26
           1       0.47      0.73      0.57        22

    accuracy                           0.50        48
   macro avg       0.52      0.52      0.49        48
weighted avg       0.53      0.50      0.48        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.35      0.38      0.36        21
           1       0.48      0.44      0.46        27

    accuracy                           0.42        48
   macro avg       0.41      0.41      0.41        48
weighted avg       0.42      0.42      0.42        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.55      0.29      0.37        21
           1       0.59      0.81      0.69        27

    accuracy                           0.58        48
   macro avg       0.57      0.55      0.53        48
weighted avg       0.57      0.58      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.61      0.41      0.49        27
           1       0.47      0.67      0.55        21

    accuracy                           0.52        48
   macro avg       0.54      0.54      0.52        48
weighted avg       0.55      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=0.1, gamma=1)
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        27
           1       0.44      1.00      0.61        21

    accuracy                           0.44        48
   macro avg       0.22      0.50      0.30        48
weighted avg       0.19      0.44      0.27        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.39      0.38        23
           1       0.42      0.40      0.41        25

    accuracy                           0.40        48
   macro avg       0.40      0.40      0.40        48
weighted avg       0.40      0.40      0.40        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.69      0.35      0.46        26
           1       0.51      0.82      0.63        22

    accuracy                           0.56        48
   macro avg       0.60      0.58      0.55        48
weighted avg       0.61      0.56      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.50      0.13      0.21        23
           1       0.52      0.88      0.66        25

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.43        48
weighted avg       0.51      0.52      0.44        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.29      0.37        24
           1       0.50      0.71      0.59        24

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.48        48
weighted avg       0.50      0.50      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.78      0.30      0.44        23
           1       0.59      0.92      0.72        25

    accuracy                           0.62        48
   macro avg       0.68      0.61      0.58        48
weighted avg       0.68      0.62      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.63      0.50      0.56        24
           1       0.59      0.71      0.64        24

    accuracy                           0.60        48
   macro avg       0.61      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.47      0.50        19
           1       0.68      0.72      0.70        29

    accuracy                           0.62        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.57      0.57      0.57        21
           1       0.67      0.67      0.67        27

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.46      0.71      0.56        17
           1       0.77      0.55      0.64        31

    accuracy                           0.60        48
   macro avg       0.62      0.63      0.60        48
weighted avg       0.66      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.48      0.52      0.50        21
           1       0.60      0.56      0.58        27

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.59      0.43      0.50        23
           1       0.58      0.72      0.64        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.57        48
weighted avg       0.58      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.52      0.75      0.61        20
           1       0.74      0.50      0.60        28

    accuracy                           0.60        48
   macro avg       0.63      0.62      0.60        48
weighted avg       0.65      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.57      0.54      0.55        24
           1       0.56      0.58      0.57        24

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.40      0.48        25
           1       0.52      0.70      0.59        23

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.53        48
weighted avg       0.55      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.37      0.41        19
           1       0.64      0.72      0.68        29

    accuracy                           0.58        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.57      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.41      0.55      0.47        20
           1       0.57      0.43      0.49        28

    accuracy                           0.48        48
   macro avg       0.49      0.49      0.48        48
weighted avg       0.50      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.44      0.53        27
           1       0.50      0.71      0.59        21

    accuracy                           0.56        48
   macro avg       0.58      0.58      0.56        48
weighted avg       0.59      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.1)
              precision    recall  f1-score   support

           0       0.52      0.57      0.54        23
           1       0.57      0.52      0.54        25

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.35      0.37      0.36        19
           1       0.57      0.55      0.56        29

    accuracy                           0.48        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.67      0.62      0.64        26
           1       0.58      0.64      0.61        22

    accuracy                           0.62        48
   macro avg       0.62      0.63      0.62        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.52      0.52      0.52        23
           1       0.56      0.56      0.56        25

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.55      0.55        22
           1       0.62      0.62      0.62        26

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.58      0.52      0.55        21
           1       0.66      0.70      0.68        27

    accuracy                           0.62        48
   macro avg       0.62      0.61      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.26      0.35      0.30        17
           1       0.56      0.45      0.50        31

    accuracy                           0.42        48
   macro avg       0.41      0.40      0.40        48
weighted avg       0.45      0.42      0.43        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.63      0.52      0.57        23
           1       0.62      0.72      0.67        25

    accuracy                           0.62        48
   macro avg       0.63      0.62      0.62        48
weighted avg       0.63      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.44      0.46        18
           1       0.68      0.70      0.69        30

    accuracy                           0.60        48
   macro avg       0.57      0.57      0.57        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.41      0.46        22
           1       0.58      0.69      0.63        26

    accuracy                           0.56        48
   macro avg       0.56      0.55      0.55        48
weighted avg       0.56      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.44      0.65      0.52        17
           1       0.74      0.55      0.63        31

    accuracy                           0.58        48
   macro avg       0.59      0.60      0.58        48
weighted avg       0.63      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.25      0.05      0.08        20
           1       0.57      0.89      0.69        28

    accuracy                           0.54        48
   macro avg       0.41      0.47      0.39        48
weighted avg       0.44      0.54      0.44        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.52      0.55      0.53        22
           1       0.60      0.58      0.59        26

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.45      0.51        22
           1       0.61      0.73      0.67        26

    accuracy                           0.60        48
   macro avg       0.60      0.59      0.59        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.47      0.36      0.41        22
           1       0.55      0.65      0.60        26

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.51      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.31      0.26      0.29        19
           1       0.56      0.62      0.59        29

    accuracy                           0.48        48
   macro avg       0.44      0.44      0.44        48
weighted avg       0.46      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.35      0.37        23
           1       0.46      0.52      0.49        25

    accuracy                           0.44        48
   macro avg       0.43      0.43      0.43        48
weighted avg       0.43      0.44      0.43        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.59      0.50        17
           1       0.72      0.58      0.64        31

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.57        48
weighted avg       0.62      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.67      0.60      0.63        20
           1       0.73      0.79      0.76        28

    accuracy                           0.71        48
   macro avg       0.70      0.69      0.70        48
weighted avg       0.71      0.71      0.71        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.29      0.37        21
           1       0.59      0.81      0.69        27

    accuracy                           0.58        48
   macro avg       0.57      0.55      0.53        48
weighted avg       0.57      0.58      0.55        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.46      0.32      0.37        19
           1       0.63      0.76      0.69        29

    accuracy                           0.58        48
   macro avg       0.55      0.54      0.53        48
weighted avg       0.56      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.41      0.46        22
           1       0.58      0.69      0.63        26

    accuracy                           0.56        48
   macro avg       0.56      0.55      0.55        48
weighted avg       0.56      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.48      0.48      0.48        23
           1       0.52      0.52      0.52        25

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.36      0.46        25
           1       0.53      0.78      0.63        23

    accuracy                           0.56        48
   macro avg       0.59      0.57      0.55        48
weighted avg       0.59      0.56      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.53      0.45        19
           1       0.61      0.48      0.54        29

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.53      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.57      0.62      0.59        21
           1       0.68      0.63      0.65        27

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.39      0.58      0.47        19
           1       0.60      0.41      0.49        29

    accuracy                           0.48        48
   macro avg       0.50      0.50      0.48        48
weighted avg       0.52      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.27      0.47      0.34        17
           1       0.50      0.29      0.37        31

    accuracy                           0.35        48
   macro avg       0.38      0.38      0.35        48
weighted avg       0.42      0.35      0.36        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.45      0.41        20
           1       0.54      0.46      0.50        28

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.45        48
weighted avg       0.47      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.53      0.47        19
           1       0.62      0.52      0.57        29

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.54      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.62      0.57      0.59        28
           1       0.45      0.50      0.48        20

    accuracy                           0.54        48
   macro avg       0.53      0.54      0.53        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.38      0.40      0.39        20
           1       0.56      0.54      0.55        28

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.80      0.55      0.65        29
           1       0.54      0.79      0.64        19

    accuracy                           0.65        48
   macro avg       0.67      0.67      0.65        48
weighted avg       0.70      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.56      0.25      0.34        20
           1       0.62      0.86      0.72        28

    accuracy                           0.60        48
   macro avg       0.59      0.55      0.53        48
weighted avg       0.59      0.60      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.36      0.42        22
           1       0.56      0.69      0.62        26

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.53      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.45      0.50        20
           1       0.66      0.75      0.70        28

    accuracy                           0.62        48
   macro avg       0.61      0.60      0.60        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.46      0.49        24
           1       0.52      0.58      0.55        24

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.38      0.47        26
           1       0.48      0.68      0.57        22

    accuracy                           0.52        48
   macro avg       0.54      0.53      0.52        48
weighted avg       0.54      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.57      0.50      0.53        26
           1       0.48      0.55      0.51        22

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.37      0.39        19
           1       0.61      0.66      0.63        29

    accuracy                           0.54        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.53      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.80      0.20      0.32        20
           1       0.63      0.96      0.76        28

    accuracy                           0.65        48
   macro avg       0.71      0.58      0.54        48
weighted avg       0.70      0.65      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.36      0.17      0.24        23
           1       0.49      0.72      0.58        25

    accuracy                           0.46        48
   macro avg       0.43      0.45      0.41        48
weighted avg       0.43      0.46      0.42        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.31      0.38        29
           1       0.33      0.53      0.41        19

    accuracy                           0.40        48
   macro avg       0.42      0.42      0.40        48
weighted avg       0.43      0.40      0.39        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.43      0.47        21
           1       0.61      0.70      0.66        27

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.72      0.54      0.62        24
           1       0.63      0.79      0.70        24

    accuracy                           0.67        48
   macro avg       0.68      0.67      0.66        48
weighted avg       0.68      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.58      0.30      0.40        23
           1       0.56      0.80      0.66        25

    accuracy                           0.56        48
   macro avg       0.57      0.55      0.53        48
weighted avg       0.57      0.56      0.53        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.48      0.48      0.48        23
           1       0.52      0.52      0.52        25

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.63      0.62        19
           1       0.75      0.72      0.74        29

    accuracy                           0.69        48
   macro avg       0.68      0.68      0.68        48
weighted avg       0.69      0.69      0.69        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.37      0.38        19
           1       0.60      0.62      0.61        29

    accuracy                           0.52        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.56      0.53        18
           1       0.71      0.67      0.69        30

    accuracy                           0.62        48
   macro avg       0.61      0.61      0.61        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.40      0.47        25
           1       0.50      0.65      0.57        23

    accuracy                           0.52        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.53      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.50      0.62      0.55        21
           1       0.64      0.52      0.57        27

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.58      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.59      0.43      0.50        23
           1       0.58      0.72      0.64        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.57        48
weighted avg       0.58      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.52      0.50        21
           1       0.60      0.56      0.58        27

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.36      0.40        22
           1       0.53      0.62      0.57        26

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.49      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.40      0.59      0.48        17
           1       0.70      0.52      0.59        31

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.53        48
weighted avg       0.59      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.71      0.42      0.53        24
           1       0.59      0.83      0.69        24

    accuracy                           0.62        48
   macro avg       0.65      0.62      0.61        48
weighted avg       0.65      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.48      0.45      0.47        22
           1       0.56      0.58      0.57        26

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.47      0.47        19
           1       0.66      0.66      0.66        29

    accuracy                           0.58        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.41      0.44        17
           1       0.70      0.74      0.72        31

    accuracy                           0.62        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.55      0.48      0.51        25
           1       0.50      0.57      0.53        23

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.60      0.41      0.49        22
           1       0.61      0.77      0.68        26

    accuracy                           0.60        48
   macro avg       0.60      0.59      0.58        48
weighted avg       0.60      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.35      0.29      0.32        21
           1       0.52      0.59      0.55        27

    accuracy                           0.46        48
   macro avg       0.43      0.44      0.43        48
weighted avg       0.44      0.46      0.45        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.34      0.48      0.40        21
           1       0.42      0.30      0.35        27

    accuracy                           0.38        48
   macro avg       0.38      0.39      0.37        48
weighted avg       0.39      0.38      0.37        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.31      0.25      0.28        20
           1       0.53      0.61      0.57        28

    accuracy                           0.46        48
   macro avg       0.42      0.43      0.42        48
weighted avg       0.44      0.46      0.45        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.61      0.58      0.59        19
           1       0.73      0.76      0.75        29

    accuracy                           0.69        48
   macro avg       0.67      0.67      0.67        48
weighted avg       0.68      0.69      0.69        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.50      0.68      0.58        22
           1       0.61      0.42      0.50        26

    accuracy                           0.54        48
   macro avg       0.56      0.55      0.54        48
weighted avg       0.56      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.69      0.39      0.50        23
           1       0.60      0.84      0.70        25

    accuracy                           0.62        48
   macro avg       0.65      0.62      0.60        48
weighted avg       0.64      0.62      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.36      0.40        25
           1       0.43      0.52      0.47        23

    accuracy                           0.44        48
   macro avg       0.44      0.44      0.44        48
weighted avg       0.44      0.44      0.43        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.55      0.55        22
           1       0.62      0.62      0.62        26

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.41      0.28      0.33        25
           1       0.42      0.57      0.48        23

    accuracy                           0.42        48
   macro avg       0.42      0.42      0.41        48
weighted avg       0.42      0.42      0.40        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.30      0.41        27
           1       0.47      0.81      0.60        21

    accuracy                           0.52        48
   macro avg       0.57      0.55      0.50        48
weighted avg       0.58      0.52      0.49        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.58      0.32      0.41        22
           1       0.58      0.81      0.68        26

    accuracy                           0.58        48
   macro avg       0.58      0.56      0.54        48
weighted avg       0.58      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.27      0.37        22
           1       0.58      0.85      0.69        26

    accuracy                           0.58        48
   macro avg       0.59      0.56      0.53        48
weighted avg       0.59      0.58      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.36      0.41        22
           1       0.55      0.65      0.60        26

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.51      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.57      0.42      0.48        19
           1       0.68      0.79      0.73        29

    accuracy                           0.65        48
   macro avg       0.62      0.61      0.61        48
weighted avg       0.63      0.65      0.63        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.44      0.40      0.42        20
           1       0.60      0.64      0.62        28

    accuracy                           0.54        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.54      0.59      0.57        22
           1       0.62      0.58      0.60        26

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.45      0.48        22
           1       0.57      0.62      0.59        26

    accuracy                           0.54        48
   macro avg       0.54      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.43      0.62      0.51        21
           1       0.56      0.37      0.44        27

    accuracy                           0.48        48
   macro avg       0.49      0.49      0.48        48
weighted avg       0.50      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.48      0.50        25
           1       0.48      0.52      0.50        23

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.58      0.42      0.49        26
           1       0.48      0.64      0.55        22

    accuracy                           0.52        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.43      0.32      0.36        19
           1       0.62      0.72      0.67        29

    accuracy                           0.56        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.54      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.35      0.42        23
           1       0.55      0.72      0.62        25

    accuracy                           0.54        48
   macro avg       0.54      0.53      0.52        48
weighted avg       0.54      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.59      0.48      0.53        21
           1       0.65      0.74      0.69        27

    accuracy                           0.62        48
   macro avg       0.62      0.61      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.60      0.13      0.21        23
           1       0.53      0.92      0.68        25

    accuracy                           0.54        48
   macro avg       0.57      0.53      0.45        48
weighted avg       0.57      0.54      0.46        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.41      0.44        22
           1       0.55      0.62      0.58        26

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.45      0.41      0.43        22
           1       0.54      0.58      0.56        26

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.43      0.45        23
           1       0.52      0.56      0.54        25

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.54      0.64      0.58        22
           1       0.64      0.54      0.58        26

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.56      0.19      0.29        26
           1       0.46      0.82      0.59        22

    accuracy                           0.48        48
   macro avg       0.51      0.51      0.44        48
weighted avg       0.51      0.48      0.43        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.42      0.56      0.48        18
           1       0.67      0.53      0.59        30

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.57      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.21      0.30        19
           1       0.62      0.86      0.72        29

    accuracy                           0.60        48
   macro avg       0.56      0.54      0.51        48
weighted avg       0.58      0.60      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.55      0.48      0.51        23
           1       0.57      0.64      0.60        25

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.62      0.61        24
           1       0.61      0.58      0.60        24

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.56      0.59      0.57        17
           1       0.77      0.74      0.75        31

    accuracy                           0.69        48
   macro avg       0.66      0.67      0.66        48
weighted avg       0.69      0.69      0.69        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.69      0.35      0.46        26
           1       0.51      0.82      0.63        22

    accuracy                           0.56        48
   macro avg       0.60      0.58      0.55        48
weighted avg       0.61      0.56      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.52      0.55        23
           1       0.59      0.64      0.62        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.55      0.44      0.49        25
           1       0.50      0.61      0.55        23

    accuracy                           0.52        48
   macro avg       0.53      0.52      0.52        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.42      0.68      0.52        19
           1       0.65      0.38      0.48        29

    accuracy                           0.50        48
   macro avg       0.53      0.53      0.50        48
weighted avg       0.56      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.41      0.49        22
           1       0.61      0.77      0.68        26

    accuracy                           0.60        48
   macro avg       0.60      0.59      0.58        48
weighted avg       0.60      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.59      0.56        17
           1       0.76      0.71      0.73        31

    accuracy                           0.67        48
   macro avg       0.64      0.65      0.64        48
weighted avg       0.68      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.15      0.23        20
           1       0.60      0.89      0.71        28

    accuracy                           0.58        48
   macro avg       0.55      0.52      0.47        48
weighted avg       0.56      0.58      0.51        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.43      0.67      0.52        18
           1       0.70      0.47      0.56        30

    accuracy                           0.54        48
   macro avg       0.56      0.57      0.54        48
weighted avg       0.60      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.55      0.51        22
           1       0.57      0.50      0.53        26

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.55      0.50      0.52        22
           1       0.61      0.65      0.63        26

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.47      0.39        17
           1       0.62      0.48      0.55        31

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.47        48
weighted avg       0.52      0.48      0.49        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.58      0.61      0.60        23
           1       0.62      0.60      0.61        25

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.64      0.56      0.60        25
           1       0.58      0.65      0.61        23

    accuracy                           0.60        48
   macro avg       0.61      0.61      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.38      0.35      0.36        23
           1       0.44      0.48      0.46        25

    accuracy                           0.42        48
   macro avg       0.41      0.41      0.41        48
weighted avg       0.41      0.42      0.41        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.63      0.59        19
           1       0.73      0.66      0.69        29

    accuracy                           0.65        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.66      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.40      0.42        20
           1       0.60      0.64      0.62        28

    accuracy                           0.54        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.57      0.15      0.24        27
           1       0.44      0.86      0.58        21

    accuracy                           0.46        48
   macro avg       0.51      0.50      0.41        48
weighted avg       0.51      0.46      0.39        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.40      0.71      0.51        17
           1       0.72      0.42      0.53        31

    accuracy                           0.52        48
   macro avg       0.56      0.56      0.52        48
weighted avg       0.61      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.52      0.61      0.56        23
           1       0.57      0.48      0.52        25

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.46      0.57      0.51        21
           1       0.59      0.48      0.53        27

    accuracy                           0.52        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.46      0.48        24
           1       0.50      0.54      0.52        24

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.62      0.40      0.49        25
           1       0.53      0.74      0.62        23

    accuracy                           0.56        48
   macro avg       0.58      0.57      0.55        48
weighted avg       0.58      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.24      0.42      0.30        12
           1       0.74      0.56      0.63        36

    accuracy                           0.52        48
   macro avg       0.49      0.49      0.47        48
weighted avg       0.62      0.52      0.55        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.58      0.48      0.52        23
           1       0.59      0.68      0.63        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.65      0.61      0.63        28
           1       0.50      0.55      0.52        20

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.52      0.56        23
           1       0.61      0.68      0.64        25

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.57      0.56        21
           1       0.65      0.63      0.64        27

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.56      0.64      0.60        22
           1       0.65      0.58      0.61        26

    accuracy                           0.60        48
   macro avg       0.61      0.61      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.56      0.16      0.25        31
           1       0.33      0.76      0.46        17

    accuracy                           0.38        48
   macro avg       0.44      0.46      0.36        48
weighted avg       0.48      0.38      0.33        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.48      0.47        21
           1       0.58      0.56      0.57        27

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.68      0.63      0.65        27
           1       0.57      0.62      0.59        21

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.67      0.33      0.44        24
           1       0.56      0.83      0.67        24

    accuracy                           0.58        48
   macro avg       0.61      0.58      0.56        48
weighted avg       0.61      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.31      0.38        26
           1       0.44      0.64      0.52        22

    accuracy                           0.46        48
   macro avg       0.47      0.47      0.45        48
weighted avg       0.47      0.46      0.44        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.43      0.26      0.32        23
           1       0.50      0.68      0.58        25

    accuracy                           0.48        48
   macro avg       0.46      0.47      0.45        48
weighted avg       0.47      0.48      0.46        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.60      0.41      0.49        22
           1       0.61      0.77      0.68        26

    accuracy                           0.60        48
   macro avg       0.60      0.59      0.58        48
weighted avg       0.60      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.47      0.51        19
           1       0.69      0.76      0.72        29

    accuracy                           0.65        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.40      0.29      0.33        21
           1       0.55      0.67      0.60        27

    accuracy                           0.50        48
   macro avg       0.47      0.48      0.47        48
weighted avg       0.48      0.50      0.48        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.64      0.59        25
           1       0.53      0.43      0.48        23

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.53      0.53        19
           1       0.69      0.69      0.69        29

    accuracy                           0.62        48
   macro avg       0.61      0.61      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.57      0.57      0.57        23
           1       0.60      0.60      0.60        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.30      0.41      0.35        17
           1       0.60      0.48      0.54        31

    accuracy                           0.46        48
   macro avg       0.45      0.45      0.44        48
weighted avg       0.50      0.46      0.47        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.48      0.49        21
           1       0.61      0.63      0.62        27

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.58      0.65      0.61        23
           1       0.64      0.56      0.60        25

    accuracy                           0.60        48
   macro avg       0.61      0.61      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.42      0.40        19
           1       0.59      0.55      0.57        29

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.56      0.45      0.50        22
           1       0.60      0.69      0.64        26

    accuracy                           0.58        48
   macro avg       0.58      0.57      0.57        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.28      0.26      0.27        19
           1       0.53      0.55      0.54        29

    accuracy                           0.44        48
   macro avg       0.41      0.41      0.41        48
weighted avg       0.43      0.44      0.43        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.53      0.47        17
           1       0.70      0.61      0.66        31

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.61      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.69      0.31      0.43        29
           1       0.43      0.79      0.56        19

    accuracy                           0.50        48
   macro avg       0.56      0.55      0.49        48
weighted avg       0.59      0.50      0.48        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.40      0.48        25
           1       0.52      0.70      0.59        23

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.53        48
weighted avg       0.55      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.22      0.50      0.30        10
           1       0.80      0.53      0.63        38

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.47        48
weighted avg       0.68      0.52      0.57        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.60      0.44      0.51        27
           1       0.46      0.62      0.53        21

    accuracy                           0.52        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.54      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.52      0.63      0.57        19
           1       0.72      0.62      0.67        29

    accuracy                           0.62        48
   macro avg       0.62      0.63      0.62        48
weighted avg       0.64      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.60      0.57        20
           1       0.69      0.64      0.67        28

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.52      0.52        23
           1       0.56      0.56      0.56        25

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.77      0.45      0.57        22
           1       0.66      0.88      0.75        26

    accuracy                           0.69        48
   macro avg       0.71      0.67      0.66        48
weighted avg       0.71      0.69      0.67        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.48      0.48        21
           1       0.59      0.59      0.59        27

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.38      0.43        21
           1       0.59      0.70      0.64        27

    accuracy                           0.56        48
   macro avg       0.55      0.54      0.54        48
weighted avg       0.55      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.52      0.58        25
           1       0.57      0.70      0.63        23

    accuracy                           0.60        48
   macro avg       0.61      0.61      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.41      0.49        22
           1       0.61      0.77      0.68        26

    accuracy                           0.60        48
   macro avg       0.60      0.59      0.58        48
weighted avg       0.60      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.53      0.48        19
           1       0.64      0.55      0.59        29

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.56      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.41      0.45        22
           1       0.57      0.65      0.61        26

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.50      0.47        20
           1       0.60      0.54      0.57        28

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.21      0.31        29
           1       0.39      0.79      0.53        19

    accuracy                           0.44        48
   macro avg       0.50      0.50      0.42        48
weighted avg       0.52      0.44      0.39        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.27      0.36        22
           1       0.57      0.81      0.67        26

    accuracy                           0.56        48
   macro avg       0.56      0.54      0.52        48
weighted avg       0.56      0.56      0.53        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.60      0.43      0.50        21
           1       0.64      0.78      0.70        27

    accuracy                           0.62        48
   macro avg       0.62      0.60      0.60        48
weighted avg       0.62      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.55      0.52        20
           1       0.65      0.61      0.63        28

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.58      0.33      0.42        21
           1       0.61      0.81      0.70        27

    accuracy                           0.60        48
   macro avg       0.60      0.57      0.56        48
weighted avg       0.60      0.60      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.33      0.41        27
           1       0.42      0.62      0.50        21

    accuracy                           0.46        48
   macro avg       0.47      0.48      0.45        48
weighted avg       0.48      0.46      0.45        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.69      0.52      0.59        21
           1       0.69      0.81      0.75        27

    accuracy                           0.69        48
   macro avg       0.69      0.67      0.67        48
weighted avg       0.69      0.69      0.68        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.58      0.48      0.52        23
           1       0.59      0.68      0.63        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.70      0.67        23
           1       0.70      0.64      0.67        25

    accuracy                           0.67        48
   macro avg       0.67      0.67      0.67        48
weighted avg       0.67      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.45      0.51        22
           1       0.61      0.73      0.67        26

    accuracy                           0.60        48
   macro avg       0.60      0.59      0.59        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.60      0.57      0.59        21
           1       0.68      0.70      0.69        27

    accuracy                           0.65        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.35      0.41      0.38        17
           1       0.64      0.58      0.61        31

    accuracy                           0.52        48
   macro avg       0.50      0.50      0.49        48
weighted avg       0.54      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.56      0.60        25
           1       0.58      0.65      0.61        23

    accuracy                           0.60        48
   macro avg       0.61      0.61      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.45      0.44        22
           1       0.52      0.50      0.51        26

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.53      0.46        15
           1       0.75      0.64      0.69        33

    accuracy                           0.60        48
   macro avg       0.57      0.58      0.57        48
weighted avg       0.64      0.60      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.58      0.50      0.54        22
           1       0.62      0.69      0.65        26

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.56      0.68      0.61        22
           1       0.67      0.54      0.60        26

    accuracy                           0.60        48
   macro avg       0.61      0.61      0.60        48
weighted avg       0.62      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.63      0.52      0.57        23
           1       0.62      0.72      0.67        25

    accuracy                           0.62        48
   macro avg       0.63      0.62      0.62        48
weighted avg       0.63      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.50      0.80      0.62        20
           1       0.75      0.43      0.55        28

    accuracy                           0.58        48
   macro avg       0.62      0.61      0.58        48
weighted avg       0.65      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.48      0.48        21
           1       0.59      0.59      0.59        27

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.44      0.14      0.22        28
           1       0.38      0.75      0.51        20

    accuracy                           0.40        48
   macro avg       0.41      0.45      0.36        48
weighted avg       0.42      0.40      0.34        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.48      0.50        21
           1       0.62      0.67      0.64        27

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.57        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.36      0.24      0.29        17
           1       0.65      0.77      0.71        31

    accuracy                           0.58        48
   macro avg       0.51      0.50      0.50        48
weighted avg       0.55      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       1.00      0.07      0.14        27
           1       0.46      1.00      0.63        21

    accuracy                           0.48        48
   macro avg       0.73      0.54      0.38        48
weighted avg       0.76      0.48      0.35        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.35      0.37      0.36        19
           1       0.57      0.55      0.56        29

    accuracy                           0.48        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.57      0.53        23
           1       0.55      0.48      0.51        25

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.36      0.36      0.36        22
           1       0.46      0.46      0.46        26

    accuracy                           0.42        48
   macro avg       0.41      0.41      0.41        48
weighted avg       0.42      0.42      0.42        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.43      0.45        21
           1       0.59      0.63      0.61        27

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.45      0.50        20
           1       0.66      0.75      0.70        28

    accuracy                           0.62        48
   macro avg       0.61      0.60      0.60        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.53      0.45        17
           1       0.68      0.55      0.61        31

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.58      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.57      0.56        21
           1       0.65      0.63      0.64        27

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.37      0.40        19
           1       0.62      0.69      0.66        29

    accuracy                           0.56        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.55      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.72      0.62      0.67        21
           1       0.73      0.81      0.77        27

    accuracy                           0.73        48
   macro avg       0.73      0.72      0.72        48
weighted avg       0.73      0.73      0.73        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.37      0.39      0.38        18
           1       0.62      0.60      0.61        30

    accuracy                           0.52        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.28      0.44      0.34        16
           1       0.61      0.44      0.51        32

    accuracy                           0.44        48
   macro avg       0.44      0.44      0.43        48
weighted avg       0.50      0.44      0.45        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.68      0.67        22
           1       0.72      0.69      0.71        26

    accuracy                           0.69        48
   macro avg       0.69      0.69      0.69        48
weighted avg       0.69      0.69      0.69        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.45      0.47      0.46        19
           1       0.64      0.62      0.63        29

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.73      0.44      0.55        25
           1       0.58      0.83      0.68        23

    accuracy                           0.62        48
   macro avg       0.65      0.63      0.61        48
weighted avg       0.66      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.59      0.43      0.50        23
           1       0.58      0.72      0.64        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.57        48
weighted avg       0.58      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.16      0.23        25
           1       0.45      0.74      0.56        23

    accuracy                           0.44        48
   macro avg       0.42      0.45      0.39        48
weighted avg       0.42      0.44      0.39        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.65      0.59        17
           1       0.79      0.71      0.75        31

    accuracy                           0.69        48
   macro avg       0.67      0.68      0.67        48
weighted avg       0.70      0.69      0.69        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.41      0.37        17
           1       0.63      0.55      0.59        31

    accuracy                           0.50        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.52      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.45      0.53      0.49        19
           1       0.65      0.59      0.62        29

    accuracy                           0.56        48
   macro avg       0.55      0.56      0.55        48
weighted avg       0.57      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.56      0.64      0.60        22
           1       0.65      0.58      0.61        26

    accuracy                           0.60        48
   macro avg       0.61      0.61      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.53      0.47        19
           1       0.62      0.52      0.57        29

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.54      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.46      0.47        24
           1       0.48      0.50      0.49        24

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.47      0.49        19
           1       0.67      0.69      0.68        29

    accuracy                           0.60        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.50      0.50        22
           1       0.58      0.58      0.58        26

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.50      0.55        24
           1       0.57      0.67      0.62        24

    accuracy                           0.58        48
   macro avg       0.59      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.61      0.58      0.59        19
           1       0.73      0.76      0.75        29

    accuracy                           0.69        48
   macro avg       0.67      0.67      0.67        48
weighted avg       0.68      0.69      0.69        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.17      0.24        24
           1       0.49      0.79      0.60        24

    accuracy                           0.48        48
   macro avg       0.47      0.48      0.42        48
weighted avg       0.47      0.48      0.42        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.35      0.43        23
           1       0.56      0.76      0.64        25

    accuracy                           0.56        48
   macro avg       0.57      0.55      0.54        48
weighted avg       0.56      0.56      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.41      0.52      0.46        21
           1       0.52      0.41      0.46        27

    accuracy                           0.46        48
   macro avg       0.47      0.47      0.46        48
weighted avg       0.47      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.67      0.09      0.15        23
           1       0.53      0.96      0.69        25

    accuracy                           0.54        48
   macro avg       0.60      0.52      0.42        48
weighted avg       0.60      0.54      0.43        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.43      0.47        23
           1       0.54      0.60      0.57        25

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.72      0.69        25
           1       0.67      0.61      0.64        23

    accuracy                           0.67        48
   macro avg       0.67      0.66      0.66        48
weighted avg       0.67      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.92      0.56        13
           1       0.94      0.49      0.64        35

    accuracy                           0.60        48
   macro avg       0.67      0.70      0.60        48
weighted avg       0.80      0.60      0.62        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        24
           1       0.50      1.00      0.67        24

    accuracy                           0.50        48
   macro avg       0.25      0.50      0.33        48
weighted avg       0.25      0.50      0.33        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.62      0.62      0.62        24
           1       0.62      0.62      0.62        24

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.25      0.26      0.26        19
           1       0.50      0.48      0.49        29

    accuracy                           0.40        48
   macro avg       0.38      0.37      0.37        48
weighted avg       0.40      0.40      0.40        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.30      0.38        23
           1       0.53      0.72      0.61        25

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.49        48
weighted avg       0.52      0.52      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.46      0.72      0.57        18
           1       0.75      0.50      0.60        30

    accuracy                           0.58        48
   macro avg       0.61      0.61      0.58        48
weighted avg       0.64      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.60      0.50      0.55        24
           1       0.57      0.67      0.62        24

    accuracy                           0.58        48
   macro avg       0.59      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.75      0.36      0.49        25
           1       0.56      0.87      0.68        23

    accuracy                           0.60        48
   macro avg       0.65      0.61      0.58        48
weighted avg       0.66      0.60      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.62      0.58        21
           1       0.67      0.59      0.63        27

    accuracy                           0.60        48
   macro avg       0.60      0.61      0.60        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.17      0.24        23
           1       0.50      0.76      0.60        25

    accuracy                           0.48        48
   macro avg       0.45      0.47      0.42        48
weighted avg       0.45      0.48      0.43        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.38      0.48        21
           1       0.64      0.85      0.73        27

    accuracy                           0.65        48
   macro avg       0.65      0.62      0.61        48
weighted avg       0.65      0.65      0.62        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.45      0.49        20
           1       0.65      0.71      0.68        28

    accuracy                           0.60        48
   macro avg       0.59      0.58      0.58        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.60      0.57      0.59        21
           1       0.68      0.70      0.69        27

    accuracy                           0.65        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.22      0.27      0.24        15
           1       0.63      0.58      0.60        33

    accuracy                           0.48        48
   macro avg       0.43      0.42      0.42        48
weighted avg       0.50      0.48      0.49        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.39      0.44        23
           1       0.53      0.64      0.58        25

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.51        48
weighted avg       0.52      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.27      0.37        22
           1       0.58      0.85      0.69        26

    accuracy                           0.58        48
   macro avg       0.59      0.56      0.53        48
weighted avg       0.59      0.58      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.47      0.49        19
           1       0.67      0.69      0.68        29

    accuracy                           0.60        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.48      0.43      0.45        23
           1       0.52      0.56      0.54        25

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.50      0.50        22
           1       0.58      0.58      0.58        26

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.26      0.35        23
           1       0.54      0.80      0.65        25

    accuracy                           0.54        48
   macro avg       0.54      0.53      0.50        48
weighted avg       0.54      0.54      0.51        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.57      0.35      0.43        23
           1       0.56      0.76      0.64        25

    accuracy                           0.56        48
   macro avg       0.57      0.55      0.54        48
weighted avg       0.56      0.56      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.44      0.38        16
           1       0.67      0.56      0.61        32

    accuracy                           0.52        48
   macro avg       0.50      0.50      0.49        48
weighted avg       0.56      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.48      0.49        21
           1       0.61      0.63      0.62        27

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.56      0.46        16
           1       0.72      0.56      0.63        32

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.55        48
weighted avg       0.61      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.47      0.39      0.43        23
           1       0.52      0.60      0.56        25

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.49        48
weighted avg       0.50      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.68      0.46      0.55        28
           1       0.48      0.70      0.57        20

    accuracy                           0.56        48
   macro avg       0.58      0.58      0.56        48
weighted avg       0.60      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       1.00      0.04      0.08        23
           1       0.53      1.00      0.69        25

    accuracy                           0.54        48
   macro avg       0.77      0.52      0.39        48
weighted avg       0.76      0.54      0.40        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.63      0.46      0.53        26
           1       0.52      0.68      0.59        22

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.58      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.57      0.35      0.43        23
           1       0.56      0.76      0.64        25

    accuracy                           0.56        48
   macro avg       0.57      0.55      0.54        48
weighted avg       0.56      0.56      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.38      0.47        24
           1       0.56      0.79      0.66        24

    accuracy                           0.58        48
   macro avg       0.60      0.58      0.56        48
weighted avg       0.60      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.44      0.49        25
           1       0.50      0.61      0.55        23

    accuracy                           0.52        48
   macro avg       0.53      0.52      0.52        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.57      0.35      0.43        23
           1       0.56      0.76      0.64        25

    accuracy                           0.56        48
   macro avg       0.57      0.55      0.54        48
weighted avg       0.56      0.56      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.30      0.39      0.34        18
           1       0.56      0.47      0.51        30

    accuracy                           0.44        48
   macro avg       0.43      0.43      0.43        48
weighted avg       0.46      0.44      0.45        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.43      0.46        21
           1       0.60      0.67      0.63        27

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.39      0.39        18
           1       0.63      0.63      0.63        30

    accuracy                           0.54        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.38      0.12      0.18        25
           1       0.45      0.78      0.57        23

    accuracy                           0.44        48
   macro avg       0.41      0.45      0.38        48
weighted avg       0.41      0.44      0.37        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.57      0.40      0.47        20
           1       0.65      0.79      0.71        28

    accuracy                           0.62        48
   macro avg       0.61      0.59      0.59        48
weighted avg       0.62      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.32      0.41        22
           1       0.58      0.81      0.68        26

    accuracy                           0.58        48
   macro avg       0.58      0.56      0.54        48
weighted avg       0.58      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.33      0.33        21
           1       0.48      0.48      0.48        27

    accuracy                           0.42        48
   macro avg       0.41      0.41      0.41        48
weighted avg       0.42      0.42      0.42        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.48      0.68      0.57        19
           1       0.71      0.52      0.60        29

    accuracy                           0.58        48
   macro avg       0.60      0.60      0.58        48
weighted avg       0.62      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.43      0.46        21
           1       0.60      0.67      0.63        27

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.78      0.55        18
           1       0.73      0.37      0.49        30

    accuracy                           0.52        48
   macro avg       0.58      0.57      0.52        48
weighted avg       0.62      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.65      0.51        17
           1       0.73      0.52      0.60        31

    accuracy                           0.56        48
   macro avg       0.58      0.58      0.56        48
weighted avg       0.62      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.56      0.55        25
           1       0.50      0.48      0.49        23

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.56      0.50      0.53        20
           1       0.67      0.71      0.69        28

    accuracy                           0.62        48
   macro avg       0.61      0.61      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.59      0.54        17
           1       0.75      0.68      0.71        31

    accuracy                           0.65        48
   macro avg       0.62      0.63      0.63        48
weighted avg       0.66      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.58      0.50      0.54        22
           1       0.62      0.69      0.65        26

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.32      0.43        19
           1       0.67      0.90      0.76        29

    accuracy                           0.67        48
   macro avg       0.67      0.61      0.60        48
weighted avg       0.67      0.67      0.63        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.56      0.50        18
           1       0.69      0.60      0.64        30

    accuracy                           0.58        48
   macro avg       0.57      0.58      0.57        48
weighted avg       0.60      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.50      0.51        20
           1       0.66      0.68      0.67        28

    accuracy                           0.60        48
   macro avg       0.59      0.59      0.59        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=0.1, gamma=1)
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        25
           1       0.48      1.00      0.65        23

    accuracy                           0.48        48
   macro avg       0.24      0.50      0.32        48
weighted avg       0.23      0.48      0.31        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.1)
              precision    recall  f1-score   support

           0       0.53      0.47      0.50        19
           1       0.68      0.72      0.70        29

    accuracy                           0.62        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.80      0.31      0.44        26
           1       0.53      0.91      0.67        22

    accuracy                           0.58        48
   macro avg       0.66      0.61      0.56        48
weighted avg       0.67      0.58      0.55        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.43      0.42        21
           1       0.54      0.52      0.53        27

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.61      0.55      0.58        20
           1       0.70      0.75      0.72        28

    accuracy                           0.67        48
   macro avg       0.66      0.65      0.65        48
weighted avg       0.66      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.41      0.47        22
           1       0.59      0.73      0.66        26

    accuracy                           0.58        48
   macro avg       0.58      0.57      0.56        48
weighted avg       0.58      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.30      0.35        20
           1       0.59      0.71      0.65        28

    accuracy                           0.54        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.52      0.54      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.61      0.48      0.54        23
           1       0.60      0.72      0.65        25

    accuracy                           0.60        48
   macro avg       0.61      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.38      0.44        26
           1       0.45      0.59      0.51        22

    accuracy                           0.48        48
   macro avg       0.49      0.49      0.48        48
weighted avg       0.49      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.39      0.45        23
           1       0.55      0.68      0.61        25

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.54      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.17      0.28        23
           1       0.55      0.92      0.69        25

    accuracy                           0.56        48
   macro avg       0.61      0.55      0.48        48
weighted avg       0.60      0.56      0.49        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.60      0.41      0.49        22
           1       0.61      0.77      0.68        26

    accuracy                           0.60        48
   macro avg       0.60      0.59      0.58        48
weighted avg       0.60      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.50      0.52        22
           1       0.61      0.65      0.63        26

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.88      0.28      0.42        25
           1       0.55      0.96      0.70        23

    accuracy                           0.60        48
   macro avg       0.71      0.62      0.56        48
weighted avg       0.72      0.60      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.26      0.38        23
           1       0.56      0.88      0.69        25

    accuracy                           0.58        48
   macro avg       0.62      0.57      0.53        48
weighted avg       0.61      0.58      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.60      0.56        20
           1       0.68      0.61      0.64        28

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.65      0.58        20
           1       0.70      0.57      0.63        28

    accuracy                           0.60        48
   macro avg       0.61      0.61      0.60        48
weighted avg       0.62      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.70      0.28      0.40        25
           1       0.53      0.87      0.66        23

    accuracy                           0.56        48
   macro avg       0.61      0.57      0.53        48
weighted avg       0.62      0.56      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.55      0.60      0.57        20
           1       0.69      0.64      0.67        28

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.35      0.42      0.38        19
           1       0.56      0.48      0.52        29

    accuracy                           0.46        48
   macro avg       0.45      0.45      0.45        48
weighted avg       0.48      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.39      0.42        18
           1       0.67      0.73      0.70        30

    accuracy                           0.60        48
   macro avg       0.57      0.56      0.56        48
weighted avg       0.59      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.40      0.29      0.33        21
           1       0.55      0.67      0.60        27

    accuracy                           0.50        48
   macro avg       0.47      0.48      0.47        48
weighted avg       0.48      0.50      0.48        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.36      0.44        25
           1       0.50      0.70      0.58        23

    accuracy                           0.52        48
   macro avg       0.53      0.53      0.51        48
weighted avg       0.53      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.59      0.42      0.49        24
           1       0.55      0.71      0.62        24

    accuracy                           0.56        48
   macro avg       0.57      0.56      0.55        48
weighted avg       0.57      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.28      0.28      0.28        18
           1       0.57      0.57      0.57        30

    accuracy                           0.46        48
   macro avg       0.42      0.42      0.42        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.48      0.46        25
           1       0.38      0.35      0.36        23

    accuracy                           0.42        48
   macro avg       0.41      0.41      0.41        48
weighted avg       0.41      0.42      0.41        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.44      0.52      0.48        23
           1       0.48      0.40      0.43        25

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.57      0.53        21
           1       0.62      0.56      0.59        27

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.52      0.55        21
           1       0.66      0.70      0.68        27

    accuracy                           0.62        48
   macro avg       0.62      0.61      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.38      0.44      0.41        18
           1       0.63      0.57      0.60        30

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.54      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.43      0.48      0.45        21
           1       0.56      0.52      0.54        27

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.68      0.59      0.63        22
           1       0.69      0.77      0.73        26

    accuracy                           0.69        48
   macro avg       0.69      0.68      0.68        48
weighted avg       0.69      0.69      0.68        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.55      0.29      0.37        21
           1       0.59      0.81      0.69        27

    accuracy                           0.58        48
   macro avg       0.57      0.55      0.53        48
weighted avg       0.57      0.58      0.55        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.42      0.49        24
           1       0.55      0.71      0.62        24

    accuracy                           0.56        48
   macro avg       0.57      0.56      0.55        48
weighted avg       0.57      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.73      0.46      0.56        24
           1       0.61      0.83      0.70        24

    accuracy                           0.65        48
   macro avg       0.67      0.65      0.63        48
weighted avg       0.67      0.65      0.63        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.42      0.50      0.45        20
           1       0.58      0.50      0.54        28

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.42      0.65      0.51        17
           1       0.73      0.52      0.60        31

    accuracy                           0.56        48
   macro avg       0.58      0.58      0.56        48
weighted avg       0.62      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.62      0.76      0.68        21
           1       0.77      0.63      0.69        27

    accuracy                           0.69        48
   macro avg       0.69      0.70      0.69        48
weighted avg       0.70      0.69      0.69        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.60      0.47        15
           1       0.76      0.58      0.66        33

    accuracy                           0.58        48
   macro avg       0.58      0.59      0.56        48
weighted avg       0.64      0.58      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.28      0.44      0.34        16
           1       0.61      0.44      0.51        32

    accuracy                           0.44        48
   macro avg       0.44      0.44      0.43        48
weighted avg       0.50      0.44      0.45        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.59      0.48      0.53        21
           1       0.65      0.74      0.69        27

    accuracy                           0.62        48
   macro avg       0.62      0.61      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.50      0.14      0.21        22
           1       0.55      0.88      0.68        26

    accuracy                           0.54        48
   macro avg       0.52      0.51      0.45        48
weighted avg       0.53      0.54      0.46        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.36      0.50      0.42        16
           1       0.69      0.56      0.62        32

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.58      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.80      0.16      0.27        25
           1       0.51      0.96      0.67        23

    accuracy                           0.54        48
   macro avg       0.66      0.56      0.47        48
weighted avg       0.66      0.54      0.46        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.41      0.33      0.37        21
           1       0.55      0.63      0.59        27

    accuracy                           0.50        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.49      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.31      0.21      0.25        19
           1       0.57      0.69      0.62        29

    accuracy                           0.50        48
   macro avg       0.44      0.45      0.44        48
weighted avg       0.47      0.50      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.62      0.67      0.64        24
           1       0.64      0.58      0.61        24

    accuracy                           0.62        48
   macro avg       0.63      0.62      0.62        48
weighted avg       0.63      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.60      0.16      0.25        19
           1       0.63      0.93      0.75        29

    accuracy                           0.62        48
   macro avg       0.61      0.54      0.50        48
weighted avg       0.62      0.62      0.55        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.59      0.72      0.65        18
           1       0.81      0.70      0.75        30

    accuracy                           0.71        48
   macro avg       0.70      0.71      0.70        48
weighted avg       0.73      0.71      0.71        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.45      0.47        22
           1       0.56      0.58      0.57        26

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.42      0.61      0.50        18
           1       0.68      0.50      0.58        30

    accuracy                           0.54        48
   macro avg       0.55      0.56      0.54        48
weighted avg       0.58      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.57      0.57      0.57        23
           1       0.60      0.60      0.60        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.53      0.51        19
           1       0.68      0.66      0.67        29

    accuracy                           0.60        48
   macro avg       0.59      0.59      0.59        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.53      0.38      0.44        21
           1       0.61      0.74      0.67        27

    accuracy                           0.58        48
   macro avg       0.57      0.56      0.56        48
weighted avg       0.57      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.39      0.65      0.49        17
           1       0.70      0.45      0.55        31

    accuracy                           0.52        48
   macro avg       0.55      0.55      0.52        48
weighted avg       0.59      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.59      0.52      0.55        25
           1       0.54      0.61      0.57        23

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.55      0.57      0.56        21
           1       0.65      0.63      0.64        27

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.62      0.33      0.43        30
           1       0.38      0.67      0.48        18

    accuracy                           0.46        48
   macro avg       0.50      0.50      0.46        48
weighted avg       0.53      0.46      0.45        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.76      0.57      0.65        23
           1       0.68      0.84      0.75        25

    accuracy                           0.71        48
   macro avg       0.72      0.70      0.70        48
weighted avg       0.72      0.71      0.70        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.48      0.57      0.52        21
           1       0.61      0.52      0.56        27

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.24      0.32        21
           1       0.58      0.81      0.68        27

    accuracy                           0.56        48
   macro avg       0.54      0.53      0.50        48
weighted avg       0.54      0.56      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.47      0.33      0.39        21
           1       0.58      0.70      0.63        27

    accuracy                           0.54        48
   macro avg       0.52      0.52      0.51        48
weighted avg       0.53      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.22      0.29        23
           1       0.51      0.76      0.61        25

    accuracy                           0.50        48
   macro avg       0.48      0.49      0.45        48
weighted avg       0.49      0.50      0.46        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.31      0.39        26
           1       0.45      0.68      0.55        22

    accuracy                           0.48        48
   macro avg       0.49      0.49      0.47        48
weighted avg       0.50      0.48      0.46        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.54      0.65      0.59        20
           1       0.71      0.61      0.65        28

    accuracy                           0.62        48
   macro avg       0.62      0.63      0.62        48
weighted avg       0.64      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.48      0.53        21
           1       0.65      0.74      0.69        27

    accuracy                           0.62        48
   macro avg       0.62      0.61      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.48      0.62      0.54        21
           1       0.62      0.48      0.54        27

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.56      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.21      0.31        24
           1       0.53      0.88      0.66        24

    accuracy                           0.54        48
   macro avg       0.57      0.54      0.48        48
weighted avg       0.58      0.54      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.26      0.34        19
           1       0.63      0.83      0.72        29

    accuracy                           0.60        48
   macro avg       0.57      0.55      0.53        48
weighted avg       0.58      0.60      0.57        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.39      0.36        18
           1       0.59      0.53      0.56        30

    accuracy                           0.48        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.50      0.48      0.49        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.62      0.62        26
           1       0.55      0.55      0.55        22

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.29      0.25      0.27        16
           1       0.65      0.69      0.67        32

    accuracy                           0.54        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.53      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.24      0.34        25
           1       0.50      0.83      0.62        23

    accuracy                           0.52        48
   macro avg       0.55      0.53      0.48        48
weighted avg       0.55      0.52      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.67      0.27      0.39        22
           1       0.59      0.88      0.71        26

    accuracy                           0.60        48
   macro avg       0.63      0.58      0.55        48
weighted avg       0.62      0.60      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.57      0.54      0.55        24
           1       0.56      0.58      0.57        24

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.33      0.32      0.33        22
           1       0.44      0.46      0.45        26

    accuracy                           0.40        48
   macro avg       0.39      0.39      0.39        48
weighted avg       0.39      0.40      0.39        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.39      0.44        23
           1       0.53      0.64      0.58        25

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.51        48
weighted avg       0.52      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.42      0.47        19
           1       0.67      0.76      0.71        29

    accuracy                           0.62        48
   macro avg       0.60      0.59      0.59        48
weighted avg       0.61      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.42      0.46        19
           1       0.66      0.72      0.69        29

    accuracy                           0.60        48
   macro avg       0.58      0.57      0.57        48
weighted avg       0.59      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.58      0.61      0.60        23
           1       0.62      0.60      0.61        25

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.38      0.53      0.44        17
           1       0.67      0.52      0.58        31

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.51        48
weighted avg       0.56      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.75      0.59        16
           1       0.83      0.59      0.69        32

    accuracy                           0.65        48
   macro avg       0.65      0.67      0.64        48
weighted avg       0.71      0.65      0.66        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.39      0.47        23
           1       0.58      0.76      0.66        25

    accuracy                           0.58        48
   macro avg       0.59      0.58      0.56        48
weighted avg       0.59      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.61      0.54      0.57        26
           1       0.52      0.59      0.55        22

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.38      0.42        24
           1       0.48      0.58      0.53        24

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.47        48
weighted avg       0.48      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.42      0.44      0.43        18
           1       0.66      0.63      0.64        30

    accuracy                           0.56        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.53      0.41      0.46        22
           1       0.58      0.69      0.63        26

    accuracy                           0.56        48
   macro avg       0.56      0.55      0.55        48
weighted avg       0.56      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.71      0.34      0.47        29
           1       0.44      0.79      0.57        19

    accuracy                           0.52        48
   macro avg       0.58      0.57      0.52        48
weighted avg       0.61      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.57      0.50      0.53        24
           1       0.56      0.62      0.59        24

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.52      0.70      0.60        20
           1       0.71      0.54      0.61        28

    accuracy                           0.60        48
   macro avg       0.62      0.62      0.60        48
weighted avg       0.63      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.44      0.38        18
           1       0.58      0.47      0.52        30

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.45        48
weighted avg       0.49      0.46      0.47        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.35      0.54      0.42        13
           1       0.79      0.63      0.70        35

    accuracy                           0.60        48
   macro avg       0.57      0.58      0.56        48
weighted avg       0.67      0.60      0.62        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.45      0.21      0.29        24
           1       0.49      0.75      0.59        24

    accuracy                           0.48        48
   macro avg       0.47      0.48      0.44        48
weighted avg       0.47      0.48      0.44        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.40      0.29      0.33        21
           1       0.55      0.67      0.60        27

    accuracy                           0.50        48
   macro avg       0.47      0.48      0.47        48
weighted avg       0.48      0.50      0.48        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.30      0.37      0.33        19
           1       0.52      0.45      0.48        29

    accuracy                           0.42        48
   macro avg       0.41      0.41      0.41        48
weighted avg       0.43      0.42      0.42        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.50      0.52        22
           1       0.61      0.65      0.63        26

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.52      0.59      0.55        22
           1       0.61      0.54      0.57        26

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.73      0.42      0.54        26
           1       0.55      0.82      0.65        22

    accuracy                           0.60        48
   macro avg       0.64      0.62      0.60        48
weighted avg       0.65      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.52      0.60      0.56        20
           1       0.68      0.61      0.64        28

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.62      0.55        21
           1       0.64      0.52      0.57        27

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.58      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.50      0.49        24
           1       0.48      0.46      0.47        24

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.60      0.50      0.55        24
           1       0.57      0.67      0.62        24

    accuracy                           0.58        48
   macro avg       0.59      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.43      0.50        23
           1       0.58      0.72      0.64        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.57        48
weighted avg       0.58      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.69      0.58        16
           1       0.81      0.66      0.72        32

    accuracy                           0.67        48
   macro avg       0.65      0.67      0.65        48
weighted avg       0.71      0.67      0.68        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.44      0.30      0.36        23
           1       0.50      0.64      0.56        25

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.46        48
weighted avg       0.47      0.48      0.46        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.48      0.49        21
           1       0.61      0.63      0.62        27

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.43      0.11      0.18        27
           1       0.41      0.81      0.55        21

    accuracy                           0.42        48
   macro avg       0.42      0.46      0.36        48
weighted avg       0.42      0.42      0.34        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.58      0.49        19
           1       0.64      0.48      0.55        29

    accuracy                           0.52        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.55      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.33      0.14      0.20        21
           1       0.54      0.78      0.64        27

    accuracy                           0.50        48
   macro avg       0.44      0.46      0.42        48
weighted avg       0.45      0.50      0.45        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.62      0.68      0.65        22
           1       0.71      0.65      0.68        26

    accuracy                           0.67        48
   macro avg       0.67      0.67      0.67        48
weighted avg       0.67      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.24      0.34        29
           1       0.39      0.74      0.51        19

    accuracy                           0.44        48
   macro avg       0.49      0.49      0.43        48
weighted avg       0.51      0.44      0.41        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.50      0.20      0.29        20
           1       0.60      0.86      0.71        28

    accuracy                           0.58        48
   macro avg       0.55      0.53      0.50        48
weighted avg       0.56      0.58      0.53        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.39      0.44        23
           1       0.53      0.64      0.58        25

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.51        48
weighted avg       0.52      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.32      0.36        19
           1       0.62      0.72      0.67        29

    accuracy                           0.56        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.54      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.58      0.61        24
           1       0.62      0.67      0.64        24

    accuracy                           0.62        48
   macro avg       0.63      0.62      0.62        48
weighted avg       0.63      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.55      0.52        20
           1       0.65      0.61      0.63        28

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.33      0.16      0.21        19
           1       0.59      0.79      0.68        29

    accuracy                           0.54        48
   macro avg       0.46      0.48      0.45        48
weighted avg       0.49      0.54      0.49        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.50      0.52        22
           1       0.61      0.65      0.63        26

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.52      0.48        21
           1       0.57      0.48      0.52        27

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.67      0.57        18
           1       0.75      0.60      0.67        30

    accuracy                           0.62        48
   macro avg       0.62      0.63      0.62        48
weighted avg       0.66      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.42      0.40        19
           1       0.59      0.55      0.57        29

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.36      0.42        22
           1       0.56      0.69      0.62        26

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.53      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.42      0.76      0.54        17
           1       0.76      0.42      0.54        31

    accuracy                           0.54        48
   macro avg       0.59      0.59      0.54        48
weighted avg       0.64      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.59      0.59      0.59        22
           1       0.65      0.65      0.65        26

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.55      0.55      0.55        20
           1       0.68      0.68      0.68        28

    accuracy                           0.62        48
   macro avg       0.61      0.61      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.53      0.41      0.46        22
           1       0.58      0.69      0.63        26

    accuracy                           0.56        48
   macro avg       0.56      0.55      0.55        48
weighted avg       0.56      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       1.00      0.08      0.15        25
           1       0.50      1.00      0.67        23

    accuracy                           0.52        48
   macro avg       0.75      0.54      0.41        48
weighted avg       0.76      0.52      0.40        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.44      0.52      0.48        21
           1       0.57      0.48      0.52        27

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.40      0.17      0.24        23
           1       0.50      0.76      0.60        25

    accuracy                           0.48        48
   macro avg       0.45      0.47      0.42        48
weighted avg       0.45      0.48      0.43        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.57      0.46        14
           1       0.78      0.62      0.69        34

    accuracy                           0.60        48
   macro avg       0.58      0.59      0.57        48
weighted avg       0.66      0.60      0.62        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.55      0.54        20
           1       0.67      0.64      0.65        28

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.1)
              precision    recall  f1-score   support

           0       0.45      0.65      0.53        20
           1       0.63      0.43      0.51        28

    accuracy                           0.52        48
   macro avg       0.54      0.54      0.52        48
weighted avg       0.56      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.67      0.10      0.17        21
           1       0.58      0.96      0.72        27

    accuracy                           0.58        48
   macro avg       0.62      0.53      0.44        48
weighted avg       0.62      0.58      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.30      0.44      0.36        16
           1       0.64      0.50      0.56        32

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.46        48
weighted avg       0.53      0.48      0.49        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.37      0.44      0.40        16
           1       0.69      0.62      0.66        32

    accuracy                           0.56        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.58      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.59      0.59        22
           1       0.65      0.65      0.65        26

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.67      0.20      0.31        20
           1       0.62      0.93      0.74        28

    accuracy                           0.62        48
   macro avg       0.64      0.56      0.53        48
weighted avg       0.64      0.62      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.47      0.53        19
           1       0.70      0.79      0.74        29

    accuracy                           0.67        48
   macro avg       0.65      0.63      0.64        48
weighted avg       0.66      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.57      0.35      0.43        23
           1       0.56      0.76      0.64        25

    accuracy                           0.56        48
   macro avg       0.57      0.55      0.54        48
weighted avg       0.56      0.56      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.59      0.43      0.50        23
           1       0.58      0.72      0.64        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.57        48
weighted avg       0.58      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.50      0.78      0.61        23
           1       0.58      0.28      0.38        25

    accuracy                           0.52        48
   macro avg       0.54      0.53      0.49        48
weighted avg       0.54      0.52      0.49        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.54      0.59        24
           1       0.61      0.71      0.65        24

    accuracy                           0.62        48
   macro avg       0.63      0.62      0.62        48
weighted avg       0.63      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.55      0.69      0.61        16
           1       0.82      0.72      0.77        32

    accuracy                           0.71        48
   macro avg       0.69      0.70      0.69        48
weighted avg       0.73      0.71      0.71        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.44      0.47        25
           1       0.46      0.52      0.49        23

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.57      0.52      0.55        23
           1       0.59      0.64      0.62        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.48      0.45        21
           1       0.56      0.52      0.54        27

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.41      0.37        17
           1       0.63      0.55      0.59        31

    accuracy                           0.50        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.52      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.57      0.52        21
           1       0.61      0.52      0.56        27

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.42      0.47        19
           1       0.67      0.76      0.71        29

    accuracy                           0.62        48
   macro avg       0.60      0.59      0.59        48
weighted avg       0.61      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.57      0.60      0.59        20
           1       0.70      0.68      0.69        28

    accuracy                           0.65        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.54      0.59        24
           1       0.61      0.71      0.65        24

    accuracy                           0.62        48
   macro avg       0.63      0.62      0.62        48
weighted avg       0.63      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.1)
              precision    recall  f1-score   support

           0       0.43      0.83      0.57        18
           1       0.77      0.33      0.47        30

    accuracy                           0.52        48
   macro avg       0.60      0.58      0.52        48
weighted avg       0.64      0.52      0.50        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.65      0.50      0.56        22
           1       0.65      0.77      0.70        26

    accuracy                           0.65        48
   macro avg       0.65      0.63      0.63        48
weighted avg       0.65      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.36      0.18      0.24        22
           1       0.51      0.73      0.60        26

    accuracy                           0.48        48
   macro avg       0.44      0.46      0.42        48
weighted avg       0.44      0.48      0.44        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.45      0.43      0.44        23
           1       0.50      0.52      0.51        25

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.32      0.42        25
           1       0.51      0.78      0.62        23

    accuracy                           0.54        48
   macro avg       0.56      0.55      0.52        48
weighted avg       0.57      0.54      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.76      0.46      0.58        28
           1       0.52      0.80      0.63        20

    accuracy                           0.60        48
   macro avg       0.64      0.63      0.60        48
weighted avg       0.66      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.32      0.47      0.38        19
           1       0.50      0.34      0.41        29

    accuracy                           0.40        48
   macro avg       0.41      0.41      0.40        48
weighted avg       0.43      0.40      0.40        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.59      0.45      0.51        22
           1       0.61      0.73      0.67        26

    accuracy                           0.60        48
   macro avg       0.60      0.59      0.59        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.52      0.41      0.46        27
           1       0.41      0.52      0.46        21

    accuracy                           0.46        48
   macro avg       0.47      0.47      0.46        48
weighted avg       0.47      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.54      0.65      0.59        20
           1       0.71      0.61      0.65        28

    accuracy                           0.62        48
   macro avg       0.62      0.63      0.62        48
weighted avg       0.64      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.46      0.50      0.48        24
           1       0.45      0.42      0.43        24

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.55      0.56        22
           1       0.63      0.65      0.64        26

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.47      0.33      0.39        24
           1       0.48      0.62      0.55        24

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.47        48
weighted avg       0.48      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.52      0.52        23
           1       0.56      0.56      0.56        25

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.60      0.61        25
           1       0.58      0.61      0.60        23

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.75      0.12      0.21        24
           1       0.52      0.96      0.68        24

    accuracy                           0.54        48
   macro avg       0.64      0.54      0.45        48
weighted avg       0.64      0.54      0.45        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.56      0.53        18
           1       0.71      0.67      0.69        30

    accuracy                           0.62        48
   macro avg       0.61      0.61      0.61        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.35      0.37      0.36        19
           1       0.57      0.55      0.56        29

    accuracy                           0.48        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.43      0.45        23
           1       0.52      0.56      0.54        25

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.45      0.43      0.44        21
           1       0.57      0.59      0.58        27

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.56      0.48      0.51        21
           1       0.63      0.70      0.67        27

    accuracy                           0.60        48
   macro avg       0.59      0.59      0.59        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       1.00      0.05      0.09        22
           1       0.55      1.00      0.71        26

    accuracy                           0.56        48
   macro avg       0.78      0.52      0.40        48
weighted avg       0.76      0.56      0.43        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.57      0.44      0.50        18
           1       0.71      0.80      0.75        30

    accuracy                           0.67        48
   macro avg       0.64      0.62      0.62        48
weighted avg       0.66      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.32      0.38        22
           1       0.55      0.69      0.61        26

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.49        48
weighted avg       0.51      0.52      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.43      0.47        21
           1       0.61      0.70      0.66        27

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.42      0.41        19
           1       0.61      0.59      0.60        29

    accuracy                           0.52        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.85      0.41      0.55        27
           1       0.54      0.90      0.68        21

    accuracy                           0.62        48
   macro avg       0.69      0.66      0.61        48
weighted avg       0.71      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.44      0.38        16
           1       0.67      0.56      0.61        32

    accuracy                           0.52        48
   macro avg       0.50      0.50      0.49        48
weighted avg       0.56      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.41      0.44        17
           1       0.70      0.74      0.72        31

    accuracy                           0.62        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.40      0.39        20
           1       0.56      0.54      0.55        28

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.50      0.32      0.39        19
           1       0.64      0.79      0.71        29

    accuracy                           0.60        48
   macro avg       0.57      0.55      0.55        48
weighted avg       0.58      0.60      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.70      0.32      0.44        22
           1       0.61      0.88      0.72        26

    accuracy                           0.62        48
   macro avg       0.65      0.60      0.58        48
weighted avg       0.65      0.62      0.59        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.33      0.40        21
           1       0.59      0.74      0.66        27

    accuracy                           0.56        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.55      0.56      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.36      0.47      0.41        19
           1       0.57      0.45      0.50        29

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.45        48
weighted avg       0.48      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.65      0.57      0.60        23
           1       0.64      0.72      0.68        25

    accuracy                           0.65        48
   macro avg       0.65      0.64      0.64        48
weighted avg       0.65      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.48      0.51        25
           1       0.50      0.57      0.53        23

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.50      0.48        16
           1       0.74      0.72      0.73        32

    accuracy                           0.65        48
   macro avg       0.61      0.61      0.61        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.60      0.46      0.52        26
           1       0.50      0.64      0.56        22

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.29      0.41      0.34        17
           1       0.58      0.45      0.51        31

    accuracy                           0.44        48
   macro avg       0.44      0.43      0.43        48
weighted avg       0.48      0.44      0.45        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.44      0.44        18
           1       0.67      0.67      0.67        30

    accuracy                           0.58        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.50      0.45        22
           1       0.48      0.38      0.43        26

    accuracy                           0.44        48
   macro avg       0.44      0.44      0.44        48
weighted avg       0.44      0.44      0.44        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.47      0.49        19
           1       0.67      0.69      0.68        29

    accuracy                           0.60        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.001)
              precision    recall  f1-score   support

           0       0.58      0.33      0.42        21
           1       0.61      0.81      0.70        27

    accuracy                           0.60        48
   macro avg       0.60      0.57      0.56        48
weighted avg       0.60      0.60      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.50      0.52        16
           1       0.76      0.78      0.77        32

    accuracy                           0.69        48
   macro avg       0.65      0.64      0.64        48
weighted avg       0.68      0.69      0.68        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.48      0.61      0.54        18
           1       0.72      0.60      0.65        30

    accuracy                           0.60        48
   macro avg       0.60      0.61      0.60        48
weighted avg       0.63      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.50      0.29      0.36        21
           1       0.58      0.78      0.67        27

    accuracy                           0.56        48
   macro avg       0.54      0.53      0.52        48
weighted avg       0.55      0.56      0.53        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.53      0.44      0.48        18
           1       0.70      0.77      0.73        30

    accuracy                           0.65        48
   macro avg       0.62      0.61      0.61        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.47      0.33      0.39        21
           1       0.58      0.70      0.63        27

    accuracy                           0.54        48
   macro avg       0.52      0.52      0.51        48
weighted avg       0.53      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.61      0.50      0.55        22
           1       0.63      0.73      0.68        26

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.65      0.49        17
           1       0.70      0.45      0.55        31

    accuracy                           0.52        48
   macro avg       0.55      0.55      0.52        48
weighted avg       0.59      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.27      0.70      0.39        10
           1       0.86      0.50      0.63        38

    accuracy                           0.54        48
   macro avg       0.57      0.60      0.51        48
weighted avg       0.74      0.54      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.57      0.53        21
           1       0.62      0.56      0.59        27

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.36      0.26      0.30        19
           1       0.59      0.69      0.63        29

    accuracy                           0.52        48
   macro avg       0.47      0.48      0.47        48
weighted avg       0.50      0.52      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.56      0.45      0.50        20
           1       0.66      0.75      0.70        28

    accuracy                           0.62        48
   macro avg       0.61      0.60      0.60        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.43      0.30      0.35        20
           1       0.59      0.71      0.65        28

    accuracy                           0.54        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.52      0.54      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.57      0.57      0.57        23
           1       0.60      0.60      0.60        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.41      0.45        22
           1       0.57      0.65      0.61        26

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.46      0.26      0.33        23
           1       0.51      0.72      0.60        25

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.47        48
weighted avg       0.49      0.50      0.47        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.62      0.64        26
           1       0.58      0.64      0.61        22

    accuracy                           0.62        48
   macro avg       0.62      0.63      0.62        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.56      0.64      0.60        22
           1       0.65      0.58      0.61        26

    accuracy                           0.60        48
   macro avg       0.61      0.61      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       1.00      0.27      0.42        26
           1       0.54      1.00      0.70        22

    accuracy                           0.60        48
   macro avg       0.77      0.63      0.56        48
weighted avg       0.79      0.60      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.53      0.45      0.49        20
           1       0.65      0.71      0.68        28

    accuracy                           0.60        48
   macro avg       0.59      0.58      0.58        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.78      0.29      0.42        24
           1       0.56      0.92      0.70        24

    accuracy                           0.60        48
   macro avg       0.67      0.60      0.56        48
weighted avg       0.67      0.60      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.60      0.55        20
           1       0.67      0.57      0.62        28

    accuracy                           0.58        48
   macro avg       0.58      0.59      0.58        48
weighted avg       0.60      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.43      0.48        23
           1       0.55      0.64      0.59        25

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.24      0.32        25
           1       0.47      0.74      0.58        23

    accuracy                           0.48        48
   macro avg       0.49      0.49      0.45        48
weighted avg       0.49      0.48      0.45        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.48      0.65      0.55        17
           1       0.76      0.61      0.68        31

    accuracy                           0.62        48
   macro avg       0.62      0.63      0.61        48
weighted avg       0.66      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.32      0.38        25
           1       0.45      0.61      0.52        23

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.45        48
weighted avg       0.46      0.46      0.45        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.71      0.50      0.59        24
           1       0.61      0.79      0.69        24

    accuracy                           0.65        48
   macro avg       0.66      0.65      0.64        48
weighted avg       0.66      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.33      0.40        24
           1       0.50      0.67      0.57        24

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.49        48
weighted avg       0.50      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.41      0.28      0.33        25
           1       0.42      0.57      0.48        23

    accuracy                           0.42        48
   macro avg       0.42      0.42      0.41        48
weighted avg       0.42      0.42      0.40        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.62      0.32      0.43        31
           1       0.34      0.65      0.45        17

    accuracy                           0.44        48
   macro avg       0.48      0.48      0.44        48
weighted avg       0.53      0.44      0.43        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.62      0.62      0.62        21
           1       0.70      0.70      0.70        27

    accuracy                           0.67        48
   macro avg       0.66      0.66      0.66        48
weighted avg       0.67      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=0.1, gamma=1)
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        21
           1       0.56      1.00      0.72        27

    accuracy                           0.56        48
   macro avg       0.28      0.50      0.36        48
weighted avg       0.32      0.56      0.40        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.52      0.50        21
           1       0.60      0.56      0.58        27

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.60      0.35      0.44        17
           1       0.71      0.87      0.78        31

    accuracy                           0.69        48
   macro avg       0.66      0.61      0.61        48
weighted avg       0.67      0.69      0.66        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.43      0.47        21
           1       0.61      0.70      0.66        27

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.65      0.61        23
           1       0.64      0.56      0.60        25

    accuracy                           0.60        48
   macro avg       0.61      0.61      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.39      0.44        23
           1       0.53      0.64      0.58        25

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.51        48
weighted avg       0.52      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.58      0.48      0.52        23
           1       0.59      0.68      0.63        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.65      0.46      0.54        28
           1       0.46      0.65      0.54        20

    accuracy                           0.54        48
   macro avg       0.56      0.56      0.54        48
weighted avg       0.57      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.52      0.48      0.50        23
           1       0.56      0.60      0.58        25

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.57      0.65      0.60        20
           1       0.72      0.64      0.68        28

    accuracy                           0.65        48
   macro avg       0.64      0.65      0.64        48
weighted avg       0.66      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.50      0.33      0.40        24
           1       0.50      0.67      0.57        24

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.49        48
weighted avg       0.50      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.29      0.38        24
           1       0.51      0.75      0.61        24

    accuracy                           0.52        48
   macro avg       0.53      0.52      0.49        48
weighted avg       0.53      0.52      0.49        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.31      0.33      0.32        15
           1       0.69      0.67      0.68        33

    accuracy                           0.56        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.57      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.59      0.40      0.48        25
           1       0.52      0.70      0.59        23

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.53        48
weighted avg       0.55      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.44      0.52      0.48        21
           1       0.57      0.48      0.52        27

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.25      0.19      0.22        21
           1       0.47      0.56      0.51        27

    accuracy                           0.40        48
   macro avg       0.36      0.37      0.36        48
weighted avg       0.37      0.40      0.38        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.41      0.37      0.39        19
           1       0.61      0.66      0.63        29

    accuracy                           0.54        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.53      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.86      0.24      0.38        25
           1       0.54      0.96      0.69        23

    accuracy                           0.58        48
   macro avg       0.70      0.60      0.53        48
weighted avg       0.70      0.58      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.23      0.33        30
           1       0.34      0.67      0.45        18

    accuracy                           0.40        48
   macro avg       0.44      0.45      0.39        48
weighted avg       0.47      0.40      0.37        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.38      0.44        24
           1       0.52      0.67      0.58        24

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.51        48
weighted avg       0.52      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.52      0.52        21
           1       0.63      0.63      0.63        27

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.53      0.45      0.49        22
           1       0.59      0.65      0.62        26

    accuracy                           0.56        48
   macro avg       0.56      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.1)
              precision    recall  f1-score   support

           0       0.40      0.47      0.43        17
           1       0.68      0.61      0.64        31

    accuracy                           0.56        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.58      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.47      0.30      0.37        23
           1       0.52      0.68      0.59        25

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.48        48
weighted avg       0.49      0.50      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.38      0.28      0.32        18
           1       0.63      0.73      0.68        30

    accuracy                           0.56        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.54      0.56      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.53      0.41      0.46        22
           1       0.58      0.69      0.63        26

    accuracy                           0.56        48
   macro avg       0.56      0.55      0.55        48
weighted avg       0.56      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.70      0.54      0.61        26
           1       0.57      0.73      0.64        22

    accuracy                           0.62        48
   macro avg       0.64      0.63      0.62        48
weighted avg       0.64      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.40      0.59      0.48        17
           1       0.70      0.52      0.59        31

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.53        48
weighted avg       0.59      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.71      0.20      0.31        25
           1       0.51      0.91      0.66        23

    accuracy                           0.54        48
   macro avg       0.61      0.56      0.48        48
weighted avg       0.62      0.54      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.33      0.42        21
           1       0.61      0.81      0.70        27

    accuracy                           0.60        48
   macro avg       0.60      0.57      0.56        48
weighted avg       0.60      0.60      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.29      0.36        21
           1       0.58      0.78      0.67        27

    accuracy                           0.56        48
   macro avg       0.54      0.53      0.52        48
weighted avg       0.55      0.56      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.27      0.20      0.23        20
           1       0.52      0.61      0.56        28

    accuracy                           0.44        48
   macro avg       0.39      0.40      0.39        48
weighted avg       0.41      0.44      0.42        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.41      0.35      0.38        20
           1       0.58      0.64      0.61        28

    accuracy                           0.52        48
   macro avg       0.50      0.50      0.49        48
weighted avg       0.51      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.63      0.64        27
           1       0.55      0.57      0.56        21

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.67      0.26      0.38        23
           1       0.56      0.88      0.69        25

    accuracy                           0.58        48
   macro avg       0.62      0.57      0.53        48
weighted avg       0.61      0.58      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.78      0.28      0.41        25
           1       0.54      0.91      0.68        23

    accuracy                           0.58        48
   macro avg       0.66      0.60      0.54        48
weighted avg       0.66      0.58      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.48      0.54      0.51        24
           1       0.48      0.42      0.44        24

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.42      0.50      0.46        16
           1       0.72      0.66      0.69        32

    accuracy                           0.60        48
   macro avg       0.57      0.58      0.57        48
weighted avg       0.62      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.55      0.52      0.53        23
           1       0.58      0.60      0.59        25

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.42      0.43        24
           1       0.46      0.50      0.48        24

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.35      0.39      0.37        18
           1       0.61      0.57      0.59        30

    accuracy                           0.50        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.57      0.55        21
           1       0.64      0.59      0.62        27

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.22      0.25      0.24        16
           1       0.60      0.56      0.58        32

    accuracy                           0.46        48
   macro avg       0.41      0.41      0.41        48
weighted avg       0.47      0.46      0.47        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.53      0.51        17
           1       0.73      0.71      0.72        31

    accuracy                           0.65        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.55      0.57        29
           1       0.38      0.42      0.40        19

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.64      0.57        22
           1       0.62      0.50      0.55        26

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.47      0.41      0.44        17
           1       0.70      0.74      0.72        31

    accuracy                           0.62        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.53      0.50      0.51        20
           1       0.66      0.68      0.67        28

    accuracy                           0.60        48
   macro avg       0.59      0.59      0.59        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.42      0.36      0.39        22
           1       0.52      0.58      0.55        26

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.47      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.46      0.61      0.52        18
           1       0.71      0.57      0.63        30

    accuracy                           0.58        48
   macro avg       0.58      0.59      0.58        48
weighted avg       0.61      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.39      0.43      0.41        21
           1       0.52      0.48      0.50        27

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.45        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.35      0.57      0.43        14
           1       0.76      0.56      0.64        34

    accuracy                           0.56        48
   macro avg       0.55      0.57      0.54        48
weighted avg       0.64      0.56      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.72      0.52      0.60        25
           1       0.60      0.78      0.68        23

    accuracy                           0.65        48
   macro avg       0.66      0.65      0.64        48
weighted avg       0.66      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.36      0.38      0.37        21
           1       0.50      0.48      0.49        27

    accuracy                           0.44        48
   macro avg       0.43      0.43      0.43        48
weighted avg       0.44      0.44      0.44        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.60      0.50      0.55        24
           1       0.57      0.67      0.62        24

    accuracy                           0.58        48
   macro avg       0.59      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.52      0.50      0.51        22
           1       0.59      0.62      0.60        26

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.29      0.08      0.13        24
           1       0.46      0.79      0.58        24

    accuracy                           0.44        48
   macro avg       0.37      0.44      0.36        48
weighted avg       0.37      0.44      0.36        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.67      0.08      0.14        25
           1       0.49      0.96      0.65        23

    accuracy                           0.50        48
   macro avg       0.58      0.52      0.39        48
weighted avg       0.58      0.50      0.38        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        23
           1       0.51      0.96      0.67        25

    accuracy                           0.50        48
   macro avg       0.26      0.48      0.33        48
weighted avg       0.27      0.50      0.35        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.45      0.56      0.50        16
           1       0.75      0.66      0.70        32

    accuracy                           0.62        48
   macro avg       0.60      0.61      0.60        48
weighted avg       0.65      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.42      0.41        24
           1       0.39      0.38      0.38        24

    accuracy                           0.40        48
   macro avg       0.40      0.40      0.40        48
weighted avg       0.40      0.40      0.40        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.30      0.37        27
           1       0.41      0.62      0.49        21

    accuracy                           0.44        48
   macro avg       0.45      0.46      0.43        48
weighted avg       0.46      0.44      0.42        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.45      0.43      0.44        23
           1       0.50      0.52      0.51        25

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.52      0.57      0.54        23
           1       0.57      0.52      0.54        25

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.54      0.65      0.59        20
           1       0.71      0.61      0.65        28

    accuracy                           0.62        48
   macro avg       0.62      0.63      0.62        48
weighted avg       0.64      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.23      0.33        22
           1       0.57      0.88      0.70        26

    accuracy                           0.58        48
   macro avg       0.60      0.56      0.52        48
weighted avg       0.60      0.58      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.26      0.29      0.28        17
           1       0.59      0.55      0.57        31

    accuracy                           0.46        48
   macro avg       0.42      0.42      0.42        48
weighted avg       0.47      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.45      0.53        22
           1       0.62      0.77      0.69        26

    accuracy                           0.62        48
   macro avg       0.62      0.61      0.61        48
weighted avg       0.62      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.28      0.35        25
           1       0.45      0.65      0.54        23

    accuracy                           0.46        48
   macro avg       0.46      0.47      0.44        48
weighted avg       0.46      0.46      0.44        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.69      0.50      0.58        22
           1       0.66      0.81      0.72        26

    accuracy                           0.67        48
   macro avg       0.67      0.65      0.65        48
weighted avg       0.67      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.60      0.55        20
           1       0.67      0.57      0.62        28

    accuracy                           0.58        48
   macro avg       0.58      0.59      0.58        48
weighted avg       0.60      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.40      0.46        20
           1       0.64      0.75      0.69        28

    accuracy                           0.60        48
   macro avg       0.58      0.57      0.57        48
weighted avg       0.59      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.50      0.30      0.37        20
           1       0.61      0.79      0.69        28

    accuracy                           0.58        48
   macro avg       0.56      0.54      0.53        48
weighted avg       0.56      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.55      0.46        20
           1       0.55      0.39      0.46        28

    accuracy                           0.46        48
   macro avg       0.47      0.47      0.46        48
weighted avg       0.48      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.40      0.49        25
           1       0.53      0.74      0.62        23

    accuracy                           0.56        48
   macro avg       0.58      0.57      0.55        48
weighted avg       0.58      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.35      0.32      0.33        19
           1       0.58      0.62      0.60        29

    accuracy                           0.50        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.49      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.52      0.65      0.58        20
           1       0.70      0.57      0.63        28

    accuracy                           0.60        48
   macro avg       0.61      0.61      0.60        48
weighted avg       0.62      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.33      0.04      0.08        23
           1       0.51      0.92      0.66        25

    accuracy                           0.50        48
   macro avg       0.42      0.48      0.37        48
weighted avg       0.43      0.50      0.38        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.33      0.04      0.08        23
           1       0.51      0.92      0.66        25

    accuracy                           0.50        48
   macro avg       0.42      0.48      0.37        48
weighted avg       0.43      0.50      0.38        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.36      0.47      0.41        17
           1       0.65      0.55      0.60        31

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.55      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.44      0.38      0.41        21
           1       0.57      0.63      0.60        27

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.51      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.42      0.50      0.45        20
           1       0.58      0.50      0.54        28

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.1)
              precision    recall  f1-score   support

           0       0.60      0.55      0.57        22
           1       0.64      0.69      0.67        26

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.67      0.55        21
           1       0.61      0.41      0.49        27

    accuracy                           0.52        48
   macro avg       0.54      0.54      0.52        48
weighted avg       0.55      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.75      0.27      0.40        22
           1       0.60      0.92      0.73        26

    accuracy                           0.62        48
   macro avg       0.68      0.60      0.56        48
weighted avg       0.67      0.62      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.60      0.65      0.63        23
           1       0.65      0.60      0.63        25

    accuracy                           0.62        48
   macro avg       0.63      0.63      0.63        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.42      0.44        19
           1       0.65      0.69      0.67        29

    accuracy                           0.58        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.58      0.61      0.59        18
           1       0.76      0.73      0.75        30

    accuracy                           0.69        48
   macro avg       0.67      0.67      0.67        48
weighted avg       0.69      0.69      0.69        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.72      0.50      0.59        26
           1       0.57      0.77      0.65        22

    accuracy                           0.62        48
   macro avg       0.64      0.64      0.62        48
weighted avg       0.65      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.64      0.45      0.53        20
           1       0.68      0.82      0.74        28

    accuracy                           0.67        48
   macro avg       0.66      0.64      0.64        48
weighted avg       0.66      0.67      0.65        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.52      0.58        25
           1       0.57      0.70      0.63        23

    accuracy                           0.60        48
   macro avg       0.61      0.61      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.79      0.46      0.58        24
           1       0.62      0.88      0.72        24

    accuracy                           0.67        48
   macro avg       0.70      0.67      0.65        48
weighted avg       0.70      0.67      0.65        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.47      0.41      0.44        22
           1       0.55      0.62      0.58        26

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.50      0.51        18
           1       0.71      0.73      0.72        30

    accuracy                           0.65        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.33      0.41        24
           1       0.52      0.71      0.60        24

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.50        48
weighted avg       0.52      0.52      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.48      0.50        21
           1       0.62      0.67      0.64        27

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.57        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.26      0.31        19
           1       0.60      0.72      0.66        29

    accuracy                           0.54        48
   macro avg       0.49      0.49      0.48        48
weighted avg       0.51      0.54      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        22
           1       0.52      0.92      0.67        26

    accuracy                           0.50        48
   macro avg       0.26      0.46      0.33        48
weighted avg       0.28      0.50      0.36        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.67      0.09      0.15        23
           1       0.53      0.96      0.69        25

    accuracy                           0.54        48
   macro avg       0.60      0.52      0.42        48
weighted avg       0.60      0.54      0.43        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.48      0.48      0.48        21
           1       0.59      0.59      0.59        27

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.70      0.60        20
           1       0.71      0.54      0.61        28

    accuracy                           0.60        48
   macro avg       0.62      0.62      0.60        48
weighted avg       0.63      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.61      0.74      0.67        19
           1       0.80      0.69      0.74        29

    accuracy                           0.71        48
   macro avg       0.70      0.71      0.70        48
weighted avg       0.72      0.71      0.71        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.69      0.41      0.51        27
           1       0.50      0.76      0.60        21

    accuracy                           0.56        48
   macro avg       0.59      0.58      0.56        48
weighted avg       0.61      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.37      0.47      0.41        15
           1       0.72      0.64      0.68        33

    accuracy                           0.58        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.61      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.57      0.60      0.59        20
           1       0.70      0.68      0.69        28

    accuracy                           0.65        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.62      0.63        21
           1       0.71      0.74      0.73        27

    accuracy                           0.69        48
   macro avg       0.68      0.68      0.68        48
weighted avg       0.69      0.69      0.69        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.32      0.36        22
           1       0.52      0.62      0.56        26

    accuracy                           0.48        48
   macro avg       0.46      0.47      0.46        48
weighted avg       0.47      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.44      0.38      0.41        21
           1       0.57      0.63      0.60        27

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.51      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.27      0.38        26
           1       0.49      0.82      0.61        22

    accuracy                           0.52        48
   macro avg       0.56      0.54      0.49        48
weighted avg       0.57      0.52      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.60      0.57      0.59        21
           1       0.68      0.70      0.69        27

    accuracy                           0.65        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.72      0.60        18
           1       0.78      0.60      0.68        30

    accuracy                           0.65        48
   macro avg       0.65      0.66      0.64        48
weighted avg       0.68      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.36      0.40        25
           1       0.43      0.52      0.47        23

    accuracy                           0.44        48
   macro avg       0.44      0.44      0.44        48
weighted avg       0.44      0.44      0.43        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.48      0.63      0.55        19
           1       0.70      0.55      0.62        29

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.61      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.73      0.38      0.50        21
           1       0.65      0.89      0.75        27

    accuracy                           0.67        48
   macro avg       0.69      0.63      0.62        48
weighted avg       0.68      0.67      0.64        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.001)
              precision    recall  f1-score   support

           0       0.47      0.42      0.44        19
           1       0.65      0.69      0.67        29

    accuracy                           0.58        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.55      0.56        22
           1       0.63      0.65      0.64        26

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.47      0.44        17
           1       0.69      0.65      0.67        31

    accuracy                           0.58        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.59      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.67      0.06      0.12        31
           1       0.36      0.94      0.52        17

    accuracy                           0.38        48
   macro avg       0.51      0.50      0.32        48
weighted avg       0.56      0.38      0.26        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.62      0.37      0.47        27
           1       0.47      0.71      0.57        21

    accuracy                           0.52        48
   macro avg       0.55      0.54      0.52        48
weighted avg       0.56      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.44      0.47        25
           1       0.46      0.52      0.49        23

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.46      0.55      0.50        20
           1       0.62      0.54      0.58        28

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.56      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.63      0.86      0.73        22
           1       0.83      0.58      0.68        26

    accuracy                           0.71        48
   macro avg       0.73      0.72      0.71        48
weighted avg       0.74      0.71      0.70        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.50      0.49        22
           1       0.56      0.54      0.55        26

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.57      0.85      0.68        20
           1       0.83      0.54      0.65        28

    accuracy                           0.67        48
   macro avg       0.70      0.69      0.67        48
weighted avg       0.72      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.58      0.54        19
           1       0.69      0.62      0.65        29

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.62      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.69      0.38      0.49        24
           1       0.57      0.83      0.68        24

    accuracy                           0.60        48
   macro avg       0.63      0.60      0.58        48
weighted avg       0.63      0.60      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.46      0.48        24
           1       0.50      0.54      0.52        24

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.58      0.58      0.58        24
           1       0.58      0.58      0.58        24

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.36      0.20      0.26        25
           1       0.41      0.61      0.49        23

    accuracy                           0.40        48
   macro avg       0.38      0.40      0.37        48
weighted avg       0.38      0.40      0.37        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.45      0.47        20
           1       0.63      0.68      0.66        28

    accuracy                           0.58        48
   macro avg       0.57      0.56      0.56        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.76      0.70      0.73        23
           1       0.74      0.80      0.77        25

    accuracy                           0.75        48
   macro avg       0.75      0.75      0.75        48
weighted avg       0.75      0.75      0.75        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.61      0.60        23
           1       0.62      0.60      0.61        25

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.44      0.71      0.55        17
           1       0.76      0.52      0.62        31

    accuracy                           0.58        48
   macro avg       0.60      0.61      0.58        48
weighted avg       0.65      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.40      0.46        20
           1       0.64      0.75      0.69        28

    accuracy                           0.60        48
   macro avg       0.58      0.57      0.57        48
weighted avg       0.59      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.33      0.29      0.31        17
           1       0.64      0.68      0.66        31

    accuracy                           0.54        48
   macro avg       0.48      0.49      0.48        48
weighted avg       0.53      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.08      0.14        25
           1       0.49      0.96      0.65        23

    accuracy                           0.50        48
   macro avg       0.58      0.52      0.39        48
weighted avg       0.58      0.50      0.38        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.47      0.35      0.40        20
           1       0.61      0.71      0.66        28

    accuracy                           0.56        48
   macro avg       0.54      0.53      0.53        48
weighted avg       0.55      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.44      0.46        18
           1       0.68      0.70      0.69        30

    accuracy                           0.60        48
   macro avg       0.57      0.57      0.57        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.44      0.35      0.39        20
           1       0.59      0.68      0.63        28

    accuracy                           0.54        48
   macro avg       0.52      0.51      0.51        48
weighted avg       0.53      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.36      0.41        22
           1       0.55      0.65      0.60        26

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.51      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.48      0.45      0.47        22
           1       0.56      0.58      0.57        26

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.56      0.55        25
           1       0.50      0.48      0.49        23

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.60      0.55        20
           1       0.67      0.57      0.62        28

    accuracy                           0.58        48
   macro avg       0.58      0.59      0.58        48
weighted avg       0.60      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.59      0.68      0.63        19
           1       0.77      0.69      0.73        29

    accuracy                           0.69        48
   macro avg       0.68      0.69      0.68        48
weighted avg       0.70      0.69      0.69        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.35      0.50      0.41        18
           1       0.59      0.43      0.50        30

    accuracy                           0.46        48
   macro avg       0.47      0.47      0.45        48
weighted avg       0.50      0.46      0.47        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.31      0.25      0.28        20
           1       0.53      0.61      0.57        28

    accuracy                           0.46        48
   macro avg       0.42      0.43      0.42        48
weighted avg       0.44      0.46      0.45        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.54      0.55        24
           1       0.56      0.58      0.57        24

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       1.00      0.05      0.09        21
           1       0.57      1.00      0.73        27

    accuracy                           0.58        48
   macro avg       0.79      0.52      0.41        48
weighted avg       0.76      0.58      0.45        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.17      0.25        23
           1       0.51      0.80      0.62        25

    accuracy                           0.50        48
   macro avg       0.48      0.49      0.44        48
weighted avg       0.48      0.50      0.45        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.001)
              precision    recall  f1-score   support

           0       0.67      0.38      0.48        21
           1       0.64      0.85      0.73        27

    accuracy                           0.65        48
   macro avg       0.65      0.62      0.61        48
weighted avg       0.65      0.65      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.48      0.43      0.45        23
           1       0.52      0.56      0.54        25

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.37      0.38        19
           1       0.60      0.62      0.61        29

    accuracy                           0.52        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.46      0.52      0.49        21
           1       0.58      0.52      0.55        27

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.33      0.50      0.40        16
           1       0.67      0.50      0.57        32

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.49        48
weighted avg       0.56      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.53      0.35      0.42        26
           1       0.45      0.64      0.53        22

    accuracy                           0.48        48
   macro avg       0.49      0.49      0.47        48
weighted avg       0.49      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.50      0.44        16
           1       0.71      0.62      0.67        32

    accuracy                           0.58        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.61      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.80      0.43      0.56        28
           1       0.52      0.85      0.64        20

    accuracy                           0.60        48
   macro avg       0.66      0.64      0.60        48
weighted avg       0.68      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.58      0.50      0.54        22
           1       0.62      0.69      0.65        26

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.31      0.21      0.25        19
           1       0.57      0.69      0.62        29

    accuracy                           0.50        48
   macro avg       0.44      0.45      0.44        48
weighted avg       0.47      0.50      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.50      0.48        20
           1       0.62      0.57      0.59        28

    accuracy                           0.54        48
   macro avg       0.53      0.54      0.53        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.55      0.49        20
           1       0.61      0.50      0.55        28

    accuracy                           0.52        48
   macro avg       0.52      0.53      0.52        48
weighted avg       0.54      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.18      0.27        22
           1       0.55      0.85      0.67        26

    accuracy                           0.54        48
   macro avg       0.53      0.51      0.47        48
weighted avg       0.53      0.54      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.80      0.17      0.29        23
           1       0.56      0.96      0.71        25

    accuracy                           0.58        48
   macro avg       0.68      0.57      0.50        48
weighted avg       0.67      0.58      0.50        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.38      0.29      0.32        21
           1       0.53      0.63      0.58        27

    accuracy                           0.48        48
   macro avg       0.45      0.46      0.45        48
weighted avg       0.46      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.53      0.48        19
           1       0.64      0.55      0.59        29

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.56      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.24      0.29      0.26        17
           1       0.56      0.48      0.52        31

    accuracy                           0.42        48
   macro avg       0.40      0.39      0.39        48
weighted avg       0.44      0.42      0.43        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.54      0.74      0.62        19
           1       0.77      0.59      0.67        29

    accuracy                           0.65        48
   macro avg       0.66      0.66      0.64        48
weighted avg       0.68      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.45      0.48      0.47        21
           1       0.58      0.56      0.57        27

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.50      0.49        20
           1       0.63      0.61      0.62        28

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.54      0.35      0.42        20
           1       0.63      0.79      0.70        28

    accuracy                           0.60        48
   macro avg       0.58      0.57      0.56        48
weighted avg       0.59      0.60      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.54      0.57      0.55        23
           1       0.58      0.56      0.57        25

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.57      0.60        23
           1       0.64      0.72      0.68        25

    accuracy                           0.65        48
   macro avg       0.65      0.64      0.64        48
weighted avg       0.65      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.63      0.46      0.53        26
           1       0.52      0.68      0.59        22

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.58      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.62      0.57      0.59        23
           1       0.63      0.68      0.65        25

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.61      0.50      0.55        22
           1       0.63      0.73      0.68        26

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.48      0.45      0.47        22
           1       0.56      0.58      0.57        26

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.42      0.41        24
           1       0.39      0.38      0.38        24

    accuracy                           0.40        48
   macro avg       0.40      0.40      0.40        48
weighted avg       0.40      0.40      0.40        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.39      0.56      0.46        16
           1       0.72      0.56      0.63        32

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.55        48
weighted avg       0.61      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.71      0.55        17
           1       0.76      0.52      0.62        31

    accuracy                           0.58        48
   macro avg       0.60      0.61      0.58        48
weighted avg       0.65      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.30      0.14      0.19        22
           1       0.50      0.73      0.59        26

    accuracy                           0.46        48
   macro avg       0.40      0.43      0.39        48
weighted avg       0.41      0.46      0.41        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.50      0.40        16
           1       0.67      0.50      0.57        32

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.49        48
weighted avg       0.56      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.61      0.48      0.54        23
           1       0.60      0.72      0.65        25

    accuracy                           0.60        48
   macro avg       0.61      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.67      0.46      0.55        26
           1       0.53      0.73      0.62        22

    accuracy                           0.58        48
   macro avg       0.60      0.59      0.58        48
weighted avg       0.61      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.50      0.48        16
           1       0.74      0.72      0.73        32

    accuracy                           0.65        48
   macro avg       0.61      0.61      0.61        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.52      0.51        21
           1       0.62      0.59      0.60        27

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.72      0.52      0.60        25
           1       0.60      0.78      0.68        23

    accuracy                           0.65        48
   macro avg       0.66      0.65      0.64        48
weighted avg       0.66      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.43      0.43        21
           1       0.56      0.56      0.56        27

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.25      0.11      0.15        19
           1       0.57      0.79      0.67        29

    accuracy                           0.52        48
   macro avg       0.41      0.45      0.41        48
weighted avg       0.45      0.52      0.46        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.40      0.08      0.13        25
           1       0.47      0.87      0.61        23

    accuracy                           0.46        48
   macro avg       0.43      0.47      0.37        48
weighted avg       0.43      0.46      0.36        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.31      0.28      0.29        18
           1       0.59      0.63      0.61        30

    accuracy                           0.50        48
   macro avg       0.45      0.46      0.45        48
weighted avg       0.49      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.52      0.56        23
           1       0.61      0.68      0.64        25

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.23      0.31        22
           1       0.55      0.81      0.66        26

    accuracy                           0.54        48
   macro avg       0.53      0.52      0.48        48
weighted avg       0.53      0.54      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.55      0.55      0.55        20
           1       0.68      0.68      0.68        28

    accuracy                           0.62        48
   macro avg       0.61      0.61      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.32      0.41        22
           1       0.58      0.81      0.68        26

    accuracy                           0.58        48
   macro avg       0.58      0.56      0.54        48
weighted avg       0.58      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.54      0.33      0.41        21
           1       0.60      0.78      0.68        27

    accuracy                           0.58        48
   macro avg       0.57      0.56      0.54        48
weighted avg       0.57      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.42      0.53      0.47        15
           1       0.76      0.67      0.71        33

    accuracy                           0.62        48
   macro avg       0.59      0.60      0.59        48
weighted avg       0.65      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.45      0.39      0.42        23
           1       0.50      0.56      0.53        25

    accuracy                           0.48        48
   macro avg       0.47      0.48      0.47        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.67      0.08      0.15        24
           1       0.51      0.96      0.67        24

    accuracy                           0.52        48
   macro avg       0.59      0.52      0.41        48
weighted avg       0.59      0.52      0.41        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.57      0.55        21
           1       0.64      0.59      0.62        27

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.42      0.44      0.43        18
           1       0.66      0.63      0.64        30

    accuracy                           0.56        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.45      0.53      0.49        19
           1       0.65      0.59      0.62        29

    accuracy                           0.56        48
   macro avg       0.55      0.56      0.55        48
weighted avg       0.57      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.83      0.42      0.56        24
           1       0.61      0.92      0.73        24

    accuracy                           0.67        48
   macro avg       0.72      0.67      0.64        48
weighted avg       0.72      0.67      0.64        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.40      0.42        20
           1       0.60      0.64      0.62        28

    accuracy                           0.54        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.52      0.50      0.51        22
           1       0.59      0.62      0.60        26

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.52      0.51        23
           1       0.54      0.52      0.53        25

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.25      0.36        24
           1       0.54      0.88      0.67        24

    accuracy                           0.56        48
   macro avg       0.60      0.56      0.52        48
weighted avg       0.60      0.56      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.44      0.27      0.33        26
           1       0.41      0.59      0.48        22

    accuracy                           0.42        48
   macro avg       0.42      0.43      0.41        48
weighted avg       0.42      0.42      0.40        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.38      0.31      0.34        16
           1       0.69      0.75      0.72        32

    accuracy                           0.60        48
   macro avg       0.54      0.53      0.53        48
weighted avg       0.59      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.46      0.69      0.55        16
           1       0.79      0.59      0.68        32

    accuracy                           0.62        48
   macro avg       0.62      0.64      0.61        48
weighted avg       0.68      0.62      0.64        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.36      0.53      0.43        17
           1       0.65      0.48      0.56        31

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.49        48
weighted avg       0.55      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.70      0.54      0.61        26
           1       0.57      0.73      0.64        22

    accuracy                           0.62        48
   macro avg       0.64      0.63      0.62        48
weighted avg       0.64      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.52      0.54        21
           1       0.64      0.67      0.65        27

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.67      0.21      0.32        19
           1       0.64      0.93      0.76        29

    accuracy                           0.65        48
   macro avg       0.65      0.57      0.54        48
weighted avg       0.65      0.65      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.50      0.52      0.51        23
           1       0.54      0.52      0.53        25

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.61      0.58      0.59        19
           1       0.73      0.76      0.75        29

    accuracy                           0.69        48
   macro avg       0.67      0.67      0.67        48
weighted avg       0.68      0.69      0.69        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.71      0.44      0.55        27
           1       0.52      0.76      0.62        21

    accuracy                           0.58        48
   macro avg       0.61      0.60      0.58        48
weighted avg       0.62      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.43      0.80      0.56        15
           1       0.85      0.52      0.64        33

    accuracy                           0.60        48
   macro avg       0.64      0.66      0.60        48
weighted avg       0.72      0.60      0.62        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.25      0.10      0.14        20
           1       0.55      0.79      0.65        28

    accuracy                           0.50        48
   macro avg       0.40      0.44      0.39        48
weighted avg       0.43      0.50      0.44        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.62      0.18      0.28        28
           1       0.42      0.85      0.57        20

    accuracy                           0.46        48
   macro avg       0.53      0.51      0.42        48
weighted avg       0.54      0.46      0.40        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.40      0.38      0.39        21
           1       0.54      0.56      0.55        27

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.65      0.59        20
           1       0.71      0.61      0.65        28

    accuracy                           0.62        48
   macro avg       0.62      0.63      0.62        48
weighted avg       0.64      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.63      0.48      0.55        25
           1       0.55      0.70      0.62        23

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.39      0.44        23
           1       0.53      0.64      0.58        25

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.51        48
weighted avg       0.52      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.48      0.49        23
           1       0.54      0.56      0.55        25

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.001)
              precision    recall  f1-score   support

           0       0.60      0.30      0.40        20
           1       0.63      0.86      0.73        28

    accuracy                           0.62        48
   macro avg       0.62      0.58      0.56        48
weighted avg       0.62      0.62      0.59        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.48      0.42      0.44        24
           1       0.48      0.54      0.51        24

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.30      0.50      0.37        12
           1       0.79      0.61      0.69        36

    accuracy                           0.58        48
   macro avg       0.54      0.56      0.53        48
weighted avg       0.66      0.58      0.61        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.40      0.08      0.13        25
           1       0.47      0.87      0.61        23

    accuracy                           0.46        48
   macro avg       0.43      0.47      0.37        48
weighted avg       0.43      0.46      0.36        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.32      0.40        25
           1       0.48      0.70      0.57        23

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.49        48
weighted avg       0.51      0.50      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.24      0.30        25
           1       0.42      0.61      0.50        23

    accuracy                           0.42        48
   macro avg       0.41      0.42      0.40        48
weighted avg       0.41      0.42      0.40        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.41      0.45        22
           1       0.57      0.65      0.61        26

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.42      0.48        19
           1       0.68      0.79      0.73        29

    accuracy                           0.65        48
   macro avg       0.62      0.61      0.61        48
weighted avg       0.63      0.65      0.63        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.50      0.50        22
           1       0.58      0.58      0.58        26

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.67      0.36      0.47        22
           1       0.61      0.85      0.71        26

    accuracy                           0.62        48
   macro avg       0.64      0.60      0.59        48
weighted avg       0.64      0.62      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.62      0.40      0.48        20
           1       0.66      0.82      0.73        28

    accuracy                           0.65        48
   macro avg       0.64      0.61      0.61        48
weighted avg       0.64      0.65      0.63        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.44      0.35      0.39        20
           1       0.59      0.68      0.63        28

    accuracy                           0.54        48
   macro avg       0.52      0.51      0.51        48
weighted avg       0.53      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.59      0.43      0.50        23
           1       0.58      0.72      0.64        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.57        48
weighted avg       0.58      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.48      0.53        25
           1       0.54      0.65      0.59        23

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.26      0.34        23
           1       0.53      0.76      0.62        25

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.48        48
weighted avg       0.51      0.52      0.49        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.62      0.31      0.41        26
           1       0.49      0.77      0.60        22

    accuracy                           0.52        48
   macro avg       0.55      0.54      0.50        48
weighted avg       0.56      0.52      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.22      0.33      0.26        15
           1       0.60      0.45      0.52        33

    accuracy                           0.42        48
   macro avg       0.41      0.39      0.39        48
weighted avg       0.48      0.42      0.44        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.42      0.43        19
           1       0.63      0.66      0.64        29

    accuracy                           0.56        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.73      0.52      0.61        21
           1       0.70      0.85      0.77        27

    accuracy                           0.71        48
   macro avg       0.72      0.69      0.69        48
weighted avg       0.71      0.71      0.70        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.54      0.32      0.40        22
           1       0.57      0.77      0.66        26

    accuracy                           0.56        48
   macro avg       0.55      0.54      0.53        48
weighted avg       0.56      0.56      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.63      0.48      0.55        25
           1       0.55      0.70      0.62        23

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.41      0.45        22
           1       0.57      0.65      0.61        26

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.67      0.56      0.61        25
           1       0.59      0.70      0.64        23

    accuracy                           0.62        48
   macro avg       0.63      0.63      0.62        48
weighted avg       0.63      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.22      0.29      0.25        14
           1       0.67      0.59      0.62        34

    accuracy                           0.50        48
   macro avg       0.44      0.44      0.44        48
weighted avg       0.54      0.50      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.50      0.15      0.23        20
           1       0.60      0.89      0.71        28

    accuracy                           0.58        48
   macro avg       0.55      0.52      0.47        48
weighted avg       0.56      0.58      0.51        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.33      0.37        21
           1       0.55      0.63      0.59        27

    accuracy                           0.50        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.49      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.48      0.68      0.57        19
           1       0.71      0.52      0.60        29

    accuracy                           0.58        48
   macro avg       0.60      0.60      0.58        48
weighted avg       0.62      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.70      0.33      0.45        21
           1       0.63      0.89      0.74        27

    accuracy                           0.65        48
   macro avg       0.67      0.61      0.60        48
weighted avg       0.66      0.65      0.61        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.41      0.33      0.37        21
           1       0.55      0.63      0.59        27

    accuracy                           0.50        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.49      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.56      0.42      0.48        24
           1       0.53      0.67      0.59        24

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.54      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.44      0.17      0.25        23
           1       0.51      0.80      0.62        25

    accuracy                           0.50        48
   macro avg       0.48      0.49      0.44        48
weighted avg       0.48      0.50      0.45        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.52      0.48      0.50        23
           1       0.56      0.60      0.58        25

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.53      0.49        19
           1       0.65      0.59      0.62        29

    accuracy                           0.56        48
   macro avg       0.55      0.56      0.55        48
weighted avg       0.57      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.48      0.45      0.47        22
           1       0.56      0.58      0.57        26

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.36      0.38        22
           1       0.50      0.54      0.52        26

    accuracy                           0.46        48
   macro avg       0.45      0.45      0.45        48
weighted avg       0.45      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.38      0.38      0.38        16
           1       0.69      0.69      0.69        32

    accuracy                           0.58        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.48      0.63      0.55        19
           1       0.70      0.55      0.62        29

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.61      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.55      0.51        20
           1       0.64      0.57      0.60        28

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.52      0.53        23
           1       0.58      0.60      0.59        25

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.52      0.51        21
           1       0.62      0.59      0.60        27

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.42      0.45        24
           1       0.50      0.58      0.54        24

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.65      0.57        20
           1       0.68      0.54      0.60        28

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.61      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.32      0.27      0.29        22
           1       0.45      0.50      0.47        26

    accuracy                           0.40        48
   macro avg       0.38      0.39      0.38        48
weighted avg       0.39      0.40      0.39        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.53      0.51        19
           1       0.68      0.66      0.67        29

    accuracy                           0.60        48
   macro avg       0.59      0.59      0.59        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.39      0.41        23
           1       0.48      0.52      0.50        25

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.45        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.20      0.12      0.15        17
           1       0.61      0.74      0.67        31

    accuracy                           0.52        48
   macro avg       0.40      0.43      0.41        48
weighted avg       0.46      0.52      0.48        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.65      0.59        23
           1       0.60      0.48      0.53        25

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.60      0.57        20
           1       0.69      0.64      0.67        28

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.36      0.29      0.32        17
           1       0.65      0.71      0.68        31

    accuracy                           0.56        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.54      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.43      0.60      0.50        20
           1       0.60      0.43      0.50        28

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.53      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.54      0.59      0.57        22
           1       0.62      0.58      0.60        26

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.35      0.46        23
           1       0.58      0.84      0.69        25

    accuracy                           0.60        48
   macro avg       0.62      0.59      0.57        48
weighted avg       0.62      0.60      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.55      0.52      0.54        21
           1       0.64      0.67      0.65        27

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.56      0.41      0.47        22
           1       0.59      0.73      0.66        26

    accuracy                           0.58        48
   macro avg       0.58      0.57      0.56        48
weighted avg       0.58      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.67      0.29      0.40        28
           1       0.44      0.80      0.57        20

    accuracy                           0.50        48
   macro avg       0.56      0.54      0.49        48
weighted avg       0.57      0.50      0.47        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.57      0.38      0.46        21
           1       0.62      0.78      0.69        27

    accuracy                           0.60        48
   macro avg       0.59      0.58      0.57        48
weighted avg       0.60      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.52      0.51        23
           1       0.54      0.52      0.53        25

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.57      0.55        23
           1       0.58      0.56      0.57        25

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.56      0.50        18
           1       0.69      0.60      0.64        30

    accuracy                           0.58        48
   macro avg       0.57      0.58      0.57        48
weighted avg       0.60      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.35      0.41      0.38        17
           1       0.64      0.58      0.61        31

    accuracy                           0.52        48
   macro avg       0.50      0.50      0.49        48
weighted avg       0.54      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.001)
              precision    recall  f1-score   support

           0       0.57      0.16      0.25        25
           1       0.49      0.87      0.62        23

    accuracy                           0.50        48
   macro avg       0.53      0.51      0.44        48
weighted avg       0.53      0.50      0.43        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.29      0.37        21
           1       0.59      0.81      0.69        27

    accuracy                           0.58        48
   macro avg       0.57      0.55      0.53        48
weighted avg       0.57      0.58      0.55        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.54      0.59        24
           1       0.61      0.71      0.65        24

    accuracy                           0.62        48
   macro avg       0.63      0.62      0.62        48
weighted avg       0.63      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.57      0.63      0.60        19
           1       0.74      0.69      0.71        29

    accuracy                           0.67        48
   macro avg       0.66      0.66      0.66        48
weighted avg       0.67      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.30      0.35        20
           1       0.59      0.71      0.65        28

    accuracy                           0.54        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.52      0.54      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.67      0.67        24
           1       0.67      0.67      0.67        24

    accuracy                           0.67        48
   macro avg       0.67      0.67      0.67        48
weighted avg       0.67      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.33      0.56      0.42        16
           1       0.67      0.44      0.53        32

    accuracy                           0.48        48
   macro avg       0.50      0.50      0.47        48
weighted avg       0.56      0.48      0.49        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.57      0.57        21
           1       0.67      0.67      0.67        27

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.37      0.50      0.43        20
           1       0.52      0.39      0.45        28

    accuracy                           0.44        48
   macro avg       0.45      0.45      0.44        48
weighted avg       0.46      0.44      0.44        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.62      0.62        21
           1       0.70      0.70      0.70        27

    accuracy                           0.67        48
   macro avg       0.66      0.66      0.66        48
weighted avg       0.67      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.55      0.63      0.59        19
           1       0.73      0.66      0.69        29

    accuracy                           0.65        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.66      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.59      0.58        22
           1       0.64      0.62      0.63        26

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.54      0.62      0.58        21
           1       0.67      0.59      0.63        27

    accuracy                           0.60        48
   macro avg       0.60      0.61      0.60        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.43      0.50      0.47        20
           1       0.60      0.54      0.57        28

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.10      0.17        29
           1       0.38      0.84      0.52        19

    accuracy                           0.40        48
   macro avg       0.44      0.47      0.35        48
weighted avg       0.45      0.40      0.31        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.42      0.47      0.44        17
           1       0.69      0.65      0.67        31

    accuracy                           0.58        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.59      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.45      0.48      0.47        21
           1       0.58      0.56      0.57        27

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.55      0.55      0.55        20
           1       0.68      0.68      0.68        28

    accuracy                           0.62        48
   macro avg       0.61      0.61      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.61      0.46      0.52        24
           1       0.57      0.71      0.63        24

    accuracy                           0.58        48
   macro avg       0.59      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.30      0.44      0.36        16
           1       0.64      0.50      0.56        32

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.46        48
weighted avg       0.53      0.48      0.49        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.55      0.27      0.36        22
           1       0.57      0.81      0.67        26

    accuracy                           0.56        48
   macro avg       0.56      0.54      0.52        48
weighted avg       0.56      0.56      0.53        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.55      0.49        22
           1       0.52      0.42      0.47        26

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.49      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.57      0.55        21
           1       0.64      0.59      0.62        27

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.56      0.50      0.53        18
           1       0.72      0.77      0.74        30

    accuracy                           0.67        48
   macro avg       0.64      0.63      0.64        48
weighted avg       0.66      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.65      0.52        17
           1       0.74      0.55      0.63        31

    accuracy                           0.58        48
   macro avg       0.59      0.60      0.58        48
weighted avg       0.63      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.42      0.23      0.29        22
           1       0.53      0.73      0.61        26

    accuracy                           0.50        48
   macro avg       0.47      0.48      0.45        48
weighted avg       0.48      0.50      0.47        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.69      0.65        26
           1       0.58      0.50      0.54        22

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.52      0.53        23
           1       0.58      0.60      0.59        25

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.50      0.16      0.24        19
           1       0.62      0.90      0.73        29

    accuracy                           0.60        48
   macro avg       0.56      0.53      0.49        48
weighted avg       0.57      0.60      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.36      0.42      0.39        19
           1       0.58      0.52      0.55        29

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.49      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.47      0.45        19
           1       0.63      0.59      0.61        29

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.32      0.50      0.39        18
           1       0.55      0.37      0.44        30

    accuracy                           0.42        48
   macro avg       0.44      0.43      0.42        48
weighted avg       0.46      0.42      0.42        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.48      0.52        23
           1       0.59      0.68      0.63        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        22
           1       0.54      1.00      0.70        26

    accuracy                           0.54        48
   macro avg       0.27      0.50      0.35        48
weighted avg       0.29      0.54      0.38        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.36      0.44        25
           1       0.50      0.70      0.58        23

    accuracy                           0.52        48
   macro avg       0.53      0.53      0.51        48
weighted avg       0.53      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.35      0.37        23
           1       0.46      0.52      0.49        25

    accuracy                           0.44        48
   macro avg       0.43      0.43      0.43        48
weighted avg       0.43      0.44      0.43        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.42      0.42      0.42        19
           1       0.62      0.62      0.62        29

    accuracy                           0.54        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.62      0.60        21
           1       0.69      0.67      0.68        27

    accuracy                           0.65        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.60      0.57      0.59        21
           1       0.68      0.70      0.69        27

    accuracy                           0.65        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.41      0.37        17
           1       0.63      0.55      0.59        31

    accuracy                           0.50        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.52      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.24      0.28        17
           1       0.64      0.74      0.69        31

    accuracy                           0.56        48
   macro avg       0.49      0.49      0.48        48
weighted avg       0.53      0.56      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.47      0.32      0.38        22
           1       0.55      0.69      0.61        26

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.49        48
weighted avg       0.51      0.52      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.61      0.60        23
           1       0.62      0.60      0.61        25

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.42      0.65      0.51        17
           1       0.73      0.52      0.60        31

    accuracy                           0.56        48
   macro avg       0.58      0.58      0.56        48
weighted avg       0.62      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.43      0.53      0.48        19
           1       0.64      0.55      0.59        29

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.56      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.60      0.50      0.55        24
           1       0.57      0.67      0.62        24

    accuracy                           0.58        48
   macro avg       0.59      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.48      0.49        23
           1       0.54      0.56      0.55        25

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.58      0.70      0.64        20
           1       0.75      0.64      0.69        28

    accuracy                           0.67        48
   macro avg       0.67      0.67      0.66        48
weighted avg       0.68      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.71      0.25      0.37        20
           1       0.63      0.93      0.75        28

    accuracy                           0.65        48
   macro avg       0.67      0.59      0.56        48
weighted avg       0.67      0.65      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.40      0.47        20
           1       0.65      0.79      0.71        28

    accuracy                           0.62        48
   macro avg       0.61      0.59      0.59        48
weighted avg       0.62      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.60      0.47      0.53        19
           1       0.70      0.79      0.74        29

    accuracy                           0.67        48
   macro avg       0.65      0.63      0.64        48
weighted avg       0.66      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.44      0.38        16
           1       0.67      0.56      0.61        32

    accuracy                           0.52        48
   macro avg       0.50      0.50      0.49        48
weighted avg       0.56      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.64      0.28      0.39        25
           1       0.51      0.83      0.63        23

    accuracy                           0.54        48
   macro avg       0.57      0.55      0.51        48
weighted avg       0.58      0.54      0.51        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.60      0.53        15
           1       0.79      0.70      0.74        33

    accuracy                           0.67        48
   macro avg       0.63      0.65      0.64        48
weighted avg       0.69      0.67      0.68        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.57      0.71      0.63        17
           1       0.81      0.71      0.76        31

    accuracy                           0.71        48
   macro avg       0.69      0.71      0.70        48
weighted avg       0.73      0.71      0.71        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.40      0.53      0.45        19
           1       0.61      0.48      0.54        29

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.53      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.30      0.36        23
           1       0.50      0.64      0.56        25

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.46        48
weighted avg       0.47      0.48      0.46        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.57      0.55        23
           1       0.58      0.56      0.57        25

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.38      0.15      0.21        20
           1       0.57      0.82      0.68        28

    accuracy                           0.54        48
   macro avg       0.47      0.49      0.45        48
weighted avg       0.49      0.54      0.48        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.50      0.55      0.52        20
           1       0.65      0.61      0.63        28

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.47      0.46        17
           1       0.70      0.68      0.69        31

    accuracy                           0.60        48
   macro avg       0.57      0.57      0.57        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.56      0.53        18
           1       0.71      0.67      0.69        30

    accuracy                           0.62        48
   macro avg       0.61      0.61      0.61        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.59      0.58        22
           1       0.64      0.62      0.63        26

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.38      0.44        21
           1       0.61      0.74      0.67        27

    accuracy                           0.58        48
   macro avg       0.57      0.56      0.56        48
weighted avg       0.57      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.57      0.57      0.57        23
           1       0.60      0.60      0.60        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.70      0.50      0.58        28
           1       0.50      0.70      0.58        20

    accuracy                           0.58        48
   macro avg       0.60      0.60      0.58        48
weighted avg       0.62      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.38      0.42      0.40        19
           1       0.59      0.55      0.57        29

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.40      0.44      0.42        18
           1       0.64      0.60      0.62        30

    accuracy                           0.54        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.55      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.45      0.47        20
           1       0.63      0.68      0.66        28

    accuracy                           0.58        48
   macro avg       0.57      0.56      0.56        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.78      0.28      0.41        25
           1       0.54      0.91      0.68        23

    accuracy                           0.58        48
   macro avg       0.66      0.60      0.54        48
weighted avg       0.66      0.58      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.59      0.54        22
           1       0.59      0.50      0.54        26

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.50      0.53        20
           1       0.67      0.71      0.69        28

    accuracy                           0.62        48
   macro avg       0.61      0.61      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.73      0.65        22
           1       0.71      0.58      0.64        26

    accuracy                           0.65        48
   macro avg       0.65      0.65      0.65        48
weighted avg       0.66      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.53      0.45      0.49        22
           1       0.59      0.65      0.62        26

    accuracy                           0.56        48
   macro avg       0.56      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.27      0.18      0.22        22
           1       0.45      0.58      0.51        26

    accuracy                           0.40        48
   macro avg       0.36      0.38      0.36        48
weighted avg       0.37      0.40      0.37        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.57      0.62      0.59        21
           1       0.68      0.63      0.65        27

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.62      0.64        24
           1       0.64      0.67      0.65        24

    accuracy                           0.65        48
   macro avg       0.65      0.65      0.65        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.38      0.53      0.44        19
           1       0.59      0.45      0.51        29

    accuracy                           0.48        48
   macro avg       0.49      0.49      0.48        48
weighted avg       0.51      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.45      0.48      0.47        21
           1       0.58      0.56      0.57        27

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.30      0.36        23
           1       0.50      0.64      0.56        25

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.46        48
weighted avg       0.47      0.48      0.46        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.33      0.40        24
           1       0.50      0.67      0.57        24

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.49        48
weighted avg       0.50      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.56      0.49        16
           1       0.74      0.62      0.68        32

    accuracy                           0.60        48
   macro avg       0.58      0.59      0.58        48
weighted avg       0.64      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.54      0.64      0.58        22
           1       0.64      0.54      0.58        26

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.58      0.48      0.52        23
           1       0.59      0.68      0.63        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.56      0.53      0.55        17
           1       0.75      0.77      0.76        31

    accuracy                           0.69        48
   macro avg       0.66      0.65      0.65        48
weighted avg       0.68      0.69      0.69        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.57      0.55      0.56        22
           1       0.63      0.65      0.64        26

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.47      0.50        19
           1       0.68      0.72      0.70        29

    accuracy                           0.62        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.38      0.47        24
           1       0.56      0.79      0.66        24

    accuracy                           0.58        48
   macro avg       0.60      0.58      0.56        48
weighted avg       0.60      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.48      0.67      0.56        21
           1       0.63      0.44      0.52        27

    accuracy                           0.54        48
   macro avg       0.56      0.56      0.54        48
weighted avg       0.57      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.39      0.46        23
           1       0.56      0.72      0.63        25

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.55        48
weighted avg       0.56      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.33      0.40        24
           1       0.50      0.67      0.57        24

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.49        48
weighted avg       0.50      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.50      0.57        26
           1       0.54      0.68      0.60        22

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.60      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.25      0.33      0.29        15
           1       0.64      0.55      0.59        33

    accuracy                           0.48        48
   macro avg       0.45      0.44      0.44        48
weighted avg       0.52      0.48      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.67      0.60        18
           1       0.77      0.67      0.71        30

    accuracy                           0.67        48
   macro avg       0.66      0.67      0.66        48
weighted avg       0.69      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.57      0.48      0.52        27
           1       0.44      0.52      0.48        21

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.55      0.29      0.37        21
           1       0.59      0.81      0.69        27

    accuracy                           0.58        48
   macro avg       0.57      0.55      0.53        48
weighted avg       0.57      0.58      0.55        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.75      0.58      0.65        26
           1       0.61      0.77      0.68        22

    accuracy                           0.67        48
   macro avg       0.68      0.67      0.67        48
weighted avg       0.68      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.22      0.32        23
           1       0.55      0.88      0.68        25

    accuracy                           0.56        48
   macro avg       0.59      0.55      0.50        48
weighted avg       0.59      0.56      0.51        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.1)
              precision    recall  f1-score   support

           0       0.43      0.43      0.43        21
           1       0.56      0.56      0.56        27

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.59      0.52      0.55        25
           1       0.54      0.61      0.57        23

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.63      0.46      0.53        26
           1       0.52      0.68      0.59        22

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.58      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.80      0.70        20
           1       0.82      0.64      0.72        28

    accuracy                           0.71        48
   macro avg       0.72      0.72      0.71        48
weighted avg       0.73      0.71      0.71        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.52      0.52      0.52        21
           1       0.63      0.63      0.63        27

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.40      0.29      0.33        21
           1       0.55      0.67      0.60        27

    accuracy                           0.50        48
   macro avg       0.47      0.48      0.47        48
weighted avg       0.48      0.50      0.48        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.20      0.05      0.08        19
           1       0.58      0.86      0.69        29

    accuracy                           0.54        48
   macro avg       0.39      0.46      0.39        48
weighted avg       0.43      0.54      0.45        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.67      0.67      0.67        27
           1       0.57      0.57      0.57        21

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.35      0.30      0.33        23
           1       0.43      0.48      0.45        25

    accuracy                           0.40        48
   macro avg       0.39      0.39      0.39        48
weighted avg       0.39      0.40      0.39        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.47      0.43      0.45        21
           1       0.59      0.63      0.61        27

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.50      0.40        18
           1       0.57      0.40      0.47        30

    accuracy                           0.44        48
   macro avg       0.45      0.45      0.44        48
weighted avg       0.48      0.44      0.44        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.26      0.32        23
           1       0.48      0.64      0.55        25

    accuracy                           0.46        48
   macro avg       0.44      0.45      0.43        48
weighted avg       0.44      0.46      0.44        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.50      0.47        16
           1       0.73      0.69      0.71        32

    accuracy                           0.62        48
   macro avg       0.59      0.59      0.59        48
weighted avg       0.64      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.57      0.70      0.63        23
           1       0.65      0.52      0.58        25

    accuracy                           0.60        48
   macro avg       0.61      0.61      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.30      0.39        23
           1       0.54      0.76      0.63        25

    accuracy                           0.54        48
   macro avg       0.54      0.53      0.51        48
weighted avg       0.54      0.54      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.50      0.17      0.25        24
           1       0.50      0.83      0.62        24

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.44        48
weighted avg       0.50      0.50      0.44        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.50      0.56        20
           1       0.69      0.79      0.73        28

    accuracy                           0.67        48
   macro avg       0.66      0.64      0.64        48
weighted avg       0.66      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.35      0.40      0.37        20
           1       0.52      0.46      0.49        28

    accuracy                           0.44        48
   macro avg       0.43      0.43      0.43        48
weighted avg       0.45      0.44      0.44        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.52      0.55        25
           1       0.54      0.61      0.57        23

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.57      0.55        21
           1       0.64      0.59      0.62        27

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.53      0.35      0.42        23
           1       0.55      0.72      0.62        25

    accuracy                           0.54        48
   macro avg       0.54      0.53      0.52        48
weighted avg       0.54      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        20
           1       0.57      0.93      0.70        28

    accuracy                           0.54        48
   macro avg       0.28      0.46      0.35        48
weighted avg       0.33      0.54      0.41        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.42      0.24      0.30        21
           1       0.56      0.74      0.63        27

    accuracy                           0.52        48
   macro avg       0.49      0.49      0.47        48
weighted avg       0.49      0.52      0.49        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.56      0.71      0.63        21
           1       0.71      0.56      0.63        27

    accuracy                           0.62        48
   macro avg       0.63      0.63      0.63        48
weighted avg       0.64      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.61      0.58      0.60        24
           1       0.60      0.62      0.61        24

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.46      0.26      0.33        23
           1       0.51      0.72      0.60        25

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.47        48
weighted avg       0.49      0.50      0.47        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.47      0.70      0.56        20
           1       0.67      0.43      0.52        28

    accuracy                           0.54        48
   macro avg       0.57      0.56      0.54        48
weighted avg       0.58      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.45      0.48        22
           1       0.57      0.62      0.59        26

    accuracy                           0.54        48
   macro avg       0.54      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.50      0.50        24
           1       0.50      0.50      0.50        24

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.63      0.56        19
           1       0.71      0.59      0.64        29

    accuracy                           0.60        48
   macro avg       0.60      0.61      0.60        48
weighted avg       0.63      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.61      0.64        23
           1       0.67      0.72      0.69        25

    accuracy                           0.67        48
   macro avg       0.67      0.66      0.66        48
weighted avg       0.67      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.27      0.30        22
           1       0.47      0.54      0.50        26

    accuracy                           0.42        48
   macro avg       0.40      0.41      0.40        48
weighted avg       0.41      0.42      0.41        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.001)
              precision    recall  f1-score   support

           0       0.69      0.43      0.53        21
           1       0.66      0.85      0.74        27

    accuracy                           0.67        48
   macro avg       0.67      0.64      0.64        48
weighted avg       0.67      0.67      0.65        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.62      0.60      0.61        25
           1       0.58      0.61      0.60        23

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.54      0.58        24
           1       0.59      0.67      0.63        24

    accuracy                           0.60        48
   macro avg       0.61      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.36      0.50      0.42        18
           1       0.61      0.47      0.53        30

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.47        48
weighted avg       0.52      0.48      0.49        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.35      0.44        23
           1       0.57      0.80      0.67        25

    accuracy                           0.58        48
   macro avg       0.59      0.57      0.56        48
weighted avg       0.59      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.56      0.55        16
           1       0.77      0.75      0.76        32

    accuracy                           0.69        48
   macro avg       0.65      0.66      0.65        48
weighted avg       0.69      0.69      0.69        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.72      0.60        18
           1       0.78      0.60      0.68        30

    accuracy                           0.65        48
   macro avg       0.65      0.66      0.64        48
weighted avg       0.68      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.46      0.51        26
           1       0.48      0.59      0.53        22

    accuracy                           0.52        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.48      0.58      0.52        19
           1       0.68      0.59      0.63        29

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.60      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.30      0.39        23
           1       0.54      0.76      0.63        25

    accuracy                           0.54        48
   macro avg       0.54      0.53      0.51        48
weighted avg       0.54      0.54      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.53      0.53        17
           1       0.74      0.74      0.74        31

    accuracy                           0.67        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.67      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.37      0.44      0.40        16
           1       0.69      0.62      0.66        32

    accuracy                           0.56        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.58      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.35      0.64      0.45        14
           1       0.77      0.50      0.61        34

    accuracy                           0.54        48
   macro avg       0.56      0.57      0.53        48
weighted avg       0.65      0.54      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.62      0.57      0.59        23
           1       0.63      0.68      0.65        25

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.46      0.65      0.54        17
           1       0.75      0.58      0.65        31

    accuracy                           0.60        48
   macro avg       0.60      0.61      0.60        48
weighted avg       0.65      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.42      0.55      0.48        20
           1       0.59      0.46      0.52        28

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.52      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.64      0.35      0.45        26
           1       0.50      0.77      0.61        22

    accuracy                           0.54        48
   macro avg       0.57      0.56      0.53        48
weighted avg       0.58      0.54      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.44      0.48      0.46        25
           1       0.38      0.35      0.36        23

    accuracy                           0.42        48
   macro avg       0.41      0.41      0.41        48
weighted avg       0.41      0.42      0.41        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.38      0.46        21
           1       0.62      0.78      0.69        27

    accuracy                           0.60        48
   macro avg       0.59      0.58      0.57        48
weighted avg       0.60      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        23
           1       0.50      0.92      0.65        25

    accuracy                           0.48        48
   macro avg       0.25      0.46      0.32        48
weighted avg       0.26      0.48      0.34        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.60      0.39      0.47        23
           1       0.58      0.76      0.66        25

    accuracy                           0.58        48
   macro avg       0.59      0.58      0.56        48
weighted avg       0.59      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.25      0.34        24
           1       0.51      0.79      0.62        24

    accuracy                           0.52        48
   macro avg       0.53      0.52      0.48        48
weighted avg       0.53      0.52      0.48        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.47      0.33      0.39        24
           1       0.48      0.62      0.55        24

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.47        48
weighted avg       0.48      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.60      0.41      0.49        22
           1       0.61      0.77      0.68        26

    accuracy                           0.60        48
   macro avg       0.60      0.59      0.58        48
weighted avg       0.60      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.67      0.22      0.33        27
           1       0.46      0.86      0.60        21

    accuracy                           0.50        48
   macro avg       0.56      0.54      0.47        48
weighted avg       0.58      0.50      0.45        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.61      0.58        18
           1       0.75      0.70      0.72        30

    accuracy                           0.67        48
   macro avg       0.65      0.66      0.65        48
weighted avg       0.67      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.41      0.35      0.38        20
           1       0.58      0.64      0.61        28

    accuracy                           0.52        48
   macro avg       0.50      0.50      0.49        48
weighted avg       0.51      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.46      0.55      0.50        20
           1       0.62      0.54      0.58        28

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.56      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.39      0.47        23
           1       0.58      0.76      0.66        25

    accuracy                           0.58        48
   macro avg       0.59      0.58      0.56        48
weighted avg       0.59      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.52      0.48      0.50        23
           1       0.56      0.60      0.58        25

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.52      0.65      0.58        20
           1       0.70      0.57      0.63        28

    accuracy                           0.60        48
   macro avg       0.61      0.61      0.60        48
weighted avg       0.62      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.26      0.35        27
           1       0.43      0.71      0.54        21

    accuracy                           0.46        48
   macro avg       0.48      0.49      0.44        48
weighted avg       0.49      0.46      0.43        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.30      0.37        20
           1       0.61      0.79      0.69        28

    accuracy                           0.58        48
   macro avg       0.56      0.54      0.53        48
weighted avg       0.56      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.45      0.44        20
           1       0.59      0.57      0.58        28

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.42      0.52      0.47        21
           1       0.55      0.44      0.49        27

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.49      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.53      0.45      0.49        20
           1       0.65      0.71      0.68        28

    accuracy                           0.60        48
   macro avg       0.59      0.58      0.58        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.48      0.48        21
           1       0.59      0.59      0.59        27

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.55      0.44      0.49        25
           1       0.50      0.61      0.55        23

    accuracy                           0.52        48
   macro avg       0.53      0.52      0.52        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.64      0.65        22
           1       0.70      0.73      0.72        26

    accuracy                           0.69        48
   macro avg       0.69      0.68      0.68        48
weighted avg       0.69      0.69      0.69        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.38      0.42        24
           1       0.48      0.58      0.53        24

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.47        48
weighted avg       0.48      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.59      0.40      0.48        25
           1       0.52      0.70      0.59        23

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.53        48
weighted avg       0.55      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.58      0.48      0.52        23
           1       0.59      0.68      0.63        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.28      0.36        25
           1       0.47      0.70      0.56        23

    accuracy                           0.48        48
   macro avg       0.49      0.49      0.46        48
weighted avg       0.49      0.48      0.46        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.50      0.04      0.07        26
           1       0.46      0.95      0.62        22

    accuracy                           0.46        48
   macro avg       0.48      0.50      0.34        48
weighted avg       0.48      0.46      0.32        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.32      0.38      0.34        16
           1       0.66      0.59      0.62        32

    accuracy                           0.52        48
   macro avg       0.49      0.48      0.48        48
weighted avg       0.54      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.55      0.52        20
           1       0.65      0.61      0.63        28

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.35      0.33      0.34        18
           1       0.61      0.63      0.62        30

    accuracy                           0.52        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.70      0.58        20
           1       0.70      0.50      0.58        28

    accuracy                           0.58        48
   macro avg       0.60      0.60      0.58        48
weighted avg       0.62      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.64      0.45      0.53        20
           1       0.68      0.82      0.74        28

    accuracy                           0.67        48
   macro avg       0.66      0.64      0.64        48
weighted avg       0.66      0.67      0.65        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.35      0.37        23
           1       0.46      0.52      0.49        25

    accuracy                           0.44        48
   macro avg       0.43      0.43      0.43        48
weighted avg       0.43      0.44      0.43        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.50      0.55        26
           1       0.52      0.64      0.57        22

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.41      0.50      0.45        18
           1       0.65      0.57      0.61        30

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.56      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.29      0.38        24
           1       0.51      0.75      0.61        24

    accuracy                           0.52        48
   macro avg       0.53      0.52      0.49        48
weighted avg       0.53      0.52      0.49        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.45      0.50      0.48        20
           1       0.62      0.57      0.59        28

    accuracy                           0.54        48
   macro avg       0.53      0.54      0.53        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.61      0.52      0.56        21
           1       0.67      0.74      0.70        27

    accuracy                           0.65        48
   macro avg       0.64      0.63      0.63        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.41      0.41      0.41        22
           1       0.50      0.50      0.50        26

    accuracy                           0.46        48
   macro avg       0.45      0.45      0.45        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.57      0.49        21
           1       0.55      0.41      0.47        27

    accuracy                           0.48        48
   macro avg       0.49      0.49      0.48        48
weighted avg       0.50      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.64      0.41      0.50        22
           1       0.62      0.81      0.70        26

    accuracy                           0.62        48
   macro avg       0.63      0.61      0.60        48
weighted avg       0.63      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.43      0.47        23
           1       0.54      0.60      0.57        25

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.45      0.59      0.51        17
           1       0.73      0.61      0.67        31

    accuracy                           0.60        48
   macro avg       0.59      0.60      0.59        48
weighted avg       0.63      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.33      0.28      0.30        18
           1       0.61      0.67      0.63        30

    accuracy                           0.52        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.50      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.29      0.33        24
           1       0.43      0.54      0.48        24

    accuracy                           0.42        48
   macro avg       0.41      0.42      0.41        48
weighted avg       0.41      0.42      0.41        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.48      0.49        21
           1       0.61      0.63      0.62        27

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.56      0.61      0.58        23
           1       0.61      0.56      0.58        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.39      0.45        23
           1       0.55      0.68      0.61        25

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.54      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.62      0.19      0.29        26
           1       0.47      0.86      0.61        22

    accuracy                           0.50        48
   macro avg       0.55      0.53      0.45        48
weighted avg       0.56      0.50      0.44        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.48      0.49        23
           1       0.54      0.56      0.55        25

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.32      0.35      0.33        20
           1       0.50      0.46      0.48        28

    accuracy                           0.42        48
   macro avg       0.41      0.41      0.41        48
weighted avg       0.42      0.42      0.42        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.56      0.48        18
           1       0.67      0.53      0.59        30

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.57      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.45      0.54        22
           1       0.64      0.81      0.71        26

    accuracy                           0.65        48
   macro avg       0.65      0.63      0.63        48
weighted avg       0.65      0.65      0.63        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.50      0.54        20
           1       0.68      0.75      0.71        28

    accuracy                           0.65        48
   macro avg       0.63      0.62      0.63        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.56      0.61        25
           1       0.59      0.70      0.64        23

    accuracy                           0.62        48
   macro avg       0.63      0.63      0.62        48
weighted avg       0.63      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.54      0.58        26
           1       0.54      0.64      0.58        22

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.44      0.60      0.51        20
           1       0.62      0.46      0.53        28

    accuracy                           0.52        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.55      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.41      0.37      0.39        19
           1       0.61      0.66      0.63        29

    accuracy                           0.54        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.53      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.68      0.54      0.60        24
           1       0.62      0.75      0.68        24

    accuracy                           0.65        48
   macro avg       0.65      0.65      0.64        48
weighted avg       0.65      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.30      0.35        20
           1       0.59      0.71      0.65        28

    accuracy                           0.54        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.52      0.54      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.47      0.43        19
           1       0.60      0.52      0.56        29

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.49        48
weighted avg       0.52      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.59      0.52      0.55        25
           1       0.54      0.61      0.57        23

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.50      0.50        20
           1       0.64      0.64      0.64        28

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.57        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.38      0.43        21
           1       0.59      0.70      0.64        27

    accuracy                           0.56        48
   macro avg       0.55      0.54      0.54        48
weighted avg       0.55      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.40      0.35      0.37        23
           1       0.46      0.52      0.49        25

    accuracy                           0.44        48
   macro avg       0.43      0.43      0.43        48
weighted avg       0.43      0.44      0.43        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.32      0.35        22
           1       0.50      0.58      0.54        26

    accuracy                           0.46        48
   macro avg       0.44      0.45      0.44        48
weighted avg       0.45      0.46      0.45        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.33      0.10      0.15        21
           1       0.55      0.85      0.67        27

    accuracy                           0.52        48
   macro avg       0.44      0.47      0.41        48
weighted avg       0.45      0.52      0.44        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.58      0.58        19
           1       0.72      0.72      0.72        29

    accuracy                           0.67        48
   macro avg       0.65      0.65      0.65        48
weighted avg       0.67      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.72      0.67        18
           1       0.81      0.73      0.77        30

    accuracy                           0.73        48
   macro avg       0.72      0.73      0.72        48
weighted avg       0.74      0.73      0.73        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.30      0.35        23
           1       0.48      0.60      0.54        25

    accuracy                           0.46        48
   macro avg       0.45      0.45      0.44        48
weighted avg       0.45      0.46      0.45        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.64      0.57        22
           1       0.62      0.50      0.55        26

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.58      0.61        26
           1       0.56      0.64      0.60        22

    accuracy                           0.60        48
   macro avg       0.61      0.61      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.63      0.46      0.53        26
           1       0.52      0.68      0.59        22

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.58      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.70      0.28      0.40        25
           1       0.53      0.87      0.66        23

    accuracy                           0.56        48
   macro avg       0.61      0.57      0.53        48
weighted avg       0.62      0.56      0.52        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.28      0.33        18
           1       0.64      0.77      0.70        30

    accuracy                           0.58        48
   macro avg       0.53      0.52      0.52        48
weighted avg       0.56      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.65      0.68      0.67        22
           1       0.72      0.69      0.71        26

    accuracy                           0.69        48
   macro avg       0.69      0.69      0.69        48
weighted avg       0.69      0.69      0.69        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.47      0.43      0.45        21
           1       0.59      0.63      0.61        27

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.56      0.61      0.58        23
           1       0.61      0.56      0.58        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.45      0.22      0.29        23
           1       0.51      0.76      0.61        25

    accuracy                           0.50        48
   macro avg       0.48      0.49      0.45        48
weighted avg       0.49      0.50      0.46        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.48      0.48      0.48        21
           1       0.59      0.59      0.59        27

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.69      0.48      0.56        23
           1       0.62      0.80      0.70        25

    accuracy                           0.65        48
   macro avg       0.66      0.64      0.63        48
weighted avg       0.65      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.1)
              precision    recall  f1-score   support

           0       0.65      0.50      0.57        26
           1       0.54      0.68      0.60        22

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.60      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        21
           1       0.56      1.00      0.72        27

    accuracy                           0.56        48
   macro avg       0.28      0.50      0.36        48
weighted avg       0.32      0.56      0.40        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.52      0.52      0.52        23
           1       0.56      0.56      0.56        25

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.56      0.48        18
           1       0.67      0.53      0.59        30

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.57      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.62      0.60        21
           1       0.69      0.67      0.68        27

    accuracy                           0.65        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.61      0.48        18
           1       0.65      0.43      0.52        30

    accuracy                           0.50        48
   macro avg       0.52      0.52      0.50        48
weighted avg       0.55      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.62      0.53      0.57        19
           1       0.72      0.79      0.75        29

    accuracy                           0.69        48
   macro avg       0.67      0.66      0.66        48
weighted avg       0.68      0.69      0.68        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.62      0.43      0.51        23
           1       0.59      0.76      0.67        25

    accuracy                           0.60        48
   macro avg       0.61      0.60      0.59        48
weighted avg       0.61      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.43      0.49        23
           1       0.57      0.68      0.62        25

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.50      0.50        20
           1       0.64      0.64      0.64        28

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.57        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.62      0.40      0.49        25
           1       0.53      0.74      0.62        23

    accuracy                           0.56        48
   macro avg       0.58      0.57      0.55        48
weighted avg       0.58      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.53      0.51        17
           1       0.73      0.71      0.72        31

    accuracy                           0.65        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.56      0.53        18
           1       0.71      0.67      0.69        30

    accuracy                           0.62        48
   macro avg       0.61      0.61      0.61        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.42      0.48        24
           1       0.53      0.67      0.59        24

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.54      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.52      0.50        23
           1       0.52      0.48      0.50        25

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.45      0.48        22
           1       0.57      0.62      0.59        26

    accuracy                           0.54        48
   macro avg       0.54      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.35      0.47      0.40        17
           1       0.64      0.52      0.57        31

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.54      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.67      0.40      0.50        25
           1       0.55      0.78      0.64        23

    accuracy                           0.58        48
   macro avg       0.61      0.59      0.57        48
weighted avg       0.61      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.60      0.59        20
           1       0.70      0.68      0.69        28

    accuracy                           0.65        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.64      0.64        22
           1       0.69      0.69      0.69        26

    accuracy                           0.67        48
   macro avg       0.66      0.66      0.66        48
weighted avg       0.67      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.39      0.35      0.37        20
           1       0.57      0.61      0.59        28

    accuracy                           0.50        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.49      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.41      0.41      0.41        17
           1       0.68      0.68      0.68        31

    accuracy                           0.58        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.57      0.56        21
           1       0.65      0.63      0.64        27

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.30      0.40        23
           1       0.56      0.80      0.66        25

    accuracy                           0.56        48
   macro avg       0.57      0.55      0.53        48
weighted avg       0.57      0.56      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.37      0.44      0.40        16
           1       0.69      0.62      0.66        32

    accuracy                           0.56        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.58      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.80      0.15      0.26        26
           1       0.49      0.95      0.65        22

    accuracy                           0.52        48
   macro avg       0.64      0.55      0.45        48
weighted avg       0.66      0.52      0.44        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.62      0.35      0.44        23
           1       0.57      0.80      0.67        25

    accuracy                           0.58        48
   macro avg       0.59      0.57      0.56        48
weighted avg       0.59      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.39      0.39        18
           1       0.63      0.63      0.63        30

    accuracy                           0.54        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.40      0.47        25
           1       0.50      0.65      0.57        23

    accuracy                           0.52        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.53      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=0.1, gamma=1)
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        24
           1       0.50      1.00      0.67        24

    accuracy                           0.50        48
   macro avg       0.25      0.50      0.33        48
weighted avg       0.25      0.50      0.33        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.40      0.16      0.23        25
           1       0.45      0.74      0.56        23

    accuracy                           0.44        48
   macro avg       0.42      0.45      0.39        48
weighted avg       0.42      0.44      0.39        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.38      0.50      0.43        18
           1       0.62      0.50      0.56        30

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.49        48
weighted avg       0.53      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.48      0.48        23
           1       0.52      0.52      0.52        25

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.58      0.46        19
           1       0.58      0.38      0.46        29

    accuracy                           0.46        48
   macro avg       0.48      0.48      0.46        48
weighted avg       0.50      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.56      0.53        18
           1       0.71      0.67      0.69        30

    accuracy                           0.62        48
   macro avg       0.61      0.61      0.61        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.46      0.58      0.51        19
           1       0.67      0.55      0.60        29

    accuracy                           0.56        48
   macro avg       0.56      0.57      0.56        48
weighted avg       0.58      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       1.00      0.04      0.08        25
           1       0.49      1.00      0.66        23

    accuracy                           0.50        48
   macro avg       0.74      0.52      0.37        48
weighted avg       0.76      0.50      0.35        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.58      0.62        24
           1       0.63      0.71      0.67        24

    accuracy                           0.65        48
   macro avg       0.65      0.65      0.64        48
weighted avg       0.65      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.74      0.60        19
           1       0.75      0.52      0.61        29

    accuracy                           0.60        48
   macro avg       0.62      0.63      0.60        48
weighted avg       0.65      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.42      0.41        19
           1       0.61      0.59      0.60        29

    accuracy                           0.52        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.56      0.58      0.57        24
           1       0.57      0.54      0.55        24

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.50      0.45        18
           1       0.65      0.57      0.61        30

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.56      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.38      0.41        21
           1       0.57      0.63      0.60        27

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.51      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.44      0.52      0.48        21
           1       0.57      0.48      0.52        27

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.47      0.39      0.43        23
           1       0.52      0.60      0.56        25

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.49        48
weighted avg       0.50      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       1.00      0.08      0.15        25
           1       0.50      1.00      0.67        23

    accuracy                           0.52        48
   macro avg       0.75      0.54      0.41        48
weighted avg       0.76      0.52      0.40        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.29      0.39        24
           1       0.53      0.79      0.63        24

    accuracy                           0.54        48
   macro avg       0.56      0.54      0.51        48
weighted avg       0.56      0.54      0.51        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.52      0.46      0.49        24
           1       0.52      0.58      0.55        24

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.45      0.39      0.42        23
           1       0.50      0.56      0.53        25

    accuracy                           0.48        48
   macro avg       0.47      0.48      0.47        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.57      0.52      0.55        23
           1       0.59      0.64      0.62        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.48      0.44        21
           1       0.54      0.48      0.51        27

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.49      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.39      0.50      0.44        18
           1       0.64      0.53      0.58        30

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.51        48
weighted avg       0.55      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.56      0.21      0.30        24
           1       0.51      0.83      0.63        24

    accuracy                           0.52        48
   macro avg       0.53      0.52      0.47        48
weighted avg       0.53      0.52      0.47        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.67      0.52      0.59        23
           1       0.63      0.76      0.69        25

    accuracy                           0.65        48
   macro avg       0.65      0.64      0.64        48
weighted avg       0.65      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.55      0.48      0.51        23
           1       0.57      0.64      0.60        25

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.67      0.32      0.43        25
           1       0.53      0.83      0.64        23

    accuracy                           0.56        48
   macro avg       0.60      0.57      0.54        48
weighted avg       0.60      0.56      0.53        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.53      0.49        17
           1       0.71      0.65      0.68        31

    accuracy                           0.60        48
   macro avg       0.58      0.59      0.58        48
weighted avg       0.62      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.58      0.50      0.54        22
           1       0.62      0.69      0.65        26

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.35      0.29      0.32        24
           1       0.39      0.46      0.42        24

    accuracy                           0.38        48
   macro avg       0.37      0.38      0.37        48
weighted avg       0.37      0.38      0.37        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.43      0.44        23
           1       0.50      0.52      0.51        25

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.38      0.45        24
           1       0.53      0.71      0.61        24

    accuracy                           0.54        48
   macro avg       0.55      0.54      0.53        48
weighted avg       0.55      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.53      0.48        19
           1       0.64      0.55      0.59        29

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.56      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.50      0.50        18
           1       0.70      0.70      0.70        30

    accuracy                           0.62        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.38      0.43        24
           1       0.50      0.62      0.56        24

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.49        48
weighted avg       0.50      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.12      0.18        24
           1       0.46      0.75      0.57        24

    accuracy                           0.44        48
   macro avg       0.40      0.44      0.38        48
weighted avg       0.40      0.44      0.38        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.42      0.45        24
           1       0.50      0.58      0.54        24

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.35      0.41        23
           1       0.53      0.68      0.60        25

    accuracy                           0.52        48
   macro avg       0.52      0.51      0.50        48
weighted avg       0.52      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.55      0.55      0.55        22
           1       0.62      0.62      0.62        26

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.35      0.42      0.38        19
           1       0.56      0.48      0.52        29

    accuracy                           0.46        48
   macro avg       0.45      0.45      0.45        48
weighted avg       0.48      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.41      0.50      0.45        18
           1       0.65      0.57      0.61        30

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.56      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.38      0.44      0.41        18
           1       0.63      0.57      0.60        30

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.54      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.56      0.41      0.47        22
           1       0.59      0.73      0.66        26

    accuracy                           0.58        48
   macro avg       0.58      0.57      0.56        48
weighted avg       0.58      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.30      0.38      0.33        16
           1       0.64      0.56      0.60        32

    accuracy                           0.50        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.53      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.50      0.52        22
           1       0.61      0.65      0.63        26

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.53      0.48        19
           1       0.64      0.55      0.59        29

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.56      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.59      0.43      0.50        23
           1       0.58      0.72      0.64        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.57        48
weighted avg       0.58      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.80      0.70        20
           1       0.82      0.64      0.72        28

    accuracy                           0.71        48
   macro avg       0.72      0.72      0.71        48
weighted avg       0.73      0.71      0.71        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.53      0.38      0.44        21
           1       0.61      0.74      0.67        27

    accuracy                           0.58        48
   macro avg       0.57      0.56      0.56        48
weighted avg       0.57      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.67      0.11      0.18        19
           1       0.62      0.97      0.76        29

    accuracy                           0.62        48
   macro avg       0.64      0.54      0.47        48
weighted avg       0.64      0.62      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.55      0.53        22
           1       0.60      0.58      0.59        26

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.26      0.37        27
           1       0.46      0.81      0.59        21

    accuracy                           0.50        48
   macro avg       0.55      0.53      0.48        48
weighted avg       0.56      0.50      0.46        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.31      0.34        16
           1       0.69      0.75      0.72        32

    accuracy                           0.60        48
   macro avg       0.54      0.53      0.53        48
weighted avg       0.59      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.55      0.63      0.59        19
           1       0.73      0.66      0.69        29

    accuracy                           0.65        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.66      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.68      0.62        22
           1       0.68      0.58      0.62        26

    accuracy                           0.62        48
   macro avg       0.63      0.63      0.62        48
weighted avg       0.63      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.47      0.35      0.40        20
           1       0.61      0.71      0.66        28

    accuracy                           0.56        48
   macro avg       0.54      0.53      0.53        48
weighted avg       0.55      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.42      0.55      0.48        20
           1       0.59      0.46      0.52        28

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.52      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.52      0.51        25
           1       0.45      0.43      0.44        23

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.50      0.52        22
           1       0.61      0.65      0.63        26

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.50      0.70      0.58        20
           1       0.70      0.50      0.58        28

    accuracy                           0.58        48
   macro avg       0.60      0.60      0.58        48
weighted avg       0.62      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.50      0.56        20
           1       0.69      0.79      0.73        28

    accuracy                           0.67        48
   macro avg       0.66      0.64      0.64        48
weighted avg       0.66      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.38      0.43        21
           1       0.59      0.70      0.64        27

    accuracy                           0.56        48
   macro avg       0.55      0.54      0.54        48
weighted avg       0.55      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.53      0.41      0.46        22
           1       0.58      0.69      0.63        26

    accuracy                           0.56        48
   macro avg       0.56      0.55      0.55        48
weighted avg       0.56      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.47      0.43        19
           1       0.60      0.52      0.56        29

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.49        48
weighted avg       0.52      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.46      0.61      0.52        18
           1       0.71      0.57      0.63        30

    accuracy                           0.58        48
   macro avg       0.58      0.59      0.58        48
weighted avg       0.61      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.45      0.43        22
           1       0.48      0.42      0.45        26

    accuracy                           0.44        48
   macro avg       0.44      0.44      0.44        48
weighted avg       0.44      0.44      0.44        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.38      0.48        21
           1       0.64      0.85      0.73        27

    accuracy                           0.65        48
   macro avg       0.65      0.62      0.61        48
weighted avg       0.65      0.65      0.62        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.67      0.33      0.44        24
           1       0.56      0.83      0.67        24

    accuracy                           0.58        48
   macro avg       0.61      0.58      0.56        48
weighted avg       0.61      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.40      0.32      0.36        25
           1       0.39      0.48      0.43        23

    accuracy                           0.40        48
   macro avg       0.40      0.40      0.39        48
weighted avg       0.40      0.40      0.39        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.40      0.38      0.39        21
           1       0.54      0.56      0.55        27

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.56      0.58        27
           1       0.48      0.52      0.50        21

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.47      0.43        17
           1       0.68      0.61      0.64        31

    accuracy                           0.56        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.58      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.59      0.48      0.53        21
           1       0.65      0.74      0.69        27

    accuracy                           0.62        48
   macro avg       0.62      0.61      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.61      0.50      0.55        22
           1       0.63      0.73      0.68        26

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.40      0.44        20
           1       0.62      0.71      0.67        28

    accuracy                           0.58        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.47      0.43      0.45        21
           1       0.59      0.63      0.61        27

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.53      0.43      0.47        21
           1       0.61      0.70      0.66        27

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.45      0.53      0.49        17
           1       0.71      0.65      0.68        31

    accuracy                           0.60        48
   macro avg       0.58      0.59      0.58        48
weighted avg       0.62      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.86      0.22      0.35        27
           1       0.49      0.95      0.65        21

    accuracy                           0.54        48
   macro avg       0.67      0.59      0.50        48
weighted avg       0.70      0.54      0.48        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.55      0.48      0.51        23
           1       0.57      0.64      0.60        25

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.57      0.35      0.43        23
           1       0.56      0.76      0.64        25

    accuracy                           0.56        48
   macro avg       0.57      0.55      0.54        48
weighted avg       0.56      0.56      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.46      0.50        26
           1       0.46      0.55      0.50        22

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.75      0.12      0.21        24
           1       0.52      0.96      0.68        24

    accuracy                           0.54        48
   macro avg       0.64      0.54      0.45        48
weighted avg       0.64      0.54      0.45        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.43      0.47      0.45        19
           1       0.63      0.59      0.61        29

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.50      0.56        20
           1       0.69      0.79      0.73        28

    accuracy                           0.67        48
   macro avg       0.66      0.64      0.64        48
weighted avg       0.66      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.36      0.44        22
           1       0.59      0.77      0.67        26

    accuracy                           0.58        48
   macro avg       0.58      0.57      0.56        48
weighted avg       0.58      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.44      0.20      0.28        20
           1       0.59      0.82      0.69        28

    accuracy                           0.56        48
   macro avg       0.52      0.51      0.48        48
weighted avg       0.53      0.56      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.61      0.54      0.57        26
           1       0.52      0.59      0.55        22

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.78      0.54      0.64        26
           1       0.60      0.82      0.69        22

    accuracy                           0.67        48
   macro avg       0.69      0.68      0.66        48
weighted avg       0.70      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.43      0.41        21
           1       0.52      0.48      0.50        27

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.45        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.67      0.26      0.38        23
           1       0.56      0.88      0.69        25

    accuracy                           0.58        48
   macro avg       0.62      0.57      0.53        48
weighted avg       0.61      0.58      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.56      0.50      0.53        18
           1       0.72      0.77      0.74        30

    accuracy                           0.67        48
   macro avg       0.64      0.63      0.64        48
weighted avg       0.66      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.42      0.47      0.44        17
           1       0.69      0.65      0.67        31

    accuracy                           0.58        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.59      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.50      0.51        22
           1       0.59      0.62      0.60        26

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.62      0.65      0.64        23
           1       0.67      0.64      0.65        25

    accuracy                           0.65        48
   macro avg       0.65      0.65      0.65        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.35      0.50      0.41        16
           1       0.68      0.53      0.60        32

    accuracy                           0.52        48
   macro avg       0.51      0.52      0.50        48
weighted avg       0.57      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.58      0.58      0.58        24
           1       0.58      0.58      0.58        24

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.45      0.53        20
           1       0.68      0.82      0.74        28

    accuracy                           0.67        48
   macro avg       0.66      0.64      0.64        48
weighted avg       0.66      0.67      0.65        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.59      0.42      0.49        24
           1       0.55      0.71      0.62        24

    accuracy                           0.56        48
   macro avg       0.57      0.56      0.55        48
weighted avg       0.57      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.48      0.54        21
           1       0.66      0.78      0.71        27

    accuracy                           0.65        48
   macro avg       0.64      0.63      0.63        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.62      0.38      0.48        26
           1       0.50      0.73      0.59        22

    accuracy                           0.54        48
   macro avg       0.56      0.56      0.53        48
weighted avg       0.57      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       1.00      0.09      0.17        22
           1       0.57      1.00      0.72        26

    accuracy                           0.58        48
   macro avg       0.78      0.55      0.44        48
weighted avg       0.76      0.58      0.47        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.45      0.53        20
           1       0.68      0.82      0.74        28

    accuracy                           0.67        48
   macro avg       0.66      0.64      0.64        48
weighted avg       0.66      0.67      0.65        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.37      0.37      0.37        19
           1       0.59      0.59      0.59        29

    accuracy                           0.50        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.53      0.40      0.45        25
           1       0.48      0.61      0.54        23

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.51      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.78      0.67        18
           1       0.83      0.67      0.74        30

    accuracy                           0.71        48
   macro avg       0.71      0.72      0.70        48
weighted avg       0.74      0.71      0.71        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       1.00      0.11      0.19        28
           1       0.44      1.00      0.62        20

    accuracy                           0.48        48
   macro avg       0.72      0.55      0.40        48
weighted avg       0.77      0.48      0.37        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.30      0.37        20
           1       0.61      0.79      0.69        28

    accuracy                           0.58        48
   macro avg       0.56      0.54      0.53        48
weighted avg       0.56      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.70      0.54      0.61        26
           1       0.57      0.73      0.64        22

    accuracy                           0.62        48
   macro avg       0.64      0.63      0.62        48
weighted avg       0.64      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.29      0.32        21
           1       0.53      0.63      0.58        27

    accuracy                           0.48        48
   macro avg       0.45      0.46      0.45        48
weighted avg       0.46      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.60      0.43      0.50        21
           1       0.64      0.78      0.70        27

    accuracy                           0.62        48
   macro avg       0.62      0.60      0.60        48
weighted avg       0.62      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.52      0.51        25
           1       0.45      0.43      0.44        23

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.74      0.52      0.61        27
           1       0.55      0.76      0.64        21

    accuracy                           0.62        48
   macro avg       0.64      0.64      0.62        48
weighted avg       0.66      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.28      0.44      0.34        18
           1       0.47      0.30      0.37        30

    accuracy                           0.35        48
   macro avg       0.37      0.37      0.35        48
weighted avg       0.40      0.35      0.36        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.46      0.68      0.55        19
           1       0.70      0.48      0.57        29

    accuracy                           0.56        48
   macro avg       0.58      0.58      0.56        48
weighted avg       0.61      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.33      0.44        21
           1       0.62      0.85      0.72        27

    accuracy                           0.62        48
   macro avg       0.63      0.59      0.58        48
weighted avg       0.63      0.62      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.67      0.08      0.15        24
           1       0.51      0.96      0.67        24

    accuracy                           0.52        48
   macro avg       0.59      0.52      0.41        48
weighted avg       0.59      0.52      0.41        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.43      0.13      0.20        23
           1       0.51      0.84      0.64        25

    accuracy                           0.50        48
   macro avg       0.47      0.49      0.42        48
weighted avg       0.47      0.50      0.43        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.55      0.55        20
           1       0.68      0.68      0.68        28

    accuracy                           0.62        48
   macro avg       0.61      0.61      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.38      0.41        21
           1       0.57      0.63      0.60        27

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.51      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.47      0.39      0.43        23
           1       0.52      0.60      0.56        25

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.49        48
weighted avg       0.50      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.60      0.39      0.47        23
           1       0.58      0.76      0.66        25

    accuracy                           0.58        48
   macro avg       0.59      0.58      0.56        48
weighted avg       0.59      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.36      0.59      0.44        17
           1       0.65      0.42      0.51        31

    accuracy                           0.48        48
   macro avg       0.50      0.50      0.48        48
weighted avg       0.55      0.48      0.49        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.42      0.46        19
           1       0.66      0.72      0.69        29

    accuracy                           0.60        48
   macro avg       0.58      0.57      0.57        48
weighted avg       0.59      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.48      0.47        21
           1       0.58      0.56      0.57        27

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.54      0.57        24
           1       0.58      0.62      0.60        24

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.35      0.40        20
           1       0.61      0.71      0.66        28

    accuracy                           0.56        48
   macro avg       0.54      0.53      0.53        48
weighted avg       0.55      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.54      0.33      0.41        21
           1       0.60      0.78      0.68        27

    accuracy                           0.58        48
   macro avg       0.57      0.56      0.54        48
weighted avg       0.57      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.35      0.42        23
           1       0.55      0.72      0.62        25

    accuracy                           0.54        48
   macro avg       0.54      0.53      0.52        48
weighted avg       0.54      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.50      0.48        20
           1       0.62      0.57      0.59        28

    accuracy                           0.54        48
   macro avg       0.53      0.54      0.53        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.37      0.40        19
           1       0.62      0.69      0.66        29

    accuracy                           0.56        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.55      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.83      0.23      0.36        22
           1       0.60      0.96      0.74        26

    accuracy                           0.62        48
   macro avg       0.71      0.59      0.55        48
weighted avg       0.70      0.62      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.40      0.44      0.42        18
           1       0.64      0.60      0.62        30

    accuracy                           0.54        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.55      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.53      0.56      0.54        18
           1       0.72      0.70      0.71        30

    accuracy                           0.65        48
   macro avg       0.63      0.63      0.63        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.44      0.18      0.26        22
           1       0.54      0.81      0.65        26

    accuracy                           0.52        48
   macro avg       0.49      0.49      0.45        48
weighted avg       0.50      0.52      0.47        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.41      0.41        22
           1       0.50      0.50      0.50        26

    accuracy                           0.46        48
   macro avg       0.45      0.45      0.45        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.53      0.51        17
           1       0.73      0.71      0.72        31

    accuracy                           0.65        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.38      0.29      0.32        21
           1       0.53      0.63      0.58        27

    accuracy                           0.48        48
   macro avg       0.45      0.46      0.45        48
weighted avg       0.46      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.62      0.59        21
           1       0.68      0.63      0.65        27

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.53      0.47        19
           1       0.62      0.52      0.57        29

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.54      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.30      0.40        23
           1       0.56      0.80      0.66        25

    accuracy                           0.56        48
   macro avg       0.57      0.55      0.53        48
weighted avg       0.57      0.56      0.53        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.50      0.25      0.33        20
           1       0.61      0.82      0.70        28

    accuracy                           0.58        48
   macro avg       0.55      0.54      0.52        48
weighted avg       0.56      0.58      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.46      0.54        28
           1       0.46      0.65      0.54        20

    accuracy                           0.54        48
   macro avg       0.56      0.56      0.54        48
weighted avg       0.57      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.45      0.50        22
           1       0.60      0.69      0.64        26

    accuracy                           0.58        48
   macro avg       0.58      0.57      0.57        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.25      0.31        24
           1       0.45      0.62      0.53        24

    accuracy                           0.44        48
   macro avg       0.43      0.44      0.42        48
weighted avg       0.43      0.44      0.42        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.55      0.56        22
           1       0.63      0.65      0.64        26

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.75      0.60        20
           1       0.72      0.46      0.57        28

    accuracy                           0.58        48
   macro avg       0.61      0.61      0.58        48
weighted avg       0.63      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.24      0.30        21
           1       0.56      0.74      0.63        27

    accuracy                           0.52        48
   macro avg       0.49      0.49      0.47        48
weighted avg       0.49      0.52      0.49        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.57      0.15      0.24        26
           1       0.46      0.86      0.60        22

    accuracy                           0.48        48
   macro avg       0.52      0.51      0.42        48
weighted avg       0.52      0.48      0.41        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.61      0.51        18
           1       0.70      0.53      0.60        30

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.60      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.41      0.41        17
           1       0.68      0.68      0.68        31

    accuracy                           0.58        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.44      0.19      0.27        21
           1       0.56      0.81      0.67        27

    accuracy                           0.54        48
   macro avg       0.50      0.50      0.47        48
weighted avg       0.51      0.54      0.49        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.56      0.45      0.50        22
           1       0.60      0.69      0.64        26

    accuracy                           0.58        48
   macro avg       0.58      0.57      0.57        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.39      0.39      0.39        18
           1       0.63      0.63      0.63        30

    accuracy                           0.54        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.39      0.44        18
           1       0.68      0.77      0.72        30

    accuracy                           0.62        48
   macro avg       0.59      0.58      0.58        48
weighted avg       0.61      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.80      0.30      0.43        27
           1       0.50      0.90      0.64        21

    accuracy                           0.56        48
   macro avg       0.65      0.60      0.54        48
weighted avg       0.67      0.56      0.53        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.40      0.07      0.12        27
           1       0.42      0.86      0.56        21

    accuracy                           0.42        48
   macro avg       0.41      0.47      0.34        48
weighted avg       0.41      0.42      0.32        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.36      0.45      0.40        20
           1       0.52      0.43      0.47        28

    accuracy                           0.44        48
   macro avg       0.44      0.44      0.44        48
weighted avg       0.45      0.44      0.44        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.47      0.39      0.43        23
           1       0.52      0.60      0.56        25

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.49        48
weighted avg       0.50      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.64      0.54      0.58        26
           1       0.54      0.64      0.58        22

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.40      0.36      0.38        22
           1       0.50      0.54      0.52        26

    accuracy                           0.46        48
   macro avg       0.45      0.45      0.45        48
weighted avg       0.45      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.1)
              precision    recall  f1-score   support

           0       0.44      0.30      0.36        23
           1       0.50      0.64      0.56        25

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.46        48
weighted avg       0.47      0.48      0.46        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.39      0.41        23
           1       0.48      0.52      0.50        25

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.45        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.48      0.52        23
           1       0.59      0.68      0.63        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.50      0.51        24
           1       0.52      0.54      0.53        24

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.47      0.45        19
           1       0.63      0.59      0.61        29

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.57      0.56        21
           1       0.65      0.63      0.64        27

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.48      0.55        27
           1       0.50      0.67      0.57        21

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.58      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.55      0.48      0.51        23
           1       0.57      0.64      0.60        25

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.35      0.40        20
           1       0.61      0.71      0.66        28

    accuracy                           0.56        48
   macro avg       0.54      0.53      0.53        48
weighted avg       0.55      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.60      0.68      0.64        22
           1       0.70      0.62      0.65        26

    accuracy                           0.65        48
   macro avg       0.65      0.65      0.65        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.50      0.09      0.15        23
           1       0.52      0.92      0.67        25

    accuracy                           0.52        48
   macro avg       0.51      0.50      0.41        48
weighted avg       0.51      0.52      0.42        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.40      0.44        20
           1       0.62      0.71      0.67        28

    accuracy                           0.58        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.61      0.52      0.56        21
           1       0.67      0.74      0.70        27

    accuracy                           0.65        48
   macro avg       0.64      0.63      0.63        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.35      0.42      0.38        19
           1       0.56      0.48      0.52        29

    accuracy                           0.46        48
   macro avg       0.45      0.45      0.45        48
weighted avg       0.48      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.48      0.52        25
           1       0.52      0.61      0.56        23

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.67      0.08      0.14        25
           1       0.49      0.96      0.65        23

    accuracy                           0.50        48
   macro avg       0.58      0.52      0.39        48
weighted avg       0.58      0.50      0.38        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.63      0.55      0.59        22
           1       0.66      0.73      0.69        26

    accuracy                           0.65        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.55      0.50      0.52        24
           1       0.54      0.58      0.56        24

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.10      0.17        29
           1       0.38      0.84      0.52        19

    accuracy                           0.40        48
   macro avg       0.44      0.47      0.35        48
weighted avg       0.45      0.40      0.31        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.32      0.43      0.36        14
           1       0.72      0.62      0.67        34

    accuracy                           0.56        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.61      0.56      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.35      0.26      0.30        23
           1       0.45      0.56      0.50        25

    accuracy                           0.42        48
   macro avg       0.40      0.41      0.40        48
weighted avg       0.40      0.42      0.40        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.56      0.56      0.56        25
           1       0.52      0.52      0.52        23

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.58      0.48      0.52        23
           1       0.59      0.68      0.63        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.47      0.45      0.46        20
           1       0.62      0.64      0.63        28

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.38      0.41        24
           1       0.46      0.54      0.50        24

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.45        48
weighted avg       0.46      0.46      0.45        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.62      0.53        16
           1       0.77      0.62      0.69        32

    accuracy                           0.62        48
   macro avg       0.61      0.62      0.61        48
weighted avg       0.66      0.62      0.64        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       1.00      0.23      0.38        26
           1       0.52      1.00      0.69        22

    accuracy                           0.58        48
   macro avg       0.76      0.62      0.53        48
weighted avg       0.78      0.58      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.001)
              precision    recall  f1-score   support

           0       0.60      0.13      0.21        23
           1       0.53      0.92      0.68        25

    accuracy                           0.54        48
   macro avg       0.57      0.53      0.45        48
weighted avg       0.57      0.54      0.46        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.62      0.54        16
           1       0.78      0.66      0.71        32

    accuracy                           0.65        48
   macro avg       0.63      0.64      0.63        48
weighted avg       0.68      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.33      0.38        24
           1       0.47      0.58      0.52        24

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.45        48
weighted avg       0.46      0.46      0.45        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.45      0.41      0.43        22
           1       0.54      0.58      0.56        26

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.41      0.43      0.42        21
           1       0.54      0.52      0.53        27

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.57      0.76      0.65        21
           1       0.75      0.56      0.64        27

    accuracy                           0.65        48
   macro avg       0.66      0.66      0.65        48
weighted avg       0.67      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.33      0.53      0.41        15
           1       0.71      0.52      0.60        33

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.50        48
weighted avg       0.59      0.52      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.53      0.53        19
           1       0.69      0.69      0.69        29

    accuracy                           0.62        48
   macro avg       0.61      0.61      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.71      0.45      0.56        22
           1       0.65      0.85      0.73        26

    accuracy                           0.67        48
   macro avg       0.68      0.65      0.64        48
weighted avg       0.68      0.67      0.65        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.18      0.27        28
           1       0.41      0.80      0.54        20

    accuracy                           0.44        48
   macro avg       0.48      0.49      0.41        48
weighted avg       0.50      0.44      0.38        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.59      0.53        17
           1       0.74      0.65      0.69        31

    accuracy                           0.62        48
   macro avg       0.61      0.62      0.61        48
weighted avg       0.65      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.48      0.50        21
           1       0.62      0.67      0.64        27

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.57        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.43      0.46        21
           1       0.60      0.67      0.63        27

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.35      0.30      0.32        20
           1       0.55      0.61      0.58        28

    accuracy                           0.48        48
   macro avg       0.45      0.45      0.45        48
weighted avg       0.47      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.52      0.70      0.60        20
           1       0.71      0.54      0.61        28

    accuracy                           0.60        48
   macro avg       0.62      0.62      0.60        48
weighted avg       0.63      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.69      0.33      0.45        27
           1       0.49      0.81      0.61        21

    accuracy                           0.54        48
   macro avg       0.59      0.57      0.53        48
weighted avg       0.60      0.54      0.52        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.43      0.46        21
           1       0.60      0.67      0.63        27

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.72      0.65        18
           1       0.81      0.70      0.75        30

    accuracy                           0.71        48
   macro avg       0.70      0.71      0.70        48
weighted avg       0.73      0.71      0.71        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.47      0.32      0.38        22
           1       0.55      0.69      0.61        26

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.49        48
weighted avg       0.51      0.52      0.50        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.44      0.50        27
           1       0.44      0.57      0.50        21

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.52      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.40      0.56      0.47        18
           1       0.65      0.50      0.57        30

    accuracy                           0.52        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.56      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.53      0.45      0.49        20
           1       0.65      0.71      0.68        28

    accuracy                           0.60        48
   macro avg       0.59      0.58      0.58        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.55      0.46      0.50        26
           1       0.46      0.55      0.50        22

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.43      0.16      0.23        19
           1       0.61      0.86      0.71        29

    accuracy                           0.58        48
   macro avg       0.52      0.51      0.47        48
weighted avg       0.54      0.58      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.26      0.31      0.29        16
           1       0.62      0.56      0.59        32

    accuracy                           0.48        48
   macro avg       0.44      0.44      0.44        48
weighted avg       0.50      0.48      0.49        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.73      0.52      0.61        21
           1       0.70      0.85      0.77        27

    accuracy                           0.71        48
   macro avg       0.72      0.69      0.69        48
weighted avg       0.71      0.71      0.70        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.48      0.48        21
           1       0.59      0.59      0.59        27

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.72      0.50      0.59        26
           1       0.57      0.77      0.65        22

    accuracy                           0.62        48
   macro avg       0.64      0.64      0.62        48
weighted avg       0.65      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.41      0.37        17
           1       0.63      0.55      0.59        31

    accuracy                           0.50        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.52      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.40      0.42        20
           1       0.60      0.64      0.62        28

    accuracy                           0.54        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.42      0.45        24
           1       0.50      0.58      0.54        24

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.55      0.55        22
           1       0.62      0.62      0.62        26

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.53      0.35      0.42        23
           1       0.55      0.72      0.62        25

    accuracy                           0.54        48
   macro avg       0.54      0.53      0.52        48
weighted avg       0.54      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.37      0.38        19
           1       0.60      0.62      0.61        29

    accuracy                           0.52        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.48      0.56        21
           1       0.67      0.81      0.73        27

    accuracy                           0.67        48
   macro avg       0.67      0.65      0.64        48
weighted avg       0.67      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.12      0.19        25
           1       0.48      0.87      0.62        23

    accuracy                           0.48        48
   macro avg       0.49      0.49      0.40        48
weighted avg       0.49      0.48      0.40        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.35      0.37        20
           1       0.57      0.61      0.59        28

    accuracy                           0.50        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.49      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.36      0.21      0.27        19
           1       0.59      0.76      0.67        29

    accuracy                           0.54        48
   macro avg       0.48      0.48      0.47        48
weighted avg       0.50      0.54      0.51        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.46      0.46      0.46        24
           1       0.46      0.46      0.46        24

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.19      0.20      0.19        15
           1       0.62      0.61      0.62        33

    accuracy                           0.48        48
   macro avg       0.41      0.40      0.40        48
weighted avg       0.49      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.67      0.38      0.48        21
           1       0.64      0.85      0.73        27

    accuracy                           0.65        48
   macro avg       0.65      0.62      0.61        48
weighted avg       0.65      0.65      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.56      0.60        27
           1       0.52      0.62      0.57        21

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.56      0.42        16
           1       0.67      0.44      0.53        32

    accuracy                           0.48        48
   macro avg       0.50      0.50      0.47        48
weighted avg       0.56      0.48      0.49        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.50      0.55      0.52        22
           1       0.58      0.54      0.56        26

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.29      0.34        21
           1       0.56      0.70      0.62        27

    accuracy                           0.52        48
   macro avg       0.49      0.49      0.48        48
weighted avg       0.50      0.52      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.58      0.44      0.50        25
           1       0.52      0.65      0.58        23

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.48      0.50      0.49        20
           1       0.63      0.61      0.62        28

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.55      0.51        20
           1       0.64      0.57      0.60        28

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.62      0.28      0.38        29
           1       0.40      0.74      0.52        19

    accuracy                           0.46        48
   macro avg       0.51      0.51      0.45        48
weighted avg       0.53      0.46      0.44        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.39      0.35      0.37        20
           1       0.57      0.61      0.59        28

    accuracy                           0.50        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.49      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.29      0.37        24
           1       0.50      0.71      0.59        24

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.48        48
weighted avg       0.50      0.50      0.48        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.41      0.58      0.48        19
           1       0.62      0.45      0.52        29

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.54      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.55      0.56        22
           1       0.63      0.65      0.64        26

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.56      0.22      0.31        23
           1       0.54      0.84      0.66        25

    accuracy                           0.54        48
   macro avg       0.55      0.53      0.48        48
weighted avg       0.55      0.54      0.49        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.54      0.62      0.58        24
           1       0.55      0.46      0.50        24

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.001)
              precision    recall  f1-score   support

           0       0.44      0.29      0.35        24
           1       0.47      0.62      0.54        24

    accuracy                           0.46        48
   macro avg       0.45      0.46      0.44        48
weighted avg       0.45      0.46      0.44        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.65      0.41      0.50        27
           1       0.48      0.71      0.58        21

    accuracy                           0.54        48
   macro avg       0.57      0.56      0.54        48
weighted avg       0.58      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.46      0.52      0.49        23
           1       0.50      0.44      0.47        25

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.33      0.10      0.15        21
           1       0.55      0.85      0.67        27

    accuracy                           0.52        48
   macro avg       0.44      0.47      0.41        48
weighted avg       0.45      0.52      0.44        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.52      0.57      0.55        21
           1       0.64      0.59      0.62        27

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.71      0.20      0.31        25
           1       0.51      0.91      0.66        23

    accuracy                           0.54        48
   macro avg       0.61      0.56      0.48        48
weighted avg       0.62      0.54      0.48        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.32      0.40        22
           1       0.57      0.77      0.66        26

    accuracy                           0.56        48
   macro avg       0.55      0.54      0.53        48
weighted avg       0.56      0.56      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.48      0.51        25
           1       0.50      0.57      0.53        23

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.44      0.22      0.30        18
           1       0.64      0.83      0.72        30

    accuracy                           0.60        48
   macro avg       0.54      0.53      0.51        48
weighted avg       0.57      0.60      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.35      0.35      0.35        17
           1       0.65      0.65      0.65        31

    accuracy                           0.54        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.58      0.28      0.38        25
           1       0.50      0.78      0.61        23

    accuracy                           0.52        48
   macro avg       0.54      0.53      0.49        48
weighted avg       0.54      0.52      0.49        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.40      0.49        25
           1       0.53      0.74      0.62        23

    accuracy                           0.56        48
   macro avg       0.58      0.57      0.55        48
weighted avg       0.58      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.50      0.49        20
           1       0.63      0.61      0.62        28

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.39      0.45      0.42        20
           1       0.56      0.50      0.53        28

    accuracy                           0.48        48
   macro avg       0.48      0.47      0.47        48
weighted avg       0.49      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.50      0.51        22
           1       0.59      0.62      0.60        26

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.52      0.60      0.56        20
           1       0.68      0.61      0.64        28

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.43      0.49        21
           1       0.62      0.74      0.68        27

    accuracy                           0.60        48
   macro avg       0.59      0.58      0.58        48
weighted avg       0.60      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.30      0.32        20
           1       0.53      0.57      0.55        28

    accuracy                           0.46        48
   macro avg       0.43      0.44      0.43        48
weighted avg       0.45      0.46      0.45        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.59      0.40      0.48        25
           1       0.52      0.70      0.59        23

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.53        48
weighted avg       0.55      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.45      0.53        20
           1       0.68      0.82      0.74        28

    accuracy                           0.67        48
   macro avg       0.66      0.64      0.64        48
weighted avg       0.66      0.67      0.65        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.35      0.35      0.35        20
           1       0.54      0.54      0.54        28

    accuracy                           0.46        48
   macro avg       0.44      0.44      0.44        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.68      0.54      0.60        28
           1       0.50      0.65      0.57        20

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.61      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.35      0.42        20
           1       0.63      0.79      0.70        28

    accuracy                           0.60        48
   macro avg       0.58      0.57      0.56        48
weighted avg       0.59      0.60      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.56      0.47        18
           1       0.65      0.50      0.57        30

    accuracy                           0.52        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.56      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.67      0.56      0.61        25
           1       0.59      0.70      0.64        23

    accuracy                           0.62        48
   macro avg       0.63      0.63      0.62        48
weighted avg       0.63      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.63      0.52      0.57        23
           1       0.62      0.72      0.67        25

    accuracy                           0.62        48
   macro avg       0.63      0.62      0.62        48
weighted avg       0.63      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.58      0.48      0.52        23
           1       0.59      0.68      0.63        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.39      0.44        23
           1       0.53      0.64      0.58        25

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.51        48
weighted avg       0.52      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.1)
              precision    recall  f1-score   support

           0       0.32      0.47      0.38        15
           1       0.69      0.55      0.61        33

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.49        48
weighted avg       0.58      0.52      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.39      0.69      0.50        16
           1       0.75      0.47      0.58        32

    accuracy                           0.54        48
   macro avg       0.57      0.58      0.54        48
weighted avg       0.63      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.33      0.47      0.39        15
           1       0.70      0.58      0.63        33

    accuracy                           0.54        48
   macro avg       0.52      0.52      0.51        48
weighted avg       0.59      0.54      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.65      0.50      0.57        26
           1       0.54      0.68      0.60        22

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.60      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.62      0.64        24
           1       0.64      0.67      0.65        24

    accuracy                           0.65        48
   macro avg       0.65      0.65      0.65        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.46      0.61      0.52        18
           1       0.71      0.57      0.63        30

    accuracy                           0.58        48
   macro avg       0.58      0.59      0.58        48
weighted avg       0.61      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.60      0.53        20
           1       0.65      0.54      0.59        28

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.58      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.47      0.50      0.49        18
           1       0.69      0.67      0.68        30

    accuracy                           0.60        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.48      0.42      0.44        24
           1       0.48      0.54      0.51        24

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.58      0.54        19
           1       0.69      0.62      0.65        29

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.62      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.46      0.58      0.51        19
           1       0.67      0.55      0.60        29

    accuracy                           0.56        48
   macro avg       0.56      0.57      0.56        48
weighted avg       0.58      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.48      0.52      0.50        23
           1       0.52      0.48      0.50        25

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.36      0.22      0.28        18
           1       0.62      0.77      0.69        30

    accuracy                           0.56        48
   macro avg       0.49      0.49      0.48        48
weighted avg       0.52      0.56      0.53        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.65      0.50      0.56        22
           1       0.65      0.77      0.70        26

    accuracy                           0.65        48
   macro avg       0.65      0.63      0.63        48
weighted avg       0.65      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.42      0.46        19
           1       0.66      0.72      0.69        29

    accuracy                           0.60        48
   macro avg       0.58      0.57      0.57        48
weighted avg       0.59      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.61      0.74      0.67        19
           1       0.80      0.69      0.74        29

    accuracy                           0.71        48
   macro avg       0.70      0.71      0.70        48
weighted avg       0.72      0.71      0.71        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.50      0.51        24
           1       0.52      0.54      0.53        24

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.67      0.31      0.42        26
           1       0.50      0.82      0.62        22

    accuracy                           0.54        48
   macro avg       0.58      0.56      0.52        48
weighted avg       0.59      0.54      0.51        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.45      0.47        20
           1       0.63      0.68      0.66        28

    accuracy                           0.58        48
   macro avg       0.57      0.56      0.56        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.60      0.48      0.53        25
           1       0.54      0.65      0.59        23

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.67      0.43      0.53        23
           1       0.61      0.80      0.69        25

    accuracy                           0.62        48
   macro avg       0.64      0.62      0.61        48
weighted avg       0.64      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.35      0.44        20
           1       0.64      0.82      0.72        28

    accuracy                           0.62        48
   macro avg       0.61      0.59      0.58        48
weighted avg       0.62      0.62      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.80      0.17      0.28        24
           1       0.53      0.96      0.69        24

    accuracy                           0.56        48
   macro avg       0.67      0.56      0.48        48
weighted avg       0.67      0.56      0.48        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.43      0.53      0.47        17
           1       0.70      0.61      0.66        31

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.61      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.65      0.57        20
           1       0.68      0.54      0.60        28

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.61      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.43      0.46        21
           1       0.60      0.67      0.63        27

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.50      0.57      0.53        23
           1       0.55      0.48      0.51        25

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.32      0.35        22
           1       0.50      0.58      0.54        26

    accuracy                           0.46        48
   macro avg       0.44      0.45      0.44        48
weighted avg       0.45      0.46      0.45        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.43      0.47        21
           1       0.61      0.70      0.66        27

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.62      0.61        24
           1       0.61      0.58      0.60        24

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.33      0.44        21
           1       0.62      0.85      0.72        27

    accuracy                           0.62        48
   macro avg       0.63      0.59      0.58        48
weighted avg       0.63      0.62      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.53      0.46        17
           1       0.69      0.58      0.63        31

    accuracy                           0.56        48
   macro avg       0.55      0.56      0.55        48
weighted avg       0.59      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.67      0.70      0.68        23
           1       0.71      0.68      0.69        25

    accuracy                           0.69        48
   macro avg       0.69      0.69      0.69        48
weighted avg       0.69      0.69      0.69        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.83      0.20      0.32        25
           1       0.52      0.96      0.68        23

    accuracy                           0.56        48
   macro avg       0.68      0.58      0.50        48
weighted avg       0.69      0.56      0.49        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.36      0.26      0.30        19
           1       0.59      0.69      0.63        29

    accuracy                           0.52        48
   macro avg       0.47      0.48      0.47        48
weighted avg       0.50      0.52      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.44      0.55      0.49        20
           1       0.61      0.50      0.55        28

    accuracy                           0.52        48
   macro avg       0.52      0.53      0.52        48
weighted avg       0.54      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.35      0.27      0.31        22
           1       0.48      0.58      0.53        26

    accuracy                           0.44        48
   macro avg       0.42      0.42      0.42        48
weighted avg       0.42      0.44      0.43        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.36      0.38        22
           1       0.50      0.54      0.52        26

    accuracy                           0.46        48
   macro avg       0.45      0.45      0.45        48
weighted avg       0.45      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.25      0.31        24
           1       0.45      0.62      0.53        24

    accuracy                           0.44        48
   macro avg       0.43      0.44      0.42        48
weighted avg       0.43      0.44      0.42        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.67      0.57      0.62        21
           1       0.70      0.78      0.74        27

    accuracy                           0.69        48
   macro avg       0.68      0.67      0.68        48
weighted avg       0.69      0.69      0.68        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.58      0.50        19
           1       0.65      0.52      0.58        29

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.57      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.32      0.38        22
           1       0.55      0.69      0.61        26

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.49        48
weighted avg       0.51      0.52      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.44      0.47        18
           1       0.69      0.73      0.71        30

    accuracy                           0.62        48
   macro avg       0.59      0.59      0.59        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.59      0.50      0.54        20
           1       0.68      0.75      0.71        28

    accuracy                           0.65        48
   macro avg       0.63      0.62      0.63        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.50      0.44        18
           1       0.64      0.53      0.58        30

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.51        48
weighted avg       0.55      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.67      0.07      0.13        27
           1       0.44      0.95      0.61        21

    accuracy                           0.46        48
   macro avg       0.56      0.51      0.37        48
weighted avg       0.57      0.46      0.34        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.45      0.44        20
           1       0.59      0.57      0.58        28

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.18      0.20      0.19        15
           1       0.61      0.58      0.59        33

    accuracy                           0.46        48
   macro avg       0.39      0.39      0.39        48
weighted avg       0.48      0.46      0.47        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.41      0.47      0.44        19
           1       0.62      0.55      0.58        29

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.53      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.40      0.43        25
           1       0.44      0.52      0.48        23

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.59      0.50      0.54        26
           1       0.50      0.59      0.54        22

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.36      0.15      0.22        26
           1       0.41      0.68      0.51        22

    accuracy                           0.40        48
   macro avg       0.38      0.42      0.36        48
weighted avg       0.38      0.40      0.35        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.53      0.35      0.42        23
           1       0.55      0.72      0.62        25

    accuracy                           0.54        48
   macro avg       0.54      0.53      0.52        48
weighted avg       0.54      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.41      0.60      0.49        20
           1       0.58      0.39      0.47        28

    accuracy                           0.48        48
   macro avg       0.50      0.50      0.48        48
weighted avg       0.51      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.57      0.55        21
           1       0.64      0.59      0.62        27

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.53      0.43      0.48        23
           1       0.55      0.64      0.59        25

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.45      0.41      0.43        22
           1       0.54      0.58      0.56        26

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.43      0.49        23
           1       0.57      0.68      0.62        25

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.47      0.51        19
           1       0.69      0.76      0.72        29

    accuracy                           0.65        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.37      0.35      0.36        20
           1       0.55      0.57      0.56        28

    accuracy                           0.48        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.47      0.50      0.49        18
           1       0.69      0.67      0.68        30

    accuracy                           0.60        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.62      0.48      0.54        21
           1       0.66      0.78      0.71        27

    accuracy                           0.65        48
   macro avg       0.64      0.63      0.63        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.35      0.39        23
           1       0.50      0.60      0.55        25

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.47      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.48      0.48      0.48        21
           1       0.59      0.59      0.59        27

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.50      0.56        28
           1       0.46      0.60      0.52        20

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.56      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.50      0.36      0.42        22
           1       0.56      0.69      0.62        26

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.53      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.45      0.45      0.45        22
           1       0.54      0.54      0.54        26

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.53      0.52        15
           1       0.78      0.76      0.77        33

    accuracy                           0.69        48
   macro avg       0.64      0.65      0.64        48
weighted avg       0.69      0.69      0.69        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.52      0.50      0.51        24
           1       0.52      0.54      0.53        24

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        23
           1       0.51      0.96      0.67        25

    accuracy                           0.50        48
   macro avg       0.26      0.48      0.33        48
weighted avg       0.27      0.50      0.35        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.59      0.40      0.48        25
           1       0.52      0.70      0.59        23

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.53        48
weighted avg       0.55      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.29      0.39        21
           1       0.61      0.85      0.71        27

    accuracy                           0.60        48
   macro avg       0.60      0.57      0.55        48
weighted avg       0.60      0.60      0.57        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.36      0.40        22
           1       0.53      0.62      0.57        26

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.49      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.26      0.29      0.28        17
           1       0.59      0.55      0.57        31

    accuracy                           0.46        48
   macro avg       0.42      0.42      0.42        48
weighted avg       0.47      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.62      0.52      0.57        25
           1       0.56      0.65      0.60        23

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.60      0.25      0.35        24
           1       0.53      0.83      0.65        24

    accuracy                           0.54        48
   macro avg       0.56      0.54      0.50        48
weighted avg       0.56      0.54      0.50        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.48      0.45        21
           1       0.56      0.52      0.54        27

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.48      0.49        21
           1       0.61      0.63      0.62        27

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.58      0.54        19
           1       0.69      0.62      0.65        29

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.62      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.38      0.41        21
           1       0.57      0.63      0.60        27

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.51      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.27      0.17      0.21        18
           1       0.59      0.73      0.66        30

    accuracy                           0.52        48
   macro avg       0.43      0.45      0.43        48
weighted avg       0.47      0.52      0.49        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.46      0.62      0.53        21
           1       0.60      0.44      0.51        27

    accuracy                           0.52        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.54      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.73      0.32      0.44        25
           1       0.54      0.87      0.67        23

    accuracy                           0.58        48
   macro avg       0.63      0.59      0.56        48
weighted avg       0.64      0.58      0.55        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.58      0.58      0.58        24
           1       0.58      0.58      0.58        24

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.71      0.53        17
           1       0.75      0.48      0.59        31

    accuracy                           0.56        48
   macro avg       0.59      0.59      0.56        48
weighted avg       0.64      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.82      0.61      0.70        23
           1       0.71      0.88      0.79        25

    accuracy                           0.75        48
   macro avg       0.77      0.74      0.74        48
weighted avg       0.76      0.75      0.74        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.79      0.52        14
           1       0.85      0.50      0.63        34

    accuracy                           0.58        48
   macro avg       0.62      0.64      0.58        48
weighted avg       0.72      0.58      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.53      0.33      0.41        24
           1       0.52      0.71      0.60        24

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.50        48
weighted avg       0.52      0.52      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.30      0.38        23
           1       0.53      0.72      0.61        25

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.49        48
weighted avg       0.52      0.52      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.37      0.32      0.34        22
           1       0.48      0.54      0.51        26

    accuracy                           0.44        48
   macro avg       0.43      0.43      0.43        48
weighted avg       0.43      0.44      0.43        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.52      0.67      0.58        21
           1       0.67      0.52      0.58        27

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.60      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.41      0.44        17
           1       0.70      0.74      0.72        31

    accuracy                           0.62        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.55      0.52      0.54        21
           1       0.64      0.67      0.65        27

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.25      0.32        20
           1       0.59      0.79      0.68        28

    accuracy                           0.56        48
   macro avg       0.52      0.52      0.50        48
weighted avg       0.54      0.56      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.52      0.53        23
           1       0.58      0.60      0.59        25

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.1)
              precision    recall  f1-score   support

           0       0.50      0.67      0.57        21
           1       0.65      0.48      0.55        27

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.58      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.64      0.27      0.38        26
           1       0.49      0.82      0.61        22

    accuracy                           0.52        48
   macro avg       0.56      0.54      0.49        48
weighted avg       0.57      0.52      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.42      0.46        26
           1       0.42      0.50      0.46        22

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.35      0.86      0.50        14
           1       0.86      0.35      0.50        34

    accuracy                           0.50        48
   macro avg       0.61      0.61      0.50        48
weighted avg       0.71      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.57      0.52      0.54        25
           1       0.52      0.57      0.54        23

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.1)
              precision    recall  f1-score   support

           0       0.39      0.50      0.44        18
           1       0.64      0.53      0.58        30

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.51        48
weighted avg       0.55      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.61      0.49        18
           1       0.67      0.47      0.55        30

    accuracy                           0.52        48
   macro avg       0.54      0.54      0.52        48
weighted avg       0.57      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.56      0.56        18
           1       0.73      0.73      0.73        30

    accuracy                           0.67        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.67      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.52      0.63      0.57        19
           1       0.72      0.62      0.67        29

    accuracy                           0.62        48
   macro avg       0.62      0.63      0.62        48
weighted avg       0.64      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.43      0.27      0.33        22
           1       0.53      0.69      0.60        26

    accuracy                           0.50        48
   macro avg       0.48      0.48      0.47        48
weighted avg       0.48      0.50      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.46      0.48        26
           1       0.42      0.45      0.43        22

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.52      0.50      0.51        22
           1       0.59      0.62      0.60        26

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.31      0.28      0.29        18
           1       0.59      0.63      0.61        30

    accuracy                           0.50        48
   macro avg       0.45      0.46      0.45        48
weighted avg       0.49      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.56      0.53        18
           1       0.71      0.67      0.69        30

    accuracy                           0.62        48
   macro avg       0.61      0.61      0.61        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.46      0.54        24
           1       0.58      0.75      0.65        24

    accuracy                           0.60        48
   macro avg       0.61      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.1)
              precision    recall  f1-score   support

           0       0.40      0.33      0.36        24
           1       0.43      0.50      0.46        24

    accuracy                           0.42        48
   macro avg       0.41      0.42      0.41        48
weighted avg       0.41      0.42      0.41        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.68      0.61        22
           1       0.67      0.54      0.60        26

    accuracy                           0.60        48
   macro avg       0.61      0.61      0.60        48
weighted avg       0.62      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.52      0.64      0.57        22
           1       0.62      0.50      0.55        26

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.25      0.09      0.13        23
           1       0.47      0.76      0.58        25

    accuracy                           0.44        48
   macro avg       0.36      0.42      0.36        48
weighted avg       0.37      0.44      0.37        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.53      0.41        17
           1       0.62      0.42      0.50        31

    accuracy                           0.46        48
   macro avg       0.48      0.47      0.45        48
weighted avg       0.52      0.46      0.47        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.60      0.48      0.53        25
           1       0.54      0.65      0.59        23

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.39      0.37      0.38        19
           1       0.60      0.62      0.61        29

    accuracy                           0.52        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.35      0.36      0.36        22
           1       0.44      0.42      0.43        26

    accuracy                           0.40        48
   macro avg       0.39      0.39      0.39        48
weighted avg       0.40      0.40      0.40        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.52      0.51        21
           1       0.62      0.59      0.60        27

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.64      0.28      0.39        25
           1       0.51      0.83      0.63        23

    accuracy                           0.54        48
   macro avg       0.57      0.55      0.51        48
weighted avg       0.58      0.54      0.51        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.61      0.55        18
           1       0.73      0.63      0.68        30

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.61        48
weighted avg       0.64      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.30      0.39        23
           1       0.54      0.76      0.63        25

    accuracy                           0.54        48
   macro avg       0.54      0.53      0.51        48
weighted avg       0.54      0.54      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.44      0.17      0.24        24
           1       0.49      0.79      0.60        24

    accuracy                           0.48        48
   macro avg       0.47      0.48      0.42        48
weighted avg       0.47      0.48      0.42        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.64      0.41      0.50        22
           1       0.62      0.81      0.70        26

    accuracy                           0.62        48
   macro avg       0.63      0.61      0.60        48
weighted avg       0.63      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.44      0.42      0.43        19
           1       0.63      0.66      0.64        29

    accuracy                           0.56        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.36      0.44        22
           1       0.59      0.77      0.67        26

    accuracy                           0.58        48
   macro avg       0.58      0.57      0.56        48
weighted avg       0.58      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=0.1, gamma=1)
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        25
           1       0.48      1.00      0.65        23

    accuracy                           0.48        48
   macro avg       0.24      0.50      0.32        48
weighted avg       0.23      0.48      0.31        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.38      0.15      0.21        20
           1       0.57      0.82      0.68        28

    accuracy                           0.54        48
   macro avg       0.47      0.49      0.45        48
weighted avg       0.49      0.54      0.48        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.37      0.41        19
           1       0.64      0.72      0.68        29

    accuracy                           0.58        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.57      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.53      0.46        17
           1       0.69      0.58      0.63        31

    accuracy                           0.56        48
   macro avg       0.55      0.56      0.55        48
weighted avg       0.59      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.45      0.41      0.43        22
           1       0.54      0.58      0.56        26

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.30      0.38        23
           1       0.53      0.72      0.61        25

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.49        48
weighted avg       0.52      0.52      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.44      0.38      0.41        21
           1       0.57      0.63      0.60        27

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.51      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.60      0.53        20
           1       0.65      0.54      0.59        28

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.58      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.61      0.58      0.60        24
           1       0.60      0.62      0.61        24

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.40      0.49        25
           1       0.53      0.74      0.62        23

    accuracy                           0.56        48
   macro avg       0.58      0.57      0.55        48
weighted avg       0.58      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.48      0.61      0.54        18
           1       0.72      0.60      0.65        30

    accuracy                           0.60        48
   macro avg       0.60      0.61      0.60        48
weighted avg       0.63      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.43      0.59      0.50        17
           1       0.72      0.58      0.64        31

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.57        48
weighted avg       0.62      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.10      0.17        30
           1       0.37      0.89      0.52        18

    accuracy                           0.40        48
   macro avg       0.49      0.49      0.35        48
weighted avg       0.51      0.40      0.30        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=0.1, gamma=1)
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        24
           1       0.50      1.00      0.67        24

    accuracy                           0.50        48
   macro avg       0.25      0.50      0.33        48
weighted avg       0.25      0.50      0.33        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.43      0.46        21
           1       0.60      0.67      0.63        27

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.56      0.45      0.50        20
           1       0.66      0.75      0.70        28

    accuracy                           0.62        48
   macro avg       0.61      0.60      0.60        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.59      0.62      0.60        21
           1       0.69      0.67      0.68        27

    accuracy                           0.65        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.61      0.61      0.61        23
           1       0.64      0.64      0.64        25

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.52      0.59        23
           1       0.63      0.76      0.69        25

    accuracy                           0.65        48
   macro avg       0.65      0.64      0.64        48
weighted avg       0.65      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.60      0.63        20
           1       0.73      0.79      0.76        28

    accuracy                           0.71        48
   macro avg       0.70      0.69      0.70        48
weighted avg       0.71      0.71      0.71        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.61      0.48      0.54        23
           1       0.60      0.72      0.65        25

    accuracy                           0.60        48
   macro avg       0.61      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.42      0.50      0.46        22
           1       0.50      0.42      0.46        26

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.44      0.37      0.40        19
           1       0.62      0.69      0.66        29

    accuracy                           0.56        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.55      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.53      0.45      0.49        20
           1       0.65      0.71      0.68        28

    accuracy                           0.60        48
   macro avg       0.59      0.58      0.58        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.58      0.58      0.58        24
           1       0.58      0.58      0.58        24

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.60      0.31      0.41        29
           1       0.39      0.68      0.50        19

    accuracy                           0.46        48
   macro avg       0.50      0.50      0.45        48
weighted avg       0.52      0.46      0.45        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.67      0.48      0.56        25
           1       0.57      0.74      0.64        23

    accuracy                           0.60        48
   macro avg       0.62      0.61      0.60        48
weighted avg       0.62      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.75      0.33      0.46        27
           1       0.50      0.86      0.63        21

    accuracy                           0.56        48
   macro avg       0.62      0.60      0.55        48
weighted avg       0.64      0.56      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.48      0.52        23
           1       0.59      0.68      0.63        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.50      0.52      0.51        23
           1       0.54      0.52      0.53        25

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.80      0.60        15
           1       0.87      0.61      0.71        33

    accuracy                           0.67        48
   macro avg       0.67      0.70      0.66        48
weighted avg       0.75      0.67      0.68        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.40      0.45        25
           1       0.48      0.61      0.54        23

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.51      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.76      0.62      0.68        21
           1       0.74      0.85      0.79        27

    accuracy                           0.75        48
   macro avg       0.75      0.74      0.74        48
weighted avg       0.75      0.75      0.75        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.46      0.60      0.52        20
           1       0.64      0.50      0.56        28

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.56      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.60      0.26      0.36        23
           1       0.55      0.84      0.67        25

    accuracy                           0.56        48
   macro avg       0.58      0.55      0.52        48
weighted avg       0.58      0.56      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.61      0.55      0.58        20
           1       0.70      0.75      0.72        28

    accuracy                           0.67        48
   macro avg       0.66      0.65      0.65        48
weighted avg       0.66      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.60      0.57        20
           1       0.69      0.64      0.67        28

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.38      0.39      0.38        23
           1       0.42      0.40      0.41        25

    accuracy                           0.40        48
   macro avg       0.40      0.40      0.40        48
weighted avg       0.40      0.40      0.40        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.23      0.32        22
           1       0.56      0.85      0.68        26

    accuracy                           0.56        48
   macro avg       0.56      0.54      0.50        48
weighted avg       0.56      0.56      0.51        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.46      0.60      0.52        20
           1       0.64      0.50      0.56        28

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.56      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.57      0.55        23
           1       0.58      0.56      0.57        25

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.36      0.19      0.25        21
           1       0.54      0.74      0.62        27

    accuracy                           0.50        48
   macro avg       0.45      0.47      0.44        48
weighted avg       0.46      0.50      0.46        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.70      0.58      0.64        24
           1       0.64      0.75      0.69        24

    accuracy                           0.67        48
   macro avg       0.67      0.67      0.66        48
weighted avg       0.67      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.61      0.50        18
           1       0.68      0.50      0.58        30

    accuracy                           0.54        48
   macro avg       0.55      0.56      0.54        48
weighted avg       0.58      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.19      0.17      0.18        18
           1       0.53      0.57      0.55        30

    accuracy                           0.42        48
   macro avg       0.36      0.37      0.36        48
weighted avg       0.40      0.42      0.41        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.55      0.59        20
           1       0.71      0.79      0.75        28

    accuracy                           0.69        48
   macro avg       0.68      0.67      0.67        48
weighted avg       0.68      0.69      0.68        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.15      0.23        27
           1       0.42      0.81      0.56        21

    accuracy                           0.44        48
   macro avg       0.46      0.48      0.39        48
weighted avg       0.47      0.44      0.37        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.53      0.56      0.54        18
           1       0.72      0.70      0.71        30

    accuracy                           0.65        48
   macro avg       0.63      0.63      0.63        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.53      0.43      0.47        21
           1       0.61      0.70      0.66        27

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.43      0.56      0.49        18
           1       0.68      0.57      0.62        30

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.55        48
weighted avg       0.59      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.29      0.39        24
           1       0.53      0.79      0.63        24

    accuracy                           0.54        48
   macro avg       0.56      0.54      0.51        48
weighted avg       0.56      0.54      0.51        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.63      0.48      0.55        25
           1       0.55      0.70      0.62        23

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.35      0.53      0.42        17
           1       0.64      0.45      0.53        31

    accuracy                           0.48        48
   macro avg       0.49      0.49      0.47        48
weighted avg       0.53      0.48      0.49        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.22      0.30        23
           1       0.53      0.80      0.63        25

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.47        48
weighted avg       0.51      0.52      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.43      0.44        23
           1       0.50      0.52      0.51        25

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.32      0.34        19
           1       0.59      0.66      0.62        29

    accuracy                           0.52        48
   macro avg       0.48      0.49      0.48        48
weighted avg       0.51      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.62      0.59        21
           1       0.68      0.63      0.65        27

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.27      0.35        22
           1       0.56      0.77      0.65        26

    accuracy                           0.54        48
   macro avg       0.53      0.52      0.50        48
weighted avg       0.53      0.54      0.51        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.55      0.59        29
           1       0.43      0.53      0.48        19

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.56      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.47      0.43        17
           1       0.68      0.61      0.64        31

    accuracy                           0.56        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.58      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.54      0.75      0.63        20
           1       0.75      0.54      0.63        28

    accuracy                           0.62        48
   macro avg       0.64      0.64      0.63        48
weighted avg       0.66      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.17      0.25        24
           1       0.50      0.83      0.62        24

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.44        48
weighted avg       0.50      0.50      0.44        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.56      0.54        18
           1       0.72      0.70      0.71        30

    accuracy                           0.65        48
   macro avg       0.63      0.63      0.63        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.52      0.52        25
           1       0.48      0.48      0.48        23

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.42      0.38      0.40        21
           1       0.55      0.59      0.57        27

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.49      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.48      0.56      0.51        18
           1       0.70      0.63      0.67        30

    accuracy                           0.60        48
   macro avg       0.59      0.59      0.59        48
weighted avg       0.62      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.35      0.44        23
           1       0.57      0.80      0.67        25

    accuracy                           0.58        48
   macro avg       0.59      0.57      0.56        48
weighted avg       0.59      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.62      0.28      0.38        29
           1       0.40      0.74      0.52        19

    accuracy                           0.46        48
   macro avg       0.51      0.51      0.45        48
weighted avg       0.53      0.46      0.44        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.58      0.52        19
           1       0.68      0.59      0.63        29

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.60      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.47      0.67      0.55        21
           1       0.61      0.41      0.49        27

    accuracy                           0.52        48
   macro avg       0.54      0.54      0.52        48
weighted avg       0.55      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.57      0.62      0.59        21
           1       0.68      0.63      0.65        27

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.60      0.59        20
           1       0.70      0.68      0.69        28

    accuracy                           0.65        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.35      0.46        23
           1       0.58      0.84      0.69        25

    accuracy                           0.60        48
   macro avg       0.62      0.59      0.57        48
weighted avg       0.62      0.60      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.55      0.52        22
           1       0.58      0.54      0.56        26

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.53      0.38      0.44        24
           1       0.52      0.67      0.58        24

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.51        48
weighted avg       0.52      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.27      0.39        22
           1       0.59      0.88      0.71        26

    accuracy                           0.60        48
   macro avg       0.63      0.58      0.55        48
weighted avg       0.62      0.60      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.35      0.36        17
           1       0.66      0.68      0.67        31

    accuracy                           0.56        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.57      0.35      0.43        23
           1       0.56      0.76      0.64        25

    accuracy                           0.56        48
   macro avg       0.57      0.55      0.54        48
weighted avg       0.56      0.56      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.64      0.61      0.62        23
           1       0.65      0.68      0.67        25

    accuracy                           0.65        48
   macro avg       0.65      0.64      0.64        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.50      0.52      0.51        21
           1       0.62      0.59      0.60        27

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.50      0.23      0.32        30
           1       0.32      0.61      0.42        18

    accuracy                           0.38        48
   macro avg       0.41      0.42      0.37        48
weighted avg       0.43      0.38      0.36        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.55      0.60      0.57        20
           1       0.69      0.64      0.67        28

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.45      0.49        20
           1       0.65      0.71      0.68        28

    accuracy                           0.60        48
   macro avg       0.59      0.58      0.58        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.50      0.36      0.42        22
           1       0.56      0.69      0.62        26

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.53      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.58      0.67      0.62        21
           1       0.71      0.63      0.67        27

    accuracy                           0.65        48
   macro avg       0.65      0.65      0.64        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       1.00      0.05      0.09        21
           1       0.57      1.00      0.73        27

    accuracy                           0.58        48
   macro avg       0.79      0.52      0.41        48
weighted avg       0.76      0.58      0.45        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.48      0.50      0.49        22
           1       0.56      0.54      0.55        26

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.25      0.36        28
           1       0.43      0.80      0.56        20

    accuracy                           0.48        48
   macro avg       0.53      0.53      0.46        48
weighted avg       0.55      0.48      0.44        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.48      0.51        25
           1       0.50      0.57      0.53        23

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.65      0.60        23
           1       0.62      0.52      0.57        25

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.59      0.73      0.66        26
           1       0.56      0.41      0.47        22

    accuracy                           0.58        48
   macro avg       0.58      0.57      0.56        48
weighted avg       0.58      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.50      0.49        22
           1       0.56      0.54      0.55        26

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.45      0.46        20
           1       0.62      0.64      0.63        28

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.61      0.48      0.54        23
           1       0.60      0.72      0.65        25

    accuracy                           0.60        48
   macro avg       0.61      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.32      0.32      0.32        19
           1       0.55      0.55      0.55        29

    accuracy                           0.46        48
   macro avg       0.43      0.43      0.43        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.32      0.41        22
           1       0.58      0.81      0.68        26

    accuracy                           0.58        48
   macro avg       0.58      0.56      0.54        48
weighted avg       0.58      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.70      0.52      0.60        27
           1       0.54      0.71      0.61        21

    accuracy                           0.60        48
   macro avg       0.62      0.62      0.60        48
weighted avg       0.63      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.41      0.43      0.42        21
           1       0.54      0.52      0.53        27

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.42      0.47        26
           1       0.44      0.55      0.49        22

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.49      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.57      0.56        21
           1       0.65      0.63      0.64        27

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.67      0.52      0.59        23
           1       0.63      0.76      0.69        25

    accuracy                           0.65        48
   macro avg       0.65      0.64      0.64        48
weighted avg       0.65      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.65      0.59        20
           1       0.71      0.61      0.65        28

    accuracy                           0.62        48
   macro avg       0.62      0.63      0.62        48
weighted avg       0.64      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.31      0.38        26
           1       0.44      0.64      0.52        22

    accuracy                           0.46        48
   macro avg       0.47      0.47      0.45        48
weighted avg       0.47      0.46      0.44        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       1.00      0.29      0.44        28
           1       0.50      1.00      0.67        20

    accuracy                           0.58        48
   macro avg       0.75      0.64      0.56        48
weighted avg       0.79      0.58      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.38      0.53      0.44        19
           1       0.59      0.45      0.51        29

    accuracy                           0.48        48
   macro avg       0.49      0.49      0.48        48
weighted avg       0.51      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.71      0.52      0.60        23
           1       0.65      0.80      0.71        25

    accuracy                           0.67        48
   macro avg       0.68      0.66      0.66        48
weighted avg       0.67      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.58      0.58      0.58        19
           1       0.72      0.72      0.72        29

    accuracy                           0.67        48
   macro avg       0.65      0.65      0.65        48
weighted avg       0.67      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.48      0.51        23
           1       0.57      0.64      0.60        25

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.65      0.57        20
           1       0.68      0.54      0.60        28

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.61      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.59      0.45      0.51        22
           1       0.61      0.73      0.67        26

    accuracy                           0.60        48
   macro avg       0.60      0.59      0.59        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.47      0.49        19
           1       0.67      0.69      0.68        29

    accuracy                           0.60        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.001)
              precision    recall  f1-score   support

           0       0.38      0.24      0.29        21
           1       0.54      0.70      0.61        27

    accuracy                           0.50        48
   macro avg       0.46      0.47      0.45        48
weighted avg       0.47      0.50      0.47        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.42      0.44        19
           1       0.65      0.69      0.67        29

    accuracy                           0.58        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.47      0.43        17
           1       0.68      0.61      0.64        31

    accuracy                           0.56        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.58      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.54      0.61      0.57        23
           1       0.59      0.52      0.55        25

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.47      0.47        19
           1       0.66      0.66      0.66        29

    accuracy                           0.58        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.29      0.36        21
           1       0.58      0.78      0.67        27

    accuracy                           0.56        48
   macro avg       0.54      0.53      0.52        48
weighted avg       0.55      0.56      0.53        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.35      0.39      0.37        18
           1       0.61      0.57      0.59        30

    accuracy                           0.50        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.41      0.75      0.53        16
           1       0.79      0.47      0.59        32

    accuracy                           0.56        48
   macro avg       0.60      0.61      0.56        48
weighted avg       0.66      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.50      0.44        18
           1       0.64      0.53      0.58        30

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.51        48
weighted avg       0.55      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.37      0.37      0.37        19
           1       0.59      0.59      0.59        29

    accuracy                           0.50        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.001)
              precision    recall  f1-score   support

           0       0.57      0.19      0.29        21
           1       0.59      0.89      0.71        27

    accuracy                           0.58        48
   macro avg       0.58      0.54      0.50        48
weighted avg       0.58      0.58      0.52        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.78      0.48      0.60        29
           1       0.50      0.79      0.61        19

    accuracy                           0.60        48
   macro avg       0.64      0.64      0.60        48
weighted avg       0.67      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.48      0.55        23
           1       0.61      0.76      0.68        25

    accuracy                           0.62        48
   macro avg       0.63      0.62      0.61        48
weighted avg       0.63      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.64      0.27      0.38        26
           1       0.49      0.82      0.61        22

    accuracy                           0.52        48
   macro avg       0.56      0.54      0.49        48
weighted avg       0.57      0.52      0.48        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.44      0.43        18
           1       0.66      0.63      0.64        30

    accuracy                           0.56        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.48      0.48        23
           1       0.52      0.52      0.52        25

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.79      0.44      0.56        25
           1       0.59      0.87      0.70        23

    accuracy                           0.65        48
   macro avg       0.69      0.65      0.63        48
weighted avg       0.69      0.65      0.63        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.59      0.58        22
           1       0.64      0.62      0.63        26

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.63      0.60      0.62        20
           1       0.72      0.75      0.74        28

    accuracy                           0.69        48
   macro avg       0.68      0.68      0.68        48
weighted avg       0.69      0.69      0.69        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.52      0.76      0.62        17
           1       0.83      0.61      0.70        31

    accuracy                           0.67        48
   macro avg       0.67      0.69      0.66        48
weighted avg       0.72      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.62      0.54      0.58        24
           1       0.59      0.67      0.63        24

    accuracy                           0.60        48
   macro avg       0.61      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.41      0.44        22
           1       0.55      0.62      0.58        26

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.57      0.62        21
           1       0.70      0.78      0.74        27

    accuracy                           0.69        48
   macro avg       0.68      0.67      0.68        48
weighted avg       0.69      0.69      0.68        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.33      0.40        21
           1       0.59      0.74      0.66        27

    accuracy                           0.56        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.55      0.56      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.29      0.40        28
           1       0.44      0.80      0.57        20

    accuracy                           0.50        48
   macro avg       0.56      0.54      0.49        48
weighted avg       0.57      0.50      0.47        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.73      0.30      0.42        27
           1       0.49      0.86      0.62        21

    accuracy                           0.54        48
   macro avg       0.61      0.58      0.52        48
weighted avg       0.62      0.54      0.51        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.71      0.20      0.31        25
           1       0.51      0.91      0.66        23

    accuracy                           0.54        48
   macro avg       0.61      0.56      0.48        48
weighted avg       0.62      0.54      0.48        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.31      0.33      0.32        15
           1       0.69      0.67      0.68        33

    accuracy                           0.56        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.57      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.48      0.43        21
           1       0.52      0.44      0.48        27

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.47      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.83      0.43      0.57        23
           1       0.64      0.92      0.75        25

    accuracy                           0.69        48
   macro avg       0.74      0.68      0.66        48
weighted avg       0.73      0.69      0.67        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.40      0.62      0.49        16
           1       0.74      0.53      0.62        32

    accuracy                           0.56        48
   macro avg       0.57      0.58      0.55        48
weighted avg       0.63      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.38      0.39        21
           1       0.54      0.56      0.55        27

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.72      0.54      0.62        24
           1       0.63      0.79      0.70        24

    accuracy                           0.67        48
   macro avg       0.68      0.67      0.66        48
weighted avg       0.68      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.67      0.26      0.38        23
           1       0.56      0.88      0.69        25

    accuracy                           0.58        48
   macro avg       0.62      0.57      0.53        48
weighted avg       0.61      0.58      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.43      0.46        21
           1       0.60      0.67      0.63        27

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.68      0.60        22
           1       0.65      0.50      0.57        26

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.60      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.35      0.37      0.36        19
           1       0.57      0.55      0.56        29

    accuracy                           0.48        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.48      0.48        21
           1       0.59      0.59      0.59        27

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        24
           1       0.49      0.96      0.65        24

    accuracy                           0.48        48
   macro avg       0.24      0.48      0.32        48
weighted avg       0.24      0.48      0.32        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.42      0.43        24
           1       0.46      0.50      0.48        24

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.36      0.20      0.26        25
           1       0.41      0.61      0.49        23

    accuracy                           0.40        48
   macro avg       0.38      0.40      0.37        48
weighted avg       0.38      0.40      0.37        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.36      0.41        22
           1       0.55      0.65      0.60        26

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.51      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.42      0.52        19
           1       0.69      0.86      0.77        29

    accuracy                           0.69        48
   macro avg       0.68      0.64      0.64        48
weighted avg       0.68      0.69      0.67        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.75      0.10      0.18        30
           1       0.39      0.94      0.55        18

    accuracy                           0.42        48
   macro avg       0.57      0.52      0.36        48
weighted avg       0.61      0.42      0.32        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.50      0.40        16
           1       0.67      0.50      0.57        32

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.49        48
weighted avg       0.56      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.56      0.24      0.33        21
           1       0.59      0.85      0.70        27

    accuracy                           0.58        48
   macro avg       0.57      0.54      0.52        48
weighted avg       0.57      0.58      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.42      0.45        26
           1       0.40      0.45      0.43        22

    accuracy                           0.44        48
   macro avg       0.44      0.44      0.44        48
weighted avg       0.44      0.44      0.44        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.61      0.58      0.60        24
           1       0.60      0.62      0.61        24

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.56      0.50      0.53        20
           1       0.67      0.71      0.69        28

    accuracy                           0.62        48
   macro avg       0.61      0.61      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.44      0.35      0.39        23
           1       0.50      0.60      0.55        25

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.47      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.69      0.36      0.47        25
           1       0.54      0.83      0.66        23

    accuracy                           0.58        48
   macro avg       0.62      0.59      0.56        48
weighted avg       0.62      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.55      0.55      0.55        22
           1       0.62      0.62      0.62        26

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.58      0.61        24
           1       0.62      0.67      0.64        24

    accuracy                           0.62        48
   macro avg       0.63      0.62      0.62        48
weighted avg       0.63      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.35      0.53      0.42        15
           1       0.72      0.55      0.62        33

    accuracy                           0.54        48
   macro avg       0.53      0.54      0.52        48
weighted avg       0.60      0.54      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.55      0.50      0.52        22
           1       0.61      0.65      0.63        26

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.45      0.53      0.49        19
           1       0.65      0.59      0.62        29

    accuracy                           0.56        48
   macro avg       0.55      0.56      0.55        48
weighted avg       0.57      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.47      0.45        19
           1       0.63      0.59      0.61        29

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.70      0.60        20
           1       0.71      0.54      0.61        28

    accuracy                           0.60        48
   macro avg       0.62      0.62      0.60        48
weighted avg       0.63      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.56      0.56        25
           1       0.52      0.52      0.52        23

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.88      0.29      0.44        24
           1       0.57      0.96      0.72        24

    accuracy                           0.62        48
   macro avg       0.72      0.62      0.58        48
weighted avg       0.72      0.62      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.69      0.49        13
           1       0.83      0.57      0.68        35

    accuracy                           0.60        48
   macro avg       0.60      0.63      0.58        48
weighted avg       0.71      0.60      0.63        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.52      0.62      0.57        21
           1       0.65      0.56      0.60        27

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.31      0.20      0.24        25
           1       0.38      0.52      0.44        23

    accuracy                           0.35        48
   macro avg       0.34      0.36      0.34        48
weighted avg       0.34      0.35      0.34        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.38      0.43        24
           1       0.50      0.62      0.56        24

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.49        48
weighted avg       0.50      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.59      0.40      0.48        25
           1       0.52      0.70      0.59        23

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.53        48
weighted avg       0.55      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.37      0.61      0.46        18
           1       0.61      0.37      0.46        30

    accuracy                           0.46        48
   macro avg       0.49      0.49      0.46        48
weighted avg       0.52      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.48      0.56      0.51        18
           1       0.70      0.63      0.67        30

    accuracy                           0.60        48
   macro avg       0.59      0.59      0.59        48
weighted avg       0.62      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.39      0.49        23
           1       0.59      0.80      0.68        25

    accuracy                           0.60        48
   macro avg       0.62      0.60      0.58        48
weighted avg       0.61      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.61      0.42      0.50        26
           1       0.50      0.68      0.58        22

    accuracy                           0.54        48
   macro avg       0.56      0.55      0.54        48
weighted avg       0.56      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.37      0.44        19
           1       0.66      0.79      0.72        29

    accuracy                           0.62        48
   macro avg       0.60      0.58      0.58        48
weighted avg       0.61      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.43      0.43      0.43        21
           1       0.56      0.56      0.56        27

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.44      0.58      0.50        19
           1       0.65      0.52      0.58        29

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.57      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.42      0.43        19
           1       0.63      0.66      0.64        29

    accuracy                           0.56        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.52      0.52      0.52        21
           1       0.63      0.63      0.63        27

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.39      0.36      0.37        25
           1       0.36      0.39      0.37        23

    accuracy                           0.38        48
   macro avg       0.38      0.38      0.37        48
weighted avg       0.38      0.38      0.37        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.18      0.27        22
           1       0.55      0.85      0.67        26

    accuracy                           0.54        48
   macro avg       0.53      0.51      0.47        48
weighted avg       0.53      0.54      0.48        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.57      0.65      0.60        20
           1       0.72      0.64      0.68        28

    accuracy                           0.65        48
   macro avg       0.64      0.65      0.64        48
weighted avg       0.66      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        24
           1       0.48      0.92      0.63        24

    accuracy                           0.46        48
   macro avg       0.24      0.46      0.31        48
weighted avg       0.24      0.46      0.31        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.62      0.42      0.50        19
           1       0.69      0.83      0.75        29

    accuracy                           0.67        48
   macro avg       0.65      0.62      0.62        48
weighted avg       0.66      0.67      0.65        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.70      0.56        20
           1       0.67      0.43      0.52        28

    accuracy                           0.54        48
   macro avg       0.57      0.56      0.54        48
weighted avg       0.58      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.40      0.27      0.32        22
           1       0.52      0.65      0.58        26

    accuracy                           0.48        48
   macro avg       0.46      0.46      0.45        48
weighted avg       0.46      0.48      0.46        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.65      0.52      0.58        21
           1       0.68      0.78      0.72        27

    accuracy                           0.67        48
   macro avg       0.66      0.65      0.65        48
weighted avg       0.66      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.48      0.65      0.56        23
           1       0.53      0.36      0.43        25

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.49        48
weighted avg       0.51      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.80      0.19      0.31        21
           1       0.60      0.96      0.74        27

    accuracy                           0.62        48
   macro avg       0.70      0.58      0.53        48
weighted avg       0.69      0.62      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.48      0.47        21
           1       0.58      0.56      0.57        27

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.65      0.52      0.58        25
           1       0.57      0.70      0.63        23

    accuracy                           0.60        48
   macro avg       0.61      0.61      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.48      0.43      0.45        23
           1       0.52      0.56      0.54        25

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.29      0.38      0.32        16
           1       0.63      0.53      0.58        32

    accuracy                           0.48        48
   macro avg       0.46      0.45      0.45        48
weighted avg       0.51      0.48      0.49        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.21      0.28        24
           1       0.47      0.71      0.57        24

    accuracy                           0.46        48
   macro avg       0.44      0.46      0.42        48
weighted avg       0.44      0.46      0.42        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.53      0.44        15
           1       0.74      0.61      0.67        33

    accuracy                           0.58        48
   macro avg       0.56      0.57      0.56        48
weighted avg       0.63      0.58      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.67      0.19      0.30        21
           1       0.60      0.93      0.72        27

    accuracy                           0.60        48
   macro avg       0.63      0.56      0.51        48
weighted avg       0.63      0.60      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.75      0.52      0.62        23
           1       0.66      0.84      0.74        25

    accuracy                           0.69        48
   macro avg       0.70      0.68      0.68        48
weighted avg       0.70      0.69      0.68        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=0.1, gamma=1)
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        26
           1       0.46      1.00      0.63        22

    accuracy                           0.46        48
   macro avg       0.23      0.50      0.31        48
weighted avg       0.21      0.46      0.29        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.71      0.36      0.48        28
           1       0.47      0.80      0.59        20

    accuracy                           0.54        48
   macro avg       0.59      0.58      0.53        48
weighted avg       0.61      0.54      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.37      0.35      0.36        20
           1       0.55      0.57      0.56        28

    accuracy                           0.48        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.36      0.42        22
           1       0.56      0.69      0.62        26

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.53      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.30      0.39        23
           1       0.54      0.76      0.63        25

    accuracy                           0.54        48
   macro avg       0.54      0.53      0.51        48
weighted avg       0.54      0.54      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.40      0.50        25
           1       0.55      0.78      0.64        23

    accuracy                           0.58        48
   macro avg       0.61      0.59      0.57        48
weighted avg       0.61      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.41      0.45        27
           1       0.38      0.48      0.43        21

    accuracy                           0.44        48
   macro avg       0.44      0.44      0.44        48
weighted avg       0.45      0.44      0.44        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.32      0.39        22
           1       0.56      0.73      0.63        26

    accuracy                           0.54        48
   macro avg       0.53      0.52      0.51        48
weighted avg       0.53      0.54      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.32      0.39        25
           1       0.47      0.65      0.55        23

    accuracy                           0.48        48
   macro avg       0.48      0.49      0.47        48
weighted avg       0.49      0.48      0.46        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.55      0.52        20
           1       0.65      0.61      0.63        28

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.56      0.43      0.49        21
           1       0.62      0.74      0.68        27

    accuracy                           0.60        48
   macro avg       0.59      0.58      0.58        48
weighted avg       0.60      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.45      0.47        20
           1       0.63      0.68      0.66        28

    accuracy                           0.58        48
   macro avg       0.57      0.56      0.56        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.46      0.30      0.36        20
           1       0.60      0.75      0.67        28

    accuracy                           0.56        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.54      0.56      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.39      0.47        31
           1       0.32      0.53      0.40        17

    accuracy                           0.44        48
   macro avg       0.46      0.46      0.44        48
weighted avg       0.50      0.44      0.45        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.43      0.45      0.44        20
           1       0.59      0.57      0.58        28

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.36      0.25      0.29        20
           1       0.56      0.68      0.61        28

    accuracy                           0.50        48
   macro avg       0.46      0.46      0.45        48
weighted avg       0.47      0.50      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.48      0.53      0.50        19
           1       0.67      0.62      0.64        29

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.57        48
weighted avg       0.59      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.62      0.62      0.62        21
           1       0.70      0.70      0.70        27

    accuracy                           0.67        48
   macro avg       0.66      0.66      0.66        48
weighted avg       0.67      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.56      0.40      0.47        25
           1       0.50      0.65      0.57        23

    accuracy                           0.52        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.53      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.38      0.25      0.30        24
           1       0.44      0.58      0.50        24

    accuracy                           0.42        48
   macro avg       0.41      0.42      0.40        48
weighted avg       0.41      0.42      0.40        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.40      0.47        25
           1       0.50      0.65      0.57        23

    accuracy                           0.52        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.53      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.45      0.82      0.58        17
           1       0.82      0.45      0.58        31

    accuracy                           0.58        48
   macro avg       0.64      0.64      0.58        48
weighted avg       0.69      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.43      0.50        21
           1       0.64      0.78      0.70        27

    accuracy                           0.62        48
   macro avg       0.62      0.60      0.60        48
weighted avg       0.62      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.45      0.29      0.36        17
           1       0.68      0.81      0.74        31

    accuracy                           0.62        48
   macro avg       0.57      0.55      0.55        48
weighted avg       0.60      0.62      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.38      0.43        26
           1       0.43      0.55      0.48        22

    accuracy                           0.46        48
   macro avg       0.46      0.47      0.46        48
weighted avg       0.47      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.60      0.41      0.49        22
           1       0.61      0.77      0.68        26

    accuracy                           0.60        48
   macro avg       0.60      0.59      0.58        48
weighted avg       0.60      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.55      0.50      0.52        22
           1       0.61      0.65      0.63        26

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.52      0.51        21
           1       0.62      0.59      0.60        27

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.44      0.39      0.41        18
           1       0.66      0.70      0.68        30

    accuracy                           0.58        48
   macro avg       0.55      0.54      0.54        48
weighted avg       0.57      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.39      0.43      0.41        21
           1       0.52      0.48      0.50        27

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.45        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.43      0.48        23
           1       0.55      0.64      0.59        25

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.25      0.15      0.19        20
           1       0.53      0.68      0.59        28

    accuracy                           0.46        48
   macro avg       0.39      0.41      0.39        48
weighted avg       0.41      0.46      0.42        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.48      0.64      0.55        22
           1       0.58      0.42      0.49        26

    accuracy                           0.52        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.47      0.35      0.40        23
           1       0.52      0.64      0.57        25

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.49      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.59      0.43      0.50        23
           1       0.58      0.72      0.64        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.57        48
weighted avg       0.58      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.52      0.54        21
           1       0.64      0.67      0.65        27

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.33      0.05      0.08        21
           1       0.56      0.93      0.69        27

    accuracy                           0.54        48
   macro avg       0.44      0.49      0.39        48
weighted avg       0.46      0.54      0.43        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.48      0.58      0.52        19
           1       0.68      0.59      0.63        29

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.60      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.29      0.37        24
           1       0.50      0.71      0.59        24

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.48        48
weighted avg       0.50      0.50      0.48        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.36      0.41        25
           1       0.45      0.57      0.50        23

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.45        48
weighted avg       0.46      0.46      0.45        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.47      0.61      0.53        23
           1       0.50      0.36      0.42        25

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.47        48
weighted avg       0.48      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       1.00      0.03      0.06        30
           1       0.38      1.00      0.55        18

    accuracy                           0.40        48
   macro avg       0.69      0.52      0.31        48
weighted avg       0.77      0.40      0.25        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.46      0.48        24
           1       0.50      0.54      0.52        24

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.47      0.40      0.43        20
           1       0.61      0.68      0.64        28

    accuracy                           0.56        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.55      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.43      0.50        28
           1       0.43      0.60      0.50        20

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.53      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.44      0.52      0.48        21
           1       0.57      0.48      0.52        27

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.52      0.52      0.52        21
           1       0.63      0.63      0.63        27

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.50      0.45        18
           1       0.65      0.57      0.61        30

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.56      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.54      0.39      0.45        18
           1       0.69      0.80      0.74        30

    accuracy                           0.65        48
   macro avg       0.61      0.59      0.60        48
weighted avg       0.63      0.65      0.63        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.47      0.49        19
           1       0.67      0.69      0.68        29

    accuracy                           0.60        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.58      0.61      0.60        23
           1       0.62      0.60      0.61        25

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.40      0.29      0.33        21
           1       0.55      0.67      0.60        27

    accuracy                           0.50        48
   macro avg       0.47      0.48      0.47        48
weighted avg       0.48      0.50      0.48        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.33      0.39        21
           1       0.58      0.70      0.63        27

    accuracy                           0.54        48
   macro avg       0.52      0.52      0.51        48
weighted avg       0.53      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.58      0.32      0.41        22
           1       0.58      0.81      0.68        26

    accuracy                           0.58        48
   macro avg       0.58      0.56      0.54        48
weighted avg       0.58      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.71      0.23      0.34        22
           1       0.59      0.92      0.72        26

    accuracy                           0.60        48
   macro avg       0.65      0.58      0.53        48
weighted avg       0.64      0.60      0.55        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.53      0.51        19
           1       0.68      0.66      0.67        29

    accuracy                           0.60        48
   macro avg       0.59      0.59      0.59        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.57      0.65      0.60        20
           1       0.72      0.64      0.68        28

    accuracy                           0.65        48
   macro avg       0.64      0.65      0.64        48
weighted avg       0.66      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.39      0.44        23
           1       0.53      0.64      0.58        25

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.51        48
weighted avg       0.52      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.60      0.25      0.35        24
           1       0.53      0.83      0.65        24

    accuracy                           0.54        48
   macro avg       0.56      0.54      0.50        48
weighted avg       0.56      0.54      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.71      0.20      0.31        25
           1       0.51      0.91      0.66        23

    accuracy                           0.54        48
   macro avg       0.61      0.56      0.48        48
weighted avg       0.62      0.54      0.48        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.30      0.33        20
           1       0.56      0.64      0.60        28

    accuracy                           0.50        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.48      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.71      0.42      0.53        24
           1       0.59      0.83      0.69        24

    accuracy                           0.62        48
   macro avg       0.65      0.62      0.61        48
weighted avg       0.65      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.32      0.36        19
           1       0.62      0.72      0.67        29

    accuracy                           0.56        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.54      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.41      0.81      0.54        16
           1       0.81      0.41      0.54        32

    accuracy                           0.54        48
   macro avg       0.61      0.61      0.54        48
weighted avg       0.68      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.29      0.43      0.34        14
           1       0.70      0.56      0.62        34

    accuracy                           0.52        48
   macro avg       0.49      0.49      0.48        48
weighted avg       0.58      0.52      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.54      0.56        26
           1       0.50      0.55      0.52        22

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.31      0.31      0.31        16
           1       0.66      0.66      0.66        32

    accuracy                           0.54        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.69      0.45      0.55        20
           1       0.69      0.86      0.76        28

    accuracy                           0.69        48
   macro avg       0.69      0.65      0.65        48
weighted avg       0.69      0.69      0.67        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.43      0.47        23
           1       0.54      0.60      0.57        25

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.43      0.51        21
           1       0.65      0.81      0.72        27

    accuracy                           0.65        48
   macro avg       0.64      0.62      0.62        48
weighted avg       0.65      0.65      0.63        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.38      0.47      0.42        17
           1       0.67      0.58      0.62        31

    accuracy                           0.54        48
   macro avg       0.52      0.53      0.52        48
weighted avg       0.57      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.60      0.52      0.56        23
           1       0.61      0.68      0.64        25

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.52      0.67      0.58        21
           1       0.67      0.52      0.58        27

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.60      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.43      0.52        28
           1       0.47      0.70      0.56        20

    accuracy                           0.54        48
   macro avg       0.57      0.56      0.54        48
weighted avg       0.58      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.41      0.47      0.44        19
           1       0.62      0.55      0.58        29

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.53      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.30      0.34        23
           1       0.47      0.56      0.51        25

    accuracy                           0.44        48
   macro avg       0.43      0.43      0.43        48
weighted avg       0.43      0.44      0.43        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.36      0.42        22
           1       0.56      0.69      0.62        26

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.53      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.55      0.54        20
           1       0.67      0.64      0.65        28

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.33      0.31      0.32        16
           1       0.67      0.69      0.68        32

    accuracy                           0.56        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.36      0.40        22
           1       0.53      0.62      0.57        26

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.49      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.40      0.44        20
           1       0.62      0.71      0.67        28

    accuracy                           0.58        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.69      0.50        13
           1       0.84      0.60      0.70        35

    accuracy                           0.62        48
   macro avg       0.62      0.65      0.60        48
weighted avg       0.72      0.62      0.65        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.68      0.50      0.58        26
           1       0.55      0.73      0.63        22

    accuracy                           0.60        48
   macro avg       0.62      0.61      0.60        48
weighted avg       0.62      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.63      0.55      0.59        22
           1       0.66      0.73      0.69        26

    accuracy                           0.65        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.52      0.65      0.58        20
           1       0.70      0.57      0.63        28

    accuracy                           0.60        48
   macro avg       0.61      0.61      0.60        48
weighted avg       0.62      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.88      0.26      0.40        27
           1       0.50      0.95      0.66        21

    accuracy                           0.56        48
   macro avg       0.69      0.61      0.53        48
weighted avg       0.71      0.56      0.51        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.57      0.22      0.32        18
           1       0.66      0.90      0.76        30

    accuracy                           0.65        48
   macro avg       0.61      0.56      0.54        48
weighted avg       0.63      0.65      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.62      0.55        21
           1       0.64      0.52      0.57        27

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.58      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.29      0.11      0.15        19
           1       0.59      0.83      0.69        29

    accuracy                           0.54        48
   macro avg       0.44      0.47      0.42        48
weighted avg       0.47      0.54      0.48        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.71      0.48      0.57        25
           1       0.58      0.78      0.67        23

    accuracy                           0.62        48
   macro avg       0.64      0.63      0.62        48
weighted avg       0.65      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.57      0.50      0.53        24
           1       0.56      0.62      0.59        24

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.23      0.27        22
           1       0.48      0.62      0.54        26

    accuracy                           0.44        48
   macro avg       0.41      0.42      0.41        48
weighted avg       0.42      0.44      0.42        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.32      0.40        25
           1       0.48      0.70      0.57        23

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.49        48
weighted avg       0.51      0.50      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.001)
              precision    recall  f1-score   support

           0       0.60      0.47      0.53        19
           1       0.70      0.79      0.74        29

    accuracy                           0.67        48
   macro avg       0.65      0.63      0.64        48
weighted avg       0.66      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.73      0.59      0.65        27
           1       0.58      0.71      0.64        21

    accuracy                           0.65        48
   macro avg       0.65      0.65      0.65        48
weighted avg       0.66      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.59      0.55        22
           1       0.61      0.54      0.57        26

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.36      0.56      0.44        16
           1       0.70      0.50      0.58        32

    accuracy                           0.52        48
   macro avg       0.53      0.53      0.51        48
weighted avg       0.58      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.30      0.37        23
           1       0.52      0.68      0.59        25

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.48        48
weighted avg       0.49      0.50      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.47      0.44        19
           1       0.62      0.55      0.58        29

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.53      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.79      0.70        19
           1       0.83      0.69      0.75        29

    accuracy                           0.73        48
   macro avg       0.73      0.74      0.73        48
weighted avg       0.75      0.73      0.73        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.57      0.55        21
           1       0.64      0.59      0.62        27

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.1)
              precision    recall  f1-score   support

           0       0.55      0.48      0.51        25
           1       0.50      0.57      0.53        23

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.57      0.57      0.57        21
           1       0.67      0.67      0.67        27

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.59      0.52      0.55        25
           1       0.54      0.61      0.57        23

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.65      0.59        20
           1       0.71      0.61      0.65        28

    accuracy                           0.62        48
   macro avg       0.62      0.63      0.62        48
weighted avg       0.64      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.47      0.46        19
           1       0.64      0.62      0.63        29

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.71      0.50      0.59        24
           1       0.61      0.79      0.69        24

    accuracy                           0.65        48
   macro avg       0.66      0.65      0.64        48
weighted avg       0.66      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.35      0.34        20
           1       0.52      0.50      0.51        28

    accuracy                           0.44        48
   macro avg       0.43      0.42      0.43        48
weighted avg       0.44      0.44      0.44        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.57      0.57      0.57        23
           1       0.60      0.60      0.60        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.32      0.43        25
           1       0.53      0.83      0.64        23

    accuracy                           0.56        48
   macro avg       0.60      0.57      0.54        48
weighted avg       0.60      0.56      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.61      0.48      0.54        23
           1       0.60      0.72      0.65        25

    accuracy                           0.60        48
   macro avg       0.61      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       1.00      0.08      0.14        26
           1       0.48      1.00      0.65        22

    accuracy                           0.50        48
   macro avg       0.74      0.54      0.39        48
weighted avg       0.76      0.50      0.37        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.35      0.34        17
           1       0.63      0.61      0.62        31

    accuracy                           0.52        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.60      0.79      0.68        19
           1       0.83      0.66      0.73        29

    accuracy                           0.71        48
   macro avg       0.71      0.72      0.71        48
weighted avg       0.74      0.71      0.71        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.55      0.52        20
           1       0.65      0.61      0.63        28

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.67      0.59        15
           1       0.83      0.73      0.77        33

    accuracy                           0.71        48
   macro avg       0.68      0.70      0.68        48
weighted avg       0.73      0.71      0.72        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.57      0.57      0.57        21
           1       0.67      0.67      0.67        27

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.41      0.50        22
           1       0.62      0.81      0.70        26

    accuracy                           0.62        48
   macro avg       0.63      0.61      0.60        48
weighted avg       0.63      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.42      0.42      0.42        19
           1       0.62      0.62      0.62        29

    accuracy                           0.54        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.33      0.40        24
           1       0.50      0.67      0.57        24

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.49        48
weighted avg       0.50      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.36      0.24      0.29        21
           1       0.53      0.67      0.59        27

    accuracy                           0.48        48
   macro avg       0.44      0.45      0.44        48
weighted avg       0.45      0.48      0.46        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.48      0.57      0.52        21
           1       0.61      0.52      0.56        27

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.28      0.35      0.31        20
           1       0.43      0.36      0.39        28

    accuracy                           0.35        48
   macro avg       0.36      0.35      0.35        48
weighted avg       0.37      0.35      0.36        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.29      0.29      0.29        17
           1       0.61      0.61      0.61        31

    accuracy                           0.50        48
   macro avg       0.45      0.45      0.45        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.52      0.52      0.52        21
           1       0.63      0.63      0.63        27

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.67      0.61        21
           1       0.70      0.59      0.64        27

    accuracy                           0.62        48
   macro avg       0.63      0.63      0.62        48
weighted avg       0.64      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.36      0.20      0.26        20
           1       0.57      0.75      0.65        28

    accuracy                           0.52        48
   macro avg       0.47      0.47      0.45        48
weighted avg       0.48      0.52      0.48        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.60      0.57      0.59        21
           1       0.68      0.70      0.69        27

    accuracy                           0.65        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.25      0.21      0.23        19
           1       0.53      0.59      0.56        29

    accuracy                           0.44        48
   macro avg       0.39      0.40      0.39        48
weighted avg       0.42      0.44      0.43        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.46      0.63      0.53        19
           1       0.68      0.52      0.59        29

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.59      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.41      0.72      0.52        18
           1       0.69      0.37      0.48        30

    accuracy                           0.50        48
   macro avg       0.55      0.54      0.50        48
weighted avg       0.58      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.35      0.30      0.33        23
           1       0.43      0.48      0.45        25

    accuracy                           0.40        48
   macro avg       0.39      0.39      0.39        48
weighted avg       0.39      0.40      0.39        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.33      0.37        21
           1       0.55      0.63      0.59        27

    accuracy                           0.50        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.49      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.69      0.65        26
           1       0.58      0.50      0.54        22

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.33      0.35        18
           1       0.62      0.67      0.65        30

    accuracy                           0.54        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.53      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.52      0.50        23
           1       0.52      0.48      0.50        25

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.47      0.47        17
           1       0.71      0.71      0.71        31

    accuracy                           0.62        48
   macro avg       0.59      0.59      0.59        48
weighted avg       0.62      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.43      0.46        21
           1       0.60      0.67      0.63        27

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.53      0.41      0.46        22
           1       0.58      0.69      0.63        26

    accuracy                           0.56        48
   macro avg       0.56      0.55      0.55        48
weighted avg       0.56      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.57      0.57      0.57        21
           1       0.67      0.67      0.67        27

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.62      0.58        21
           1       0.67      0.59      0.63        27

    accuracy                           0.60        48
   macro avg       0.60      0.61      0.60        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.59      0.48      0.53        21
           1       0.65      0.74      0.69        27

    accuracy                           0.62        48
   macro avg       0.62      0.61      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.42      0.47        19
           1       0.67      0.76      0.71        29

    accuracy                           0.62        48
   macro avg       0.60      0.59      0.59        48
weighted avg       0.61      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.57      0.50      0.53        24
           1       0.56      0.62      0.59        24

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.57      0.36      0.44        22
           1       0.59      0.77      0.67        26

    accuracy                           0.58        48
   macro avg       0.58      0.57      0.56        48
weighted avg       0.58      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.46      0.63      0.53        19
           1       0.68      0.52      0.59        29

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.59      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.70      0.30      0.42        23
           1       0.58      0.88      0.70        25

    accuracy                           0.60        48
   macro avg       0.64      0.59      0.56        48
weighted avg       0.64      0.60      0.57        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.46      0.49        24
           1       0.52      0.58      0.55        24

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.60      0.38      0.46        24
           1       0.55      0.75      0.63        24

    accuracy                           0.56        48
   macro avg       0.57      0.56      0.55        48
weighted avg       0.57      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.25      0.50      0.33        12
           1       0.75      0.50      0.60        36

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.47        48
weighted avg       0.62      0.50      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.56      0.61      0.58        23
           1       0.61      0.56      0.58        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.57      0.36      0.44        22
           1       0.59      0.77      0.67        26

    accuracy                           0.58        48
   macro avg       0.58      0.57      0.56        48
weighted avg       0.58      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.79      0.58      0.67        26
           1       0.62      0.82      0.71        22

    accuracy                           0.69        48
   macro avg       0.71      0.70      0.69        48
weighted avg       0.71      0.69      0.68        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.67      0.45      0.54        22
           1       0.64      0.81      0.71        26

    accuracy                           0.65        48
   macro avg       0.65      0.63      0.63        48
weighted avg       0.65      0.65      0.63        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.62      0.59        21
           1       0.68      0.63      0.65        27

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.52      0.57      0.54        23
           1       0.57      0.52      0.54        25

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.44      0.75      0.56        16
           1       0.81      0.53      0.64        32

    accuracy                           0.60        48
   macro avg       0.63      0.64      0.60        48
weighted avg       0.69      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.39      0.41        23
           1       0.48      0.52      0.50        25

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.45        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.65      0.52      0.58        21
           1       0.68      0.78      0.72        27

    accuracy                           0.67        48
   macro avg       0.66      0.65      0.65        48
weighted avg       0.66      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.58      0.54        19
           1       0.69      0.62      0.65        29

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.62      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.50      0.47        18
           1       0.68      0.63      0.66        30

    accuracy                           0.58        48
   macro avg       0.56      0.57      0.56        48
weighted avg       0.59      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.46      0.55      0.50        20
           1       0.62      0.54      0.58        28

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.56      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.50      0.48      0.49        21
           1       0.61      0.63      0.62        27

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.42      0.40      0.41        20
           1       0.59      0.61      0.60        28

    accuracy                           0.52        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.45      0.50      0.47        18
           1       0.68      0.63      0.66        30

    accuracy                           0.58        48
   macro avg       0.56      0.57      0.56        48
weighted avg       0.59      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.48      0.47        21
           1       0.58      0.56      0.57        27

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.47      0.40      0.43        20
           1       0.61      0.68      0.64        28

    accuracy                           0.56        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.55      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.63      0.59        19
           1       0.73      0.66      0.69        29

    accuracy                           0.65        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.66      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.43      0.39      0.41        23
           1       0.48      0.52      0.50        25

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.45        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.30      0.39        23
           1       0.54      0.76      0.63        25

    accuracy                           0.54        48
   macro avg       0.54      0.53      0.51        48
weighted avg       0.54      0.54      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.39      0.35      0.37        20
           1       0.57      0.61      0.59        28

    accuracy                           0.50        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.49      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.56      0.67      0.61        21
           1       0.70      0.59      0.64        27

    accuracy                           0.62        48
   macro avg       0.63      0.63      0.62        48
weighted avg       0.64      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.48      0.49        21
           1       0.61      0.63      0.62        27

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.36      0.45      0.40        20
           1       0.52      0.43      0.47        28

    accuracy                           0.44        48
   macro avg       0.44      0.44      0.44        48
weighted avg       0.45      0.44      0.44        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.67      0.59        18
           1       0.76      0.63      0.69        30

    accuracy                           0.65        48
   macro avg       0.64      0.65      0.64        48
weighted avg       0.67      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.32      0.42        25
           1       0.51      0.78      0.62        23

    accuracy                           0.54        48
   macro avg       0.56      0.55      0.52        48
weighted avg       0.57      0.54      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.38      0.44        26
           1       0.45      0.59      0.51        22

    accuracy                           0.48        48
   macro avg       0.49      0.49      0.48        48
weighted avg       0.49      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.58      0.64      0.61        22
           1       0.67      0.62      0.64        26

    accuracy                           0.62        48
   macro avg       0.62      0.63      0.62        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.40      0.35      0.37        23
           1       0.46      0.52      0.49        25

    accuracy                           0.44        48
   macro avg       0.43      0.43      0.43        48
weighted avg       0.43      0.44      0.43        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.39      0.47      0.43        19
           1       0.60      0.52      0.56        29

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.49        48
weighted avg       0.52      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.36      0.44      0.40        18
           1       0.62      0.53      0.57        30

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.52      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.52      0.52      0.52        21
           1       0.63      0.63      0.63        27

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.50      0.50        22
           1       0.58      0.58      0.58        26

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.50      0.46        18
           1       0.67      0.60      0.63        30

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.58      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.23      0.29      0.26        17
           1       0.54      0.45      0.49        31

    accuracy                           0.40        48
   macro avg       0.38      0.37      0.37        48
weighted avg       0.43      0.40      0.41        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.57      0.53        21
           1       0.62      0.56      0.59        27

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.55      0.27      0.36        22
           1       0.57      0.81      0.67        26

    accuracy                           0.56        48
   macro avg       0.56      0.54      0.52        48
weighted avg       0.56      0.56      0.53        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.39      0.39        18
           1       0.63      0.63      0.63        30

    accuracy                           0.54        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.57      0.46        14
           1       0.78      0.62      0.69        34

    accuracy                           0.60        48
   macro avg       0.58      0.59      0.57        48
weighted avg       0.66      0.60      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.60      0.59        20
           1       0.70      0.68      0.69        28

    accuracy                           0.65        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.53      0.59      0.56        17
           1       0.76      0.71      0.73        31

    accuracy                           0.67        48
   macro avg       0.64      0.65      0.64        48
weighted avg       0.68      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.47      0.49        19
           1       0.67      0.69      0.68        29

    accuracy                           0.60        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.61      0.61      0.61        23
           1       0.64      0.64      0.64        25

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.65      0.68      0.67        22
           1       0.72      0.69      0.71        26

    accuracy                           0.69        48
   macro avg       0.69      0.69      0.69        48
weighted avg       0.69      0.69      0.69        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.33      0.44        21
           1       0.62      0.85      0.72        27

    accuracy                           0.62        48
   macro avg       0.63      0.59      0.58        48
weighted avg       0.63      0.62      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.59      0.51        17
           1       0.73      0.61      0.67        31

    accuracy                           0.60        48
   macro avg       0.59      0.60      0.59        48
weighted avg       0.63      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.36      0.42        22
           1       0.56      0.69      0.62        26

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.53      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.69      0.39      0.50        23
           1       0.60      0.84      0.70        25

    accuracy                           0.62        48
   macro avg       0.65      0.62      0.60        48
weighted avg       0.64      0.62      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.48      0.50      0.49        20
           1       0.63      0.61      0.62        28

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.48      0.48        21
           1       0.59      0.59      0.59        27

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.50      0.50        20
           1       0.64      0.64      0.64        28

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.57        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.42      0.46        19
           1       0.66      0.72      0.69        29

    accuracy                           0.60        48
   macro avg       0.58      0.57      0.57        48
weighted avg       0.59      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.52      0.53        23
           1       0.58      0.60      0.59        25

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.48      0.43        21
           1       0.52      0.44      0.48        27

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.47      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.57      0.52      0.55        23
           1       0.59      0.64      0.62        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.45      0.49        22
           1       0.59      0.65      0.62        26

    accuracy                           0.56        48
   macro avg       0.56      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.42      0.50        24
           1       0.56      0.75      0.64        24

    accuracy                           0.58        48
   macro avg       0.59      0.58      0.57        48
weighted avg       0.59      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.39      0.46        23
           1       0.56      0.72      0.63        25

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.55        48
weighted avg       0.56      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.61      0.74      0.67        23
           1       0.70      0.56      0.62        25

    accuracy                           0.65        48
   macro avg       0.65      0.65      0.64        48
weighted avg       0.66      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.56      0.37      0.44        27
           1       0.43      0.62      0.51        21

    accuracy                           0.48        48
   macro avg       0.49      0.49      0.48        48
weighted avg       0.50      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.50      0.54        20
           1       0.68      0.75      0.71        28

    accuracy                           0.65        48
   macro avg       0.63      0.62      0.63        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.45      0.39      0.42        23
           1       0.50      0.56      0.53        25

    accuracy                           0.48        48
   macro avg       0.47      0.48      0.47        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.55      0.49        20
           1       0.61      0.50      0.55        28

    accuracy                           0.52        48
   macro avg       0.52      0.53      0.52        48
weighted avg       0.54      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.43      0.45        21
           1       0.59      0.63      0.61        27

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.28      0.53      0.37        17
           1       0.50      0.26      0.34        31

    accuracy                           0.35        48
   macro avg       0.39      0.39      0.35        48
weighted avg       0.42      0.35      0.35        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.61      0.56      0.58        25
           1       0.56      0.61      0.58        23

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.56      0.42      0.48        24
           1       0.53      0.67      0.59        24

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.54      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.40      0.46        20
           1       0.64      0.75      0.69        28

    accuracy                           0.60        48
   macro avg       0.58      0.57      0.57        48
weighted avg       0.59      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.16      0.24        25
           1       0.47      0.83      0.60        23

    accuracy                           0.48        48
   macro avg       0.49      0.49      0.42        48
weighted avg       0.49      0.48      0.42        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.88      0.28      0.42        25
           1       0.55      0.96      0.70        23

    accuracy                           0.60        48
   macro avg       0.71      0.62      0.56        48
weighted avg       0.72      0.60      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.53      0.48      0.50        21
           1       0.62      0.67      0.64        27

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.57        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.32      0.47      0.38        15
           1       0.69      0.55      0.61        33

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.49        48
weighted avg       0.58      0.52      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.69      0.46      0.55        24
           1       0.59      0.79      0.68        24

    accuracy                           0.62        48
   macro avg       0.64      0.62      0.61        48
weighted avg       0.64      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.75      0.46      0.57        26
           1       0.56      0.82      0.67        22

    accuracy                           0.62        48
   macro avg       0.66      0.64      0.62        48
weighted avg       0.66      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.61      0.67      0.64        21
           1       0.72      0.67      0.69        27

    accuracy                           0.67        48
   macro avg       0.66      0.67      0.66        48
weighted avg       0.67      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.22      0.30        23
           1       0.53      0.80      0.63        25

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.47        48
weighted avg       0.51      0.52      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.50      0.32      0.39        19
           1       0.64      0.79      0.71        29

    accuracy                           0.60        48
   macro avg       0.57      0.55      0.55        48
weighted avg       0.58      0.60      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.61      0.58      0.60        24
           1       0.60      0.62      0.61        24

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.75      0.56        16
           1       0.81      0.53      0.64        32

    accuracy                           0.60        48
   macro avg       0.63      0.64      0.60        48
weighted avg       0.69      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.38      0.50      0.43        16
           1       0.70      0.59      0.64        32

    accuracy                           0.56        48
   macro avg       0.54      0.55      0.54        48
weighted avg       0.60      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.43      0.53      0.48        19
           1       0.64      0.55      0.59        29

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.56      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.32      0.39        25
           1       0.47      0.65      0.55        23

    accuracy                           0.48        48
   macro avg       0.48      0.49      0.47        48
weighted avg       0.49      0.48      0.46        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.41      0.32      0.36        22
           1       0.52      0.62      0.56        26

    accuracy                           0.48        48
   macro avg       0.46      0.47      0.46        48
weighted avg       0.47      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.42      0.47        19
           1       0.67      0.76      0.71        29

    accuracy                           0.62        48
   macro avg       0.60      0.59      0.59        48
weighted avg       0.61      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.43      0.47        21
           1       0.61      0.70      0.66        27

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.31      0.41        26
           1       0.49      0.77      0.60        22

    accuracy                           0.52        48
   macro avg       0.55      0.54      0.50        48
weighted avg       0.56      0.52      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.38      0.50      0.43        16
           1       0.70      0.59      0.64        32

    accuracy                           0.56        48
   macro avg       0.54      0.55      0.54        48
weighted avg       0.60      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.45      0.45      0.45        22
           1       0.54      0.54      0.54        26

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.52      0.61      0.56        23
           1       0.57      0.48      0.52        25

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.55      0.60      0.57        20
           1       0.69      0.64      0.67        28

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.77      0.53        13
           1       0.87      0.57      0.69        35

    accuracy                           0.62        48
   macro avg       0.63      0.67      0.61        48
weighted avg       0.74      0.62      0.65        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.50      0.47        18
           1       0.68      0.63      0.66        30

    accuracy                           0.58        48
   macro avg       0.56      0.57      0.56        48
weighted avg       0.59      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.33      0.05      0.08        21
           1       0.56      0.93      0.69        27

    accuracy                           0.54        48
   macro avg       0.44      0.49      0.39        48
weighted avg       0.46      0.54      0.43        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.56      0.47        16
           1       0.73      0.59      0.66        32

    accuracy                           0.58        48
   macro avg       0.57      0.58      0.56        48
weighted avg       0.62      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.60      0.45      0.51        20
           1       0.67      0.79      0.72        28

    accuracy                           0.65        48
   macro avg       0.63      0.62      0.62        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.39      0.39        18
           1       0.63      0.63      0.63        30

    accuracy                           0.54        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.47      0.41      0.44        22
           1       0.55      0.62      0.58        26

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.55      0.67      0.60        18
           1       0.77      0.67      0.71        30

    accuracy                           0.67        48
   macro avg       0.66      0.67      0.66        48
weighted avg       0.69      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.54      0.59      0.57        22
           1       0.62      0.58      0.60        26

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.48      0.48      0.48        21
           1       0.59      0.59      0.59        27

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.38      0.56      0.45        18
           1       0.64      0.47      0.54        30

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.54      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.59      0.45      0.51        22
           1       0.61      0.73      0.67        26

    accuracy                           0.60        48
   macro avg       0.60      0.59      0.59        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.35      0.41        23
           1       0.53      0.68      0.60        25

    accuracy                           0.52        48
   macro avg       0.52      0.51      0.50        48
weighted avg       0.52      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.41      0.54      0.47        13
           1       0.81      0.71      0.76        35

    accuracy                           0.67        48
   macro avg       0.61      0.63      0.61        48
weighted avg       0.70      0.67      0.68        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.56      0.37      0.44        27
           1       0.43      0.62      0.51        21

    accuracy                           0.48        48
   macro avg       0.49      0.49      0.48        48
weighted avg       0.50      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.37      0.37      0.37        19
           1       0.59      0.59      0.59        29

    accuracy                           0.50        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.38      0.43        21
           1       0.59      0.70      0.64        27

    accuracy                           0.56        48
   macro avg       0.55      0.54      0.54        48
weighted avg       0.55      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.58      0.48      0.52        23
           1       0.59      0.68      0.63        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.60      0.50      0.55        18
           1       0.73      0.80      0.76        30

    accuracy                           0.69        48
   macro avg       0.66      0.65      0.65        48
weighted avg       0.68      0.69      0.68        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.43      0.44        21
           1       0.57      0.59      0.58        27

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.32      0.35        22
           1       0.50      0.58      0.54        26

    accuracy                           0.46        48
   macro avg       0.44      0.45      0.44        48
weighted avg       0.45      0.46      0.45        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.48      0.58      0.52        19
           1       0.68      0.59      0.63        29

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.60      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.55      0.52      0.53        23
           1       0.58      0.60      0.59        25

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.53      0.44        17
           1       0.67      0.52      0.58        31

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.51        48
weighted avg       0.56      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.47      0.30      0.37        23
           1       0.52      0.68      0.59        25

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.48        48
weighted avg       0.49      0.50      0.48        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.80      0.29      0.42        28
           1       0.47      0.90      0.62        20

    accuracy                           0.54        48
   macro avg       0.64      0.59      0.52        48
weighted avg       0.66      0.54      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.64      0.76      0.70        21
           1       0.78      0.67      0.72        27

    accuracy                           0.71        48
   macro avg       0.71      0.71      0.71        48
weighted avg       0.72      0.71      0.71        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.67      0.27      0.38        30
           1       0.39      0.78      0.52        18

    accuracy                           0.46        48
   macro avg       0.53      0.52      0.45        48
weighted avg       0.56      0.46      0.43        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.65      0.56        17
           1       0.77      0.65      0.70        31

    accuracy                           0.65        48
   macro avg       0.63      0.65      0.63        48
weighted avg       0.67      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.47      0.44        19
           1       0.62      0.55      0.58        29

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.53      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.32      0.37        22
           1       0.53      0.65      0.59        26

    accuracy                           0.50        48
   macro avg       0.48      0.49      0.48        48
weighted avg       0.49      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.38      0.28      0.32        18
           1       0.63      0.73      0.68        30

    accuracy                           0.56        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.54      0.56      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.56      0.64      0.60        22
           1       0.65      0.58      0.61        26

    accuracy                           0.60        48
   macro avg       0.61      0.61      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.68      0.65        22
           1       0.71      0.65      0.68        26

    accuracy                           0.67        48
   macro avg       0.67      0.67      0.67        48
weighted avg       0.67      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.42      0.61      0.50        18
           1       0.68      0.50      0.58        30

    accuracy                           0.54        48
   macro avg       0.55      0.56      0.54        48
weighted avg       0.58      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.36      0.42        22
           1       0.56      0.69      0.62        26

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.53      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.62      0.43      0.51        23
           1       0.59      0.76      0.67        25

    accuracy                           0.60        48
   macro avg       0.61      0.60      0.59        48
weighted avg       0.61      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.46      0.68      0.55        19
           1       0.70      0.48      0.57        29

    accuracy                           0.56        48
   macro avg       0.58      0.58      0.56        48
weighted avg       0.61      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.36      0.42        25
           1       0.47      0.61      0.53        23

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.47        48
weighted avg       0.48      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.18      0.28        22
           1       0.56      0.88      0.69        26

    accuracy                           0.56        48
   macro avg       0.57      0.53      0.48        48
weighted avg       0.57      0.56      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.48      0.46      0.47        24
           1       0.48      0.50      0.49        24

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.60      0.53        20
           1       0.65      0.54      0.59        28

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.58      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.53      0.44      0.48        18
           1       0.70      0.77      0.73        30

    accuracy                           0.65        48
   macro avg       0.62      0.61      0.61        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.37      0.33      0.35        21
           1       0.52      0.56      0.54        27

    accuracy                           0.46        48
   macro avg       0.44      0.44      0.44        48
weighted avg       0.45      0.46      0.45        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.58      0.54        19
           1       0.69      0.62      0.65        29

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.62      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.75      0.39      0.51        23
           1       0.61      0.88      0.72        25

    accuracy                           0.65        48
   macro avg       0.68      0.64      0.62        48
weighted avg       0.68      0.65      0.62        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.68      0.52      0.59        25
           1       0.59      0.74      0.65        23

    accuracy                           0.62        48
   macro avg       0.64      0.63      0.62        48
weighted avg       0.64      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.35      0.41        20
           1       0.62      0.75      0.68        28

    accuracy                           0.58        48
   macro avg       0.56      0.55      0.54        48
weighted avg       0.57      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.50      0.48        20
           1       0.62      0.57      0.59        28

    accuracy                           0.54        48
   macro avg       0.53      0.54      0.53        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.56      0.41      0.47        22
           1       0.59      0.73      0.66        26

    accuracy                           0.58        48
   macro avg       0.58      0.57      0.56        48
weighted avg       0.58      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.41      0.32      0.36        22
           1       0.52      0.62      0.56        26

    accuracy                           0.48        48
   macro avg       0.46      0.47      0.46        48
weighted avg       0.47      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.61      0.67      0.64        21
           1       0.72      0.67      0.69        27

    accuracy                           0.67        48
   macro avg       0.66      0.67      0.66        48
weighted avg       0.67      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.50      0.04      0.08        23
           1       0.52      0.96      0.68        25

    accuracy                           0.52        48
   macro avg       0.51      0.50      0.38        48
weighted avg       0.51      0.52      0.39        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.53      0.36      0.43        22
           1       0.58      0.73      0.64        26

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.56      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.55      0.25      0.34        24
           1       0.51      0.79      0.62        24

    accuracy                           0.52        48
   macro avg       0.53      0.52      0.48        48
weighted avg       0.53      0.52      0.48        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.73      0.58        15
           1       0.84      0.64      0.72        33

    accuracy                           0.67        48
   macro avg       0.66      0.68      0.65        48
weighted avg       0.73      0.67      0.68        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.58      0.46      0.51        24
           1       0.55      0.67      0.60        24

    accuracy                           0.56        48
   macro avg       0.57      0.56      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.50      0.62      0.55        21
           1       0.64      0.52      0.57        27

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.58      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.53      0.39      0.45        23
           1       0.55      0.68      0.61        25

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.54      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.50      0.49        18
           1       0.69      0.67      0.68        30

    accuracy                           0.60        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.56      0.51        18
           1       0.70      0.63      0.67        30

    accuracy                           0.60        48
   macro avg       0.59      0.59      0.59        48
weighted avg       0.62      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.38      0.42        21
           1       0.58      0.67      0.62        27

    accuracy                           0.54        48
   macro avg       0.53      0.52      0.52        48
weighted avg       0.53      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.55      0.43      0.48        28
           1       0.38      0.50      0.43        20

    accuracy                           0.46        48
   macro avg       0.47      0.46      0.46        48
weighted avg       0.48      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.43      0.18      0.25        17
           1       0.66      0.87      0.75        31

    accuracy                           0.62        48
   macro avg       0.54      0.52      0.50        48
weighted avg       0.58      0.62      0.57        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.82      0.36      0.50        25
           1       0.57      0.91      0.70        23

    accuracy                           0.62        48
   macro avg       0.69      0.64      0.60        48
weighted avg       0.70      0.62      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.76      0.60        17
           1       0.82      0.58      0.68        31

    accuracy                           0.65        48
   macro avg       0.66      0.67      0.64        48
weighted avg       0.71      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.30      0.34        20
           1       0.58      0.68      0.62        28

    accuracy                           0.52        48
   macro avg       0.49      0.49      0.48        48
weighted avg       0.50      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.36      0.42        22
           1       0.56      0.69      0.62        26

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.53      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.001)
              precision    recall  f1-score   support

           0       0.43      0.12      0.19        25
           1       0.46      0.83      0.59        23

    accuracy                           0.46        48
   macro avg       0.45      0.47      0.39        48
weighted avg       0.45      0.46      0.38        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.29      0.38        24
           1       0.51      0.75      0.61        24

    accuracy                           0.52        48
   macro avg       0.53      0.52      0.49        48
weighted avg       0.53      0.52      0.49        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.21      0.29        24
           1       0.50      0.79      0.61        24

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.45        48
weighted avg       0.50      0.50      0.45        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.57      0.48      0.52        25
           1       0.52      0.61      0.56        23

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.50      0.54        22
           1       0.62      0.69      0.65        26

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.64      0.59      0.62        27
           1       0.52      0.57      0.55        21

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.29      0.24      0.26        21
           1       0.48      0.56      0.52        27

    accuracy                           0.42        48
   macro avg       0.39      0.40      0.39        48
weighted avg       0.40      0.42      0.41        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.28      0.26      0.27        19
           1       0.53      0.55      0.54        29

    accuracy                           0.44        48
   macro avg       0.41      0.41      0.41        48
weighted avg       0.43      0.44      0.43        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.57      0.17      0.27        23
           1       0.54      0.88      0.67        25

    accuracy                           0.54        48
   macro avg       0.55      0.53      0.47        48
weighted avg       0.55      0.54      0.48        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.55      0.57      0.56        21
           1       0.65      0.63      0.64        27

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.60      0.75      0.67        20
           1       0.78      0.64      0.71        28

    accuracy                           0.69        48
   macro avg       0.69      0.70      0.69        48
weighted avg       0.71      0.69      0.69        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.26      0.35        23
           1       0.54      0.80      0.65        25

    accuracy                           0.54        48
   macro avg       0.54      0.53      0.50        48
weighted avg       0.54      0.54      0.51        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.42      0.41        19
           1       0.61      0.59      0.60        29

    accuracy                           0.52        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=0.1, gamma=1)
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        25
           1       0.48      1.00      0.65        23

    accuracy                           0.48        48
   macro avg       0.24      0.50      0.32        48
weighted avg       0.23      0.48      0.31        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.43      0.65      0.52        20
           1       0.61      0.39      0.48        28

    accuracy                           0.50        48
   macro avg       0.52      0.52      0.50        48
weighted avg       0.54      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.42      0.49        24
           1       0.55      0.71      0.62        24

    accuracy                           0.56        48
   macro avg       0.57      0.56      0.55        48
weighted avg       0.57      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.36      0.46        22
           1       0.60      0.81      0.69        26

    accuracy                           0.60        48
   macro avg       0.61      0.59      0.57        48
weighted avg       0.61      0.60      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.42      0.40        19
           1       0.59      0.55      0.57        29

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.41      0.67      0.51        18
           1       0.68      0.43      0.53        30

    accuracy                           0.52        48
   macro avg       0.55      0.55      0.52        48
weighted avg       0.58      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.45      0.74      0.56        19
           1       0.71      0.41      0.52        29

    accuracy                           0.54        48
   macro avg       0.58      0.58      0.54        48
weighted avg       0.61      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.48      0.45      0.47        22
           1       0.56      0.58      0.57        26

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.22      0.29        23
           1       0.50      0.72      0.59        25

    accuracy                           0.48        48
   macro avg       0.46      0.47      0.44        48
weighted avg       0.46      0.48      0.44        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.67      0.53        18
           1       0.71      0.50      0.59        30

    accuracy                           0.56        48
   macro avg       0.58      0.58      0.56        48
weighted avg       0.61      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.55      0.57      0.56        21
           1       0.65      0.63      0.64        27

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.31      0.32        16
           1       0.67      0.69      0.68        32

    accuracy                           0.56        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.32      0.32      0.32        22
           1       0.42      0.42      0.42        26

    accuracy                           0.38        48
   macro avg       0.37      0.37      0.37        48
weighted avg       0.38      0.38      0.38        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.50      0.52        22
           1       0.61      0.65      0.63        26

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.72      0.65        18
           1       0.81      0.70      0.75        30

    accuracy                           0.71        48
   macro avg       0.70      0.71      0.70        48
weighted avg       0.73      0.71      0.71        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.59      0.54        17
           1       0.75      0.68      0.71        31

    accuracy                           0.65        48
   macro avg       0.62      0.63      0.63        48
weighted avg       0.66      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.62      0.36      0.46        22
           1       0.60      0.81      0.69        26

    accuracy                           0.60        48
   macro avg       0.61      0.59      0.57        48
weighted avg       0.61      0.60      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.32      0.40        22
           1       0.57      0.77      0.66        26

    accuracy                           0.56        48
   macro avg       0.55      0.54      0.53        48
weighted avg       0.56      0.56      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.67      0.60        18
           1       0.77      0.67      0.71        30

    accuracy                           0.67        48
   macro avg       0.66      0.67      0.66        48
weighted avg       0.69      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.36      0.42        22
           1       0.56      0.69      0.62        26

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.53      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.1)
              precision    recall  f1-score   support

           0       0.37      0.32      0.34        22
           1       0.48      0.54      0.51        26

    accuracy                           0.44        48
   macro avg       0.43      0.43      0.43        48
weighted avg       0.43      0.44      0.43        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.23      0.30        22
           1       0.54      0.77      0.63        26

    accuracy                           0.52        48
   macro avg       0.50      0.50      0.47        48
weighted avg       0.50      0.52      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.45      0.50      0.48        20
           1       0.62      0.57      0.59        28

    accuracy                           0.54        48
   macro avg       0.53      0.54      0.53        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.50      0.50        20
           1       0.64      0.64      0.64        28

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.57        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.43      0.46        21
           1       0.60      0.67      0.63        27

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.62      0.54      0.58        24
           1       0.59      0.67      0.63        24

    accuracy                           0.60        48
   macro avg       0.61      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.40      0.47        20
           1       0.65      0.79      0.71        28

    accuracy                           0.62        48
   macro avg       0.61      0.59      0.59        48
weighted avg       0.62      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.62      0.64        24
           1       0.64      0.67      0.65        24

    accuracy                           0.65        48
   macro avg       0.65      0.65      0.65        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.50      0.51        22
           1       0.59      0.62      0.60        26

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.60      0.39      0.47        23
           1       0.58      0.76      0.66        25

    accuracy                           0.58        48
   macro avg       0.59      0.58      0.56        48
weighted avg       0.59      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.53      0.51        19
           1       0.68      0.66      0.67        29

    accuracy                           0.60        48
   macro avg       0.59      0.59      0.59        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.37      0.33      0.35        21
           1       0.52      0.56      0.54        27

    accuracy                           0.46        48
   macro avg       0.44      0.44      0.44        48
weighted avg       0.45      0.46      0.45        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.56      0.24      0.33        21
           1       0.59      0.85      0.70        27

    accuracy                           0.58        48
   macro avg       0.57      0.54      0.52        48
weighted avg       0.57      0.58      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.52      0.57      0.55        21
           1       0.64      0.59      0.62        27

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.57      0.58        23
           1       0.62      0.64      0.63        25

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=1, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.59      0.52      0.55        25
           1       0.54      0.61      0.57        23

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.30      0.37        23
           1       0.52      0.68      0.59        25

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.48        48
weighted avg       0.49      0.50      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.27      0.35        22
           1       0.56      0.77      0.65        26

    accuracy                           0.54        48
   macro avg       0.53      0.52      0.50        48
weighted avg       0.53      0.54      0.51        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.53      0.48        15
           1       0.77      0.70      0.73        33

    accuracy                           0.65        48
   macro avg       0.61      0.62      0.61        48
weighted avg       0.67      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.42      0.46        19
           1       0.66      0.72      0.69        29

    accuracy                           0.60        48
   macro avg       0.58      0.57      0.57        48
weighted avg       0.59      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.34      0.56      0.43        18
           1       0.58      0.37      0.45        30

    accuracy                           0.44        48
   macro avg       0.46      0.46      0.44        48
weighted avg       0.49      0.44      0.44        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.45      0.42        20
           1       0.56      0.50      0.53        28

    accuracy                           0.48        48
   macro avg       0.48      0.47      0.47        48
weighted avg       0.49      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.52      0.51        23
           1       0.54      0.52      0.53        25

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.59      0.70      0.64        23
           1       0.67      0.56      0.61        25

    accuracy                           0.62        48
   macro avg       0.63      0.63      0.62        48
weighted avg       0.63      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.52      0.54      0.53        24
           1       0.52      0.50      0.51        24

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.45      0.41      0.43        22
           1       0.54      0.58      0.56        26

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=1, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.50      0.36      0.42        22
           1       0.56      0.69      0.62        26

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.53      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.53      0.33      0.41        24
           1       0.52      0.71      0.60        24

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.50        48
weighted avg       0.52      0.52      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=1000, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.37      0.30      0.33        23
           1       0.45      0.52      0.48        25

    accuracy                           0.42        48
   macro avg       0.41      0.41      0.41        48
weighted avg       0.41      0.42      0.41        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.62      0.75      0.68        20
           1       0.79      0.68      0.73        28

    accuracy                           0.71        48
   macro avg       0.71      0.71      0.71        48
weighted avg       0.72      0.71      0.71        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.67      0.09      0.16        22
           1       0.56      0.96      0.70        26

    accuracy                           0.56        48
   macro avg       0.61      0.53      0.43        48
weighted avg       0.61      0.56      0.45        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.37      0.39      0.38        18
           1       0.62      0.60      0.61        30

    accuracy                           0.52        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.61      0.48      0.54        23
           1       0.60      0.72      0.65        25

    accuracy                           0.60        48
   macro avg       0.61      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.42      0.50      0.45        20
           1       0.58      0.50      0.54        28

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.62      0.49        16
           1       0.74      0.53      0.62        32

    accuracy                           0.56        48
   macro avg       0.57      0.58      0.55        48
weighted avg       0.63      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.57      0.52      0.54        25
           1       0.52      0.57      0.54        23

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.32      0.39        19
           1       0.64      0.79      0.71        29

    accuracy                           0.60        48
   macro avg       0.57      0.55      0.55        48
weighted avg       0.58      0.60      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.58      0.48      0.52        23
           1       0.59      0.68      0.63        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=1000, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.46      0.52      0.49        21
           1       0.58      0.52      0.55        27

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.69      0.44      0.54        25
           1       0.56      0.78      0.65        23

    accuracy                           0.60        48
   macro avg       0.62      0.61      0.60        48
weighted avg       0.63      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=1000, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.38      0.44      0.41        18
           1       0.63      0.57      0.60        30

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.54      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.50      0.50        22
           1       0.58      0.58      0.58        26

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.16      0.25        25
           1       0.49      0.87      0.62        23

    accuracy                           0.50        48
   macro avg       0.53      0.51      0.44        48
weighted avg       0.53      0.50      0.43        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.42      0.48        24
           1       0.53      0.67      0.59        24

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.54      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.52      0.50        21
           1       0.60      0.56      0.58        27

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=1, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.50      0.60      0.55        20
           1       0.67      0.57      0.62        28

    accuracy                           0.58        48
   macro avg       0.58      0.59      0.58        48
weighted avg       0.60      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.48      0.53      0.50        19
           1       0.67      0.62      0.64        29

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.57        48
weighted avg       0.59      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=10, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.33      0.39      0.36        18
           1       0.59      0.53      0.56        30

    accuracy                           0.48        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.50      0.48      0.49        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.40      0.24      0.30        25
           1       0.42      0.61      0.50        23

    accuracy                           0.42        48
   macro avg       0.41      0.42      0.40        48
weighted avg       0.41      0.42      0.40        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=10, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.57      0.54      0.55        24
           1       0.56      0.58      0.57        24

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.33      0.04      0.07        26
           1       0.44      0.91      0.60        22

    accuracy                           0.44        48
   macro avg       0.39      0.47      0.33        48
weighted avg       0.38      0.44      0.31        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.53      0.38      0.44        24
           1       0.52      0.67      0.58        24

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.51        48
weighted avg       0.52      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.52      0.51        21
           1       0.62      0.59      0.60        27

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.45      0.46        20
           1       0.62      0.64      0.63        28

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=10, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.31      0.19      0.24        21
           1       0.51      0.67      0.58        27

    accuracy                           0.46        48
   macro avg       0.41      0.43      0.41        48
weighted avg       0.42      0.46      0.43        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.56      0.54        18
           1       0.72      0.70      0.71        30

    accuracy                           0.65        48
   macro avg       0.63      0.63      0.63        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.65      0.48      0.55        23
           1       0.61      0.76      0.68        25

    accuracy                           0.62        48
   macro avg       0.63      0.62      0.61        48
weighted avg       0.63      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=1, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.35      0.50      0.41        16
           1       0.68      0.53      0.60        32

    accuracy                           0.52        48
   macro avg       0.51      0.52      0.50        48
weighted avg       0.57      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.60      0.63        20
           1       0.73      0.79      0.76        28

    accuracy                           0.71        48
   macro avg       0.70      0.69      0.70        48
weighted avg       0.71      0.71      0.71        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.60      0.38      0.46        24
           1       0.55      0.75      0.63        24

    accuracy                           0.56        48
   macro avg       0.57      0.56      0.55        48
weighted avg       0.57      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.67      0.57        18
           1       0.75      0.60      0.67        30

    accuracy                           0.62        48
   macro avg       0.62      0.63      0.62        48
weighted avg       0.66      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.60      0.45      0.51        20
           1       0.67      0.79      0.72        28

    accuracy                           0.65        48
   macro avg       0.63      0.62      0.62        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.48      0.45      0.47        22
           1       0.56      0.58      0.57        26

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.62      0.32      0.42        25
           1       0.51      0.78      0.62        23

    accuracy                           0.54        48
   macro avg       0.56      0.55      0.52        48
weighted avg       0.57      0.54      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.38      0.38      0.38        21
           1       0.52      0.52      0.52        27

    accuracy                           0.46        48
   macro avg       0.45      0.45      0.45        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=1000, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.61      0.38      0.47        29
           1       0.40      0.63      0.49        19

    accuracy                           0.48        48
   macro avg       0.51      0.51      0.48        48
weighted avg       0.53      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.50      0.53        20
           1       0.67      0.71      0.69        28

    accuracy                           0.62        48
   macro avg       0.61      0.61      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=1, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.44      0.55      0.49        20
           1       0.61      0.50      0.55        28

    accuracy                           0.52        48
   macro avg       0.52      0.53      0.52        48
weighted avg       0.54      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.47      0.45        19
           1       0.63      0.59      0.61        29

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.60      0.45      0.51        20
           1       0.67      0.79      0.72        28

    accuracy                           0.65        48
   macro avg       0.63      0.62      0.62        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=1000, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.41      0.45      0.43        20
           1       0.58      0.54      0.56        28

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.38      0.58      0.46        19
           1       0.58      0.38      0.46        29

    accuracy                           0.46        48
   macro avg       0.48      0.48      0.46        48
weighted avg       0.50      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.30      0.37        20
           1       0.61      0.79      0.69        28

    accuracy                           0.58        48
   macro avg       0.56      0.54      0.53        48
weighted avg       0.56      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.47      0.43      0.45        21
           1       0.59      0.63      0.61        27

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.41      0.45        22
           1       0.57      0.65      0.61        26

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.53      0.51        19
           1       0.68      0.66      0.67        29

    accuracy                           0.60        48
   macro avg       0.59      0.59      0.59        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.58      0.54        19
           1       0.69      0.62      0.65        29

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.62      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=0.1, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.72      0.52      0.60        25
           1       0.60      0.78      0.68        23

    accuracy                           0.65        48
   macro avg       0.66      0.65      0.64        48
weighted avg       0.66      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.36      0.38      0.37        21
           1       0.50      0.48      0.49        27

    accuracy                           0.44        48
   macro avg       0.43      0.43      0.43        48
weighted avg       0.44      0.44      0.44        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=0.1, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.57      0.54      0.55        24
           1       0.56      0.58      0.57        24

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.46      0.67      0.55        18
           1       0.73      0.53      0.62        30

    accuracy                           0.58        48
   macro avg       0.59      0.60      0.58        48
weighted avg       0.63      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.41      0.61      0.49        18
           1       0.67      0.47      0.55        30

    accuracy                           0.52        48
   macro avg       0.54      0.54      0.52        48
weighted avg       0.57      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.56      0.48        18
           1       0.67      0.53      0.59        30

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.57      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.67      0.42      0.51        24
           1       0.58      0.79      0.67        24

    accuracy                           0.60        48
   macro avg       0.62      0.60      0.59        48
weighted avg       0.62      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.32      0.40      0.36        20
           1       0.48      0.39      0.43        28

    accuracy                           0.40        48
   macro avg       0.40      0.40      0.39        48
weighted avg       0.41      0.40      0.40        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.55      0.52      0.54        21
           1       0.64      0.67      0.65        27

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.61      0.48      0.54        23
           1       0.60      0.72      0.65        25

    accuracy                           0.60        48
   macro avg       0.61      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.42      0.23      0.29        22
           1       0.53      0.73      0.61        26

    accuracy                           0.50        48
   macro avg       0.47      0.48      0.45        48
weighted avg       0.48      0.50      0.47        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.15      0.19      0.17        16
           1       0.54      0.47      0.50        32

    accuracy                           0.38        48
   macro avg       0.34      0.33      0.33        48
weighted avg       0.41      0.38      0.39        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.48      0.52        23
           1       0.59      0.68      0.63        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.46      0.60      0.52        20
           1       0.64      0.50      0.56        28

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.56      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.43      0.45      0.44        22
           1       0.52      0.50      0.51        26

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.62      0.59      0.60        22
           1       0.67      0.69      0.68        26

    accuracy                           0.65        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.64      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.43      0.50        23
           1       0.58      0.72      0.64        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.57        48
weighted avg       0.58      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.38      0.43        21
           1       0.59      0.70      0.64        27

    accuracy                           0.56        48
   macro avg       0.55      0.54      0.54        48
weighted avg       0.55      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.42      0.23      0.29        22
           1       0.53      0.73      0.61        26

    accuracy                           0.50        48
   macro avg       0.47      0.48      0.45        48
weighted avg       0.48      0.50      0.47        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.45      0.48        22
           1       0.57      0.62      0.59        26

    accuracy                           0.54        48
   macro avg       0.54      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=0.1, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.52      0.59      0.55        22
           1       0.61      0.54      0.57        26

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.46      0.65      0.54        17
           1       0.75      0.58      0.65        31

    accuracy                           0.60        48
   macro avg       0.60      0.61      0.60        48
weighted avg       0.65      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.42      0.47        26
           1       0.44      0.55      0.49        22

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.49      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.30      0.14      0.19        21
           1       0.53      0.74      0.62        27

    accuracy                           0.48        48
   macro avg       0.41      0.44      0.40        48
weighted avg       0.43      0.48      0.43        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.24      0.42      0.30        12
           1       0.74      0.56      0.63        36

    accuracy                           0.52        48
   macro avg       0.49      0.49      0.47        48
weighted avg       0.62      0.52      0.55        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.53      0.50      0.52        16
           1       0.76      0.78      0.77        32

    accuracy                           0.69        48
   macro avg       0.65      0.64      0.64        48
weighted avg       0.68      0.69      0.68        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.55      0.51        22
           1       0.57      0.50      0.53        26

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.33      0.53      0.41        17
           1       0.62      0.42      0.50        31

    accuracy                           0.46        48
   macro avg       0.48      0.47      0.45        48
weighted avg       0.52      0.46      0.47        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.50      0.37      0.42        19
           1       0.65      0.76      0.70        29

    accuracy                           0.60        48
   macro avg       0.57      0.56      0.56        48
weighted avg       0.59      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.35      0.41        17
           1       0.69      0.81      0.75        31

    accuracy                           0.65        48
   macro avg       0.60      0.58      0.58        48
weighted avg       0.63      0.65      0.63        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.21      0.31        28
           1       0.41      0.75      0.53        20

    accuracy                           0.44        48
   macro avg       0.48      0.48      0.42        48
weighted avg       0.49      0.44      0.40        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.61      0.61      0.61        23
           1       0.64      0.64      0.64        25

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.25      0.25      0.25        20
           1       0.46      0.46      0.46        28

    accuracy                           0.38        48
   macro avg       0.36      0.36      0.36        48
weighted avg       0.38      0.38      0.38        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.32      0.47      0.38        15
           1       0.69      0.55      0.61        33

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.49        48
weighted avg       0.58      0.52      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=1, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.70      0.26      0.38        27
           1       0.47      0.86      0.61        21

    accuracy                           0.52        48
   macro avg       0.59      0.56      0.49        48
weighted avg       0.60      0.52      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.44      0.36      0.40        22
           1       0.53      0.62      0.57        26

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.49      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.73      0.35      0.47        23
           1       0.59      0.88      0.71        25

    accuracy                           0.62        48
   macro avg       0.66      0.61      0.59        48
weighted avg       0.66      0.62      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.52      0.55        21
           1       0.66      0.70      0.68        27

    accuracy                           0.62        48
   macro avg       0.62      0.61      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.1)
              precision    recall  f1-score   support

           0       0.42      0.50      0.45        20
           1       0.58      0.50      0.54        28

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.35      0.50      0.41        14
           1       0.75      0.62      0.68        34

    accuracy                           0.58        48
   macro avg       0.55      0.56      0.54        48
weighted avg       0.63      0.58      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=10, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.32      0.53      0.40        15
           1       0.70      0.48      0.57        33

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.49        48
weighted avg       0.58      0.50      0.52        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.52      0.52      0.52        25
           1       0.48      0.48      0.48        23

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.33      0.38        21
           1       0.56      0.67      0.61        27

    accuracy                           0.52        48
   macro avg       0.50      0.50      0.49        48
weighted avg       0.51      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.1)
              precision    recall  f1-score   support

           0       0.58      0.48      0.52        23
           1       0.59      0.68      0.63        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.50      0.52      0.51        21
           1       0.62      0.59      0.60        27

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       1.00      0.17      0.29        24
           1       0.55      1.00      0.71        24

    accuracy                           0.58        48
   macro avg       0.77      0.58      0.50        48
weighted avg       0.77      0.58      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.62      0.60        21
           1       0.69      0.67      0.68        27

    accuracy                           0.65        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.60      0.38      0.46        24
           1       0.55      0.75      0.63        24

    accuracy                           0.56        48
   macro avg       0.57      0.56      0.55        48
weighted avg       0.57      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.48      0.59      0.53        22
           1       0.57      0.46      0.51        26

    accuracy                           0.52        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.37      0.39        19
           1       0.61      0.66      0.63        29

    accuracy                           0.54        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.53      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=1, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.48      0.86      0.62        14
           1       0.91      0.62      0.74        34

    accuracy                           0.69        48
   macro avg       0.70      0.74      0.68        48
weighted avg       0.79      0.69      0.70        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.70      0.25      0.37        28
           1       0.45      0.85      0.59        20

    accuracy                           0.50        48
   macro avg       0.57      0.55      0.48        48
weighted avg       0.59      0.50      0.46        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.32      0.67      0.43        12
           1       0.83      0.53      0.64        36

    accuracy                           0.56        48
   macro avg       0.57      0.60      0.54        48
weighted avg       0.70      0.56      0.59        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.58      0.56        19
           1       0.71      0.69      0.70        29

    accuracy                           0.65        48
   macro avg       0.63      0.63      0.63        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.14      0.21        21
           1       0.56      0.85      0.68        27

    accuracy                           0.54        48
   macro avg       0.49      0.50      0.45        48
weighted avg       0.50      0.54      0.47        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.48      0.63      0.55        19
           1       0.70      0.55      0.62        29

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.61      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.53      0.40      0.46        20
           1       0.64      0.75      0.69        28

    accuracy                           0.60        48
   macro avg       0.58      0.57      0.57        48
weighted avg       0.59      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.35      0.37      0.36        19
           1       0.57      0.55      0.56        29

    accuracy                           0.48        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.33      0.30      0.32        20
           1       0.53      0.57      0.55        28

    accuracy                           0.46        48
   macro avg       0.43      0.44      0.43        48
weighted avg       0.45      0.46      0.45        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.53      0.47        17
           1       0.70      0.61      0.66        31

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.61      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=1, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.53      0.36      0.43        25
           1       0.48      0.65      0.56        23

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.49        48
weighted avg       0.51      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.44      0.19      0.27        21
           1       0.56      0.81      0.67        27

    accuracy                           0.54        48
   macro avg       0.50      0.50      0.47        48
weighted avg       0.51      0.54      0.49        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.36      0.43        25
           1       0.48      0.65      0.56        23

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.49        48
weighted avg       0.51      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.43      0.43        23
           1       0.48      0.48      0.48        25

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.57      0.55        21
           1       0.64      0.59      0.62        27

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.25      0.29        20
           1       0.55      0.64      0.59        28

    accuracy                           0.48        48
   macro avg       0.44      0.45      0.44        48
weighted avg       0.46      0.48      0.46        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.50      0.44        16
           1       0.71      0.62      0.67        32

    accuracy                           0.58        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.61      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.37      0.39        19
           1       0.61      0.66      0.63        29

    accuracy                           0.54        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.53      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.70      0.32      0.44        22
           1       0.61      0.88      0.72        26

    accuracy                           0.62        48
   macro avg       0.65      0.60      0.58        48
weighted avg       0.65      0.62      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.58      0.61        19
           1       0.74      0.79      0.77        29

    accuracy                           0.71        48
   macro avg       0.69      0.69      0.69        48
weighted avg       0.70      0.71      0.71        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=10, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.62      0.75      0.68        24
           1       0.68      0.54      0.60        24

    accuracy                           0.65        48
   macro avg       0.65      0.65      0.64        48
weighted avg       0.65      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.45      0.45        20
           1       0.61      0.61      0.61        28

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.55      0.54        20
           1       0.67      0.64      0.65        28

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.47      0.35      0.40        23
           1       0.52      0.64      0.57        25

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.49      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.52      0.63      0.57        19
           1       0.72      0.62      0.67        29

    accuracy                           0.62        48
   macro avg       0.62      0.63      0.62        48
weighted avg       0.64      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.35      0.57      0.43        14
           1       0.76      0.56      0.64        34

    accuracy                           0.56        48
   macro avg       0.55      0.57      0.54        48
weighted avg       0.64      0.56      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.56      0.45        18
           1       0.64      0.47      0.54        30

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.54      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.56      0.42      0.48        24
           1       0.53      0.67      0.59        24

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.54      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.50      0.52      0.51        23
           1       0.54      0.52      0.53        25

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.61      0.56      0.58        25
           1       0.56      0.61      0.58        23

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=0.1, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.54      0.35      0.42        20
           1       0.63      0.79      0.70        28

    accuracy                           0.60        48
   macro avg       0.58      0.57      0.56        48
weighted avg       0.59      0.60      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.75      0.20      0.32        30
           1       0.40      0.89      0.55        18

    accuracy                           0.46        48
   macro avg       0.57      0.54      0.43        48
weighted avg       0.62      0.46      0.40        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.37      0.42        19
           1       0.65      0.76      0.70        29

    accuracy                           0.60        48
   macro avg       0.57      0.56      0.56        48
weighted avg       0.59      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.57      0.15      0.24        27
           1       0.44      0.86      0.58        21

    accuracy                           0.46        48
   macro avg       0.51      0.50      0.41        48
weighted avg       0.51      0.46      0.39        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.45      0.43        20
           1       0.58      0.54      0.56        28

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=0.1, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.56      0.61      0.58        23
           1       0.61      0.56      0.58        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.41      0.47      0.44        19
           1       0.62      0.55      0.58        29

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.53      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.38      0.39        21
           1       0.54      0.56      0.55        27

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.67      0.09      0.16        22
           1       0.56      0.96      0.70        26

    accuracy                           0.56        48
   macro avg       0.61      0.53      0.43        48
weighted avg       0.61      0.56      0.45        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.52      0.65      0.58        23
           1       0.58      0.44      0.50        25

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=1, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.41      0.47      0.44        19
           1       0.62      0.55      0.58        29

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.53      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=0.1, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.45      0.47      0.46        19
           1       0.64      0.62      0.63        29

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.56      0.36      0.44        25
           1       0.50      0.70      0.58        23

    accuracy                           0.52        48
   macro avg       0.53      0.53      0.51        48
weighted avg       0.53      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.57      0.62      0.59        21
           1       0.68      0.63      0.65        27

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.47      0.47      0.47        19
           1       0.66      0.66      0.66        29

    accuracy                           0.58        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.40      0.48        25
           1       0.52      0.70      0.59        23

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.53        48
weighted avg       0.55      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=1, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.38      0.40      0.39        20
           1       0.56      0.54      0.55        28

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=10, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.44      0.61      0.51        18
           1       0.70      0.53      0.60        30

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.60      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.32      0.40      0.35        15
           1       0.69      0.61      0.65        33

    accuracy                           0.54        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.57      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=1, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.50      0.57      0.53        21
           1       0.62      0.56      0.59        27

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=10, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.43      0.43      0.43        21
           1       0.56      0.56      0.56        27

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.42      0.72      0.53        18
           1       0.71      0.40      0.51        30

    accuracy                           0.52        48
   macro avg       0.56      0.56      0.52        48
weighted avg       0.60      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.32      0.41        25
           1       0.50      0.74      0.60        23

    accuracy                           0.52        48
   macro avg       0.54      0.53      0.50        48
weighted avg       0.54      0.52      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.52      0.41      0.46        27
           1       0.41      0.52      0.46        21

    accuracy                           0.46        48
   macro avg       0.47      0.47      0.46        48
weighted avg       0.47      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=100, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.56      0.67      0.61        21
           1       0.70      0.59      0.64        27

    accuracy                           0.62        48
   macro avg       0.63      0.63      0.62        48
weighted avg       0.64      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.55      0.57      0.56        21
           1       0.65      0.63      0.64        27

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.62      0.35      0.44        23
           1       0.57      0.80      0.67        25

    accuracy                           0.58        48
   macro avg       0.59      0.57      0.56        48
weighted avg       0.59      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=10, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.60      0.48      0.53        25
           1       0.54      0.65      0.59        23

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.40      0.38      0.39        21
           1       0.54      0.56      0.55        27

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.72      0.48      0.58        27
           1       0.53      0.76      0.63        21

    accuracy                           0.60        48
   macro avg       0.63      0.62      0.60        48
weighted avg       0.64      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.17      0.15      0.16        13
           1       0.69      0.71      0.70        35

    accuracy                           0.56        48
   macro avg       0.43      0.43      0.43        48
weighted avg       0.55      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.61      0.50      0.55        22
           1       0.63      0.73      0.68        26

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.48      0.45        23
           1       0.45      0.40      0.43        25

    accuracy                           0.44        48
   macro avg       0.44      0.44      0.44        48
weighted avg       0.44      0.44      0.44        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=1000, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.59      0.68      0.63        25
           1       0.58      0.48      0.52        23

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.38      0.40        21
           1       0.55      0.59      0.57        27

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.49      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.71      0.58      0.64        26
           1       0.59      0.73      0.65        22

    accuracy                           0.65        48
   macro avg       0.65      0.65      0.65        48
weighted avg       0.66      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.42      0.52        19
           1       0.69      0.86      0.77        29

    accuracy                           0.69        48
   macro avg       0.68      0.64      0.64        48
weighted avg       0.68      0.69      0.67        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.47      0.33      0.39        21
           1       0.58      0.70      0.63        27

    accuracy                           0.54        48
   macro avg       0.52      0.52      0.51        48
weighted avg       0.53      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.52      0.67      0.59        18
           1       0.76      0.63      0.69        30

    accuracy                           0.65        48
   macro avg       0.64      0.65      0.64        48
weighted avg       0.67      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.43      0.40        21
           1       0.50      0.44      0.47        27

    accuracy                           0.44        48
   macro avg       0.44      0.44      0.44        48
weighted avg       0.45      0.44      0.44        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.67      0.35      0.46        23
           1       0.58      0.84      0.69        25

    accuracy                           0.60        48
   macro avg       0.62      0.59      0.57        48
weighted avg       0.62      0.60      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.1)
              precision    recall  f1-score   support

           0       0.64      0.36      0.46        25
           1       0.53      0.78      0.63        23

    accuracy                           0.56        48
   macro avg       0.59      0.57      0.55        48
weighted avg       0.59      0.56      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.43      0.46        21
           1       0.60      0.67      0.63        27

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.47      0.42      0.44        19
           1       0.65      0.69      0.67        29

    accuracy                           0.58        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.44      0.38      0.41        21
           1       0.57      0.63      0.60        27

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.51      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.40      0.44      0.42        18
           1       0.64      0.60      0.62        30

    accuracy                           0.54        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.55      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.47      0.53      0.50        17
           1       0.72      0.68      0.70        31

    accuracy                           0.62        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.64      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.37      0.38        19
           1       0.60      0.62      0.61        29

    accuracy                           0.52        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.42      0.56      0.48        18
           1       0.67      0.53      0.59        30

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.57      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.52      0.68      0.59        19
           1       0.74      0.59      0.65        29

    accuracy                           0.62        48
   macro avg       0.63      0.64      0.62        48
weighted avg       0.65      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.48      0.49        23
           1       0.54      0.56      0.55        25

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.44      0.38      0.41        21
           1       0.57      0.63      0.60        27

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.51      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.44      0.35      0.39        20
           1       0.59      0.68      0.63        28

    accuracy                           0.54        48
   macro avg       0.52      0.51      0.51        48
weighted avg       0.53      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.47      0.29      0.36        24
           1       0.48      0.67      0.56        24

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.46        48
weighted avg       0.48      0.48      0.46        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.24      0.29      0.26        17
           1       0.56      0.48      0.52        31

    accuracy                           0.42        48
   macro avg       0.40      0.39      0.39        48
weighted avg       0.44      0.42      0.43        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.41      0.43      0.42        21
           1       0.54      0.52      0.53        27

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.44      0.30      0.36        23
           1       0.50      0.64      0.56        25

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.46        48
weighted avg       0.47      0.48      0.46        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.32      0.37      0.34        19
           1       0.54      0.48      0.51        29

    accuracy                           0.44        48
   macro avg       0.43      0.43      0.43        48
weighted avg       0.45      0.44      0.44        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.36      0.44      0.40        18
           1       0.62      0.53      0.57        30

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.52      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.46      0.55      0.50        20
           1       0.62      0.54      0.58        28

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.56      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.63      0.50      0.56        24
           1       0.59      0.71      0.64        24

    accuracy                           0.60        48
   macro avg       0.61      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=10, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.47      0.36      0.41        22
           1       0.55      0.65      0.60        26

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.51      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.37      0.33      0.35        21
           1       0.52      0.56      0.54        27

    accuracy                           0.46        48
   macro avg       0.44      0.44      0.44        48
weighted avg       0.45      0.46      0.45        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.58      0.61      0.60        23
           1       0.62      0.60      0.61        25

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.53      0.51        19
           1       0.68      0.66      0.67        29

    accuracy                           0.60        48
   macro avg       0.59      0.59      0.59        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.67      0.53      0.59        19
           1       0.73      0.83      0.77        29

    accuracy                           0.71        48
   macro avg       0.70      0.68      0.68        48
weighted avg       0.70      0.71      0.70        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.50      0.37      0.42        19
           1       0.65      0.76      0.70        29

    accuracy                           0.60        48
   macro avg       0.57      0.56      0.56        48
weighted avg       0.59      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.45      0.48      0.47        21
           1       0.58      0.56      0.57        27

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.33      0.09      0.14        22
           1       0.52      0.85      0.65        26

    accuracy                           0.50        48
   macro avg       0.43      0.47      0.39        48
weighted avg       0.44      0.50      0.42        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.62      0.40      0.49        25
           1       0.53      0.74      0.62        23

    accuracy                           0.56        48
   macro avg       0.58      0.57      0.55        48
weighted avg       0.58      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.55      0.58      0.56        19
           1       0.71      0.69      0.70        29

    accuracy                           0.65        48
   macro avg       0.63      0.63      0.63        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.50      0.32      0.39        22
           1       0.56      0.73      0.63        26

    accuracy                           0.54        48
   macro avg       0.53      0.52      0.51        48
weighted avg       0.53      0.54      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.45      0.49        20
           1       0.65      0.71      0.68        28

    accuracy                           0.60        48
   macro avg       0.59      0.58      0.58        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=10, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.31      0.42      0.36        19
           1       0.50      0.38      0.43        29

    accuracy                           0.40        48
   macro avg       0.40      0.40      0.39        48
weighted avg       0.42      0.40      0.40        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=100, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.46      0.52      0.49        21
           1       0.58      0.52      0.55        27

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.58      0.33      0.42        21
           1       0.61      0.81      0.70        27

    accuracy                           0.60        48
   macro avg       0.60      0.57      0.56        48
weighted avg       0.60      0.60      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.1)
              precision    recall  f1-score   support

           0       0.45      0.43      0.44        21
           1       0.57      0.59      0.58        27

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.52      0.56        23
           1       0.61      0.68      0.64        25

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.71      0.55        17
           1       0.76      0.52      0.62        31

    accuracy                           0.58        48
   macro avg       0.60      0.61      0.58        48
weighted avg       0.65      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.32      0.40        22
           1       0.57      0.77      0.66        26

    accuracy                           0.56        48
   macro avg       0.55      0.54      0.53        48
weighted avg       0.56      0.56      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.50      0.44        18
           1       0.64      0.53      0.58        30

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.51        48
weighted avg       0.55      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=10, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.56      0.50      0.53        20
           1       0.67      0.71      0.69        28

    accuracy                           0.62        48
   macro avg       0.61      0.61      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.58      0.50      0.54        22
           1       0.62      0.69      0.65        26

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.55      0.58      0.56        19
           1       0.71      0.69      0.70        29

    accuracy                           0.65        48
   macro avg       0.63      0.63      0.63        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.58      0.58        19
           1       0.72      0.72      0.72        29

    accuracy                           0.67        48
   macro avg       0.65      0.65      0.65        48
weighted avg       0.67      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.44      0.33      0.38        21
           1       0.56      0.67      0.61        27

    accuracy                           0.52        48
   macro avg       0.50      0.50      0.49        48
weighted avg       0.51      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.50      0.60      0.55        20
           1       0.67      0.57      0.62        28

    accuracy                           0.58        48
   macro avg       0.58      0.59      0.58        48
weighted avg       0.60      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.36      0.44      0.40        18
           1       0.62      0.53      0.57        30

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.52      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.67      0.17      0.27        24
           1       0.52      0.92      0.67        24

    accuracy                           0.54        48
   macro avg       0.60      0.54      0.47        48
weighted avg       0.60      0.54      0.47        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.47      0.33      0.39        21
           1       0.58      0.70      0.63        27

    accuracy                           0.54        48
   macro avg       0.52      0.52      0.51        48
weighted avg       0.53      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.33      0.36        18
           1       0.64      0.70      0.67        30

    accuracy                           0.56        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.55      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.48      0.49        21
           1       0.61      0.63      0.62        27

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.38      0.41        21
           1       0.57      0.63      0.60        27

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.51      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.68      0.60      0.64        25
           1       0.62      0.70      0.65        23

    accuracy                           0.65        48
   macro avg       0.65      0.65      0.65        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.65      0.60        23
           1       0.62      0.52      0.57        25

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.86      0.46      0.60        26
           1       0.59      0.91      0.71        22

    accuracy                           0.67        48
   macro avg       0.72      0.69      0.66        48
weighted avg       0.73      0.67      0.65        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.60      0.23      0.33        26
           1       0.47      0.82      0.60        22

    accuracy                           0.50        48
   macro avg       0.54      0.52      0.47        48
weighted avg       0.54      0.50      0.46        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.67      0.29      0.40        21
           1       0.62      0.89      0.73        27

    accuracy                           0.62        48
   macro avg       0.64      0.59      0.56        48
weighted avg       0.64      0.62      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.30      0.39        20
           1       0.62      0.82      0.71        28

    accuracy                           0.60        48
   macro avg       0.58      0.56      0.55        48
weighted avg       0.59      0.60      0.57        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.59      0.43        17
           1       0.61      0.35      0.45        31

    accuracy                           0.44        48
   macro avg       0.47      0.47      0.44        48
weighted avg       0.51      0.44      0.44        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.64      0.39      0.48        18
           1       0.70      0.87      0.78        30

    accuracy                           0.69        48
   macro avg       0.67      0.63      0.63        48
weighted avg       0.68      0.69      0.67        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.44      0.38      0.41        21
           1       0.57      0.63      0.60        27

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.51      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.67      0.59        24
           1       0.56      0.42      0.48        24

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.54      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.35      0.30      0.32        20
           1       0.55      0.61      0.58        28

    accuracy                           0.48        48
   macro avg       0.45      0.45      0.45        48
weighted avg       0.47      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.28      0.50      0.36        16
           1       0.58      0.34      0.43        32

    accuracy                           0.40        48
   macro avg       0.43      0.42      0.39        48
weighted avg       0.48      0.40      0.41        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.60      0.60      0.60        20
           1       0.71      0.71      0.71        28

    accuracy                           0.67        48
   macro avg       0.66      0.66      0.66        48
weighted avg       0.67      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.37      0.33      0.35        21
           1       0.52      0.56      0.54        27

    accuracy                           0.46        48
   macro avg       0.44      0.44      0.44        48
weighted avg       0.45      0.46      0.45        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.48      0.72      0.58        18
           1       0.76      0.53      0.63        30

    accuracy                           0.60        48
   macro avg       0.62      0.63      0.60        48
weighted avg       0.66      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.57      0.50        21
           1       0.57      0.44      0.50        27

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.52      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.73      0.67      0.70        24
           1       0.69      0.75      0.72        24

    accuracy                           0.71        48
   macro avg       0.71      0.71      0.71        48
weighted avg       0.71      0.71      0.71        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=1, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.50      0.50      0.50        22
           1       0.58      0.58      0.58        26

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.33      0.19      0.24        26
           1       0.36      0.55      0.44        22

    accuracy                           0.35        48
   macro avg       0.35      0.37      0.34        48
weighted avg       0.35      0.35      0.33        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.56      0.39      0.46        23
           1       0.56      0.72      0.63        25

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.55        48
weighted avg       0.56      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.70      0.62        20
           1       0.74      0.61      0.67        28

    accuracy                           0.65        48
   macro avg       0.65      0.65      0.64        48
weighted avg       0.66      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.67      0.30      0.41        20
           1       0.64      0.89      0.75        28

    accuracy                           0.65        48
   macro avg       0.65      0.60      0.58        48
weighted avg       0.65      0.65      0.61        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.43      0.48        23
           1       0.55      0.64      0.59        25

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.50      0.50      0.50        22
           1       0.58      0.58      0.58        26

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.60      0.59        20
           1       0.70      0.68      0.69        28

    accuracy                           0.65        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.46      0.27      0.34        22
           1       0.54      0.73      0.62        26

    accuracy                           0.52        48
   macro avg       0.50      0.50      0.48        48
weighted avg       0.51      0.52      0.49        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=1000, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.67      0.56      0.61        25
           1       0.59      0.70      0.64        23

    accuracy                           0.62        48
   macro avg       0.63      0.63      0.62        48
weighted avg       0.63      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.62      0.40      0.49        25
           1       0.53      0.74      0.62        23

    accuracy                           0.56        48
   macro avg       0.58      0.57      0.55        48
weighted avg       0.58      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.27      0.16      0.20        19
           1       0.57      0.72      0.64        29

    accuracy                           0.50        48
   macro avg       0.42      0.44      0.42        48
weighted avg       0.45      0.50      0.46        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.35      0.42      0.38        19
           1       0.56      0.48      0.52        29

    accuracy                           0.46        48
   macro avg       0.45      0.45      0.45        48
weighted avg       0.48      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.53      0.50        19
           1       0.67      0.62      0.64        29

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.57        48
weighted avg       0.59      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.25      0.30        24
           1       0.44      0.58      0.50        24

    accuracy                           0.42        48
   macro avg       0.41      0.42      0.40        48
weighted avg       0.41      0.42      0.40        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=1, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.71      0.37      0.49        27
           1       0.50      0.81      0.62        21

    accuracy                           0.56        48
   macro avg       0.61      0.59      0.55        48
weighted avg       0.62      0.56      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.1)
              precision    recall  f1-score   support

           0       0.65      0.56      0.60        27
           1       0.52      0.62      0.57        21

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.63      0.52      0.57        23
           1       0.62      0.72      0.67        25

    accuracy                           0.62        48
   macro avg       0.63      0.62      0.62        48
weighted avg       0.63      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.59      0.59        17
           1       0.77      0.77      0.77        31

    accuracy                           0.71        48
   macro avg       0.68      0.68      0.68        48
weighted avg       0.71      0.71      0.71        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=1000, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.28      0.29      0.29        17
           1       0.60      0.58      0.59        31

    accuracy                           0.48        48
   macro avg       0.44      0.44      0.44        48
weighted avg       0.49      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.62      0.23      0.33        22
           1       0.57      0.88      0.70        26

    accuracy                           0.58        48
   macro avg       0.60      0.56      0.52        48
weighted avg       0.60      0.58      0.53        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.60      0.21      0.32        28
           1       0.42      0.80      0.55        20

    accuracy                           0.46        48
   macro avg       0.51      0.51      0.43        48
weighted avg       0.53      0.46      0.41        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.64      0.56        22
           1       0.60      0.46      0.52        26

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.48      0.48        21
           1       0.59      0.59      0.59        27

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.54      0.57        24
           1       0.58      0.62      0.60        24

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.36      0.42      0.39        19
           1       0.58      0.52      0.55        29

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.49      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'linear'}
best estimator = SVC(C=10, gamma=1, kernel='linear')
              precision    recall  f1-score   support

           0       0.50      0.38      0.43        21
           1       0.59      0.70      0.64        27

    accuracy                           0.56        48
   macro avg       0.55      0.54      0.54        48
weighted avg       0.55      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.53      0.47      0.50        19
           1       0.68      0.72      0.70        29

    accuracy                           0.62        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.34      0.45      0.39        22
           1       0.37      0.27      0.31        26

    accuracy                           0.35        48
   macro avg       0.36      0.36      0.35        48
weighted avg       0.36      0.35      0.35        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.60      0.82      0.69        22
           1       0.78      0.54      0.64        26

    accuracy                           0.67        48
   macro avg       0.69      0.68      0.66        48
weighted avg       0.70      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.55      0.60      0.57        20
           1       0.69      0.64      0.67        28

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.48      0.45        21
           1       0.56      0.52      0.54        27

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.51      0.50      0.50        48

