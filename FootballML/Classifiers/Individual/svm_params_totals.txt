USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.63      0.55      0.59        22
           1       0.66      0.73      0.69        26

    accuracy                           0.65        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.52      0.51        23
           1       0.54      0.52      0.53        25

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.46      0.50        24
           1       0.54      0.62      0.58        24

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.70      0.67      0.68        21
           1       0.75      0.78      0.76        27

    accuracy                           0.73        48
   macro avg       0.72      0.72      0.72        48
weighted avg       0.73      0.73      0.73        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.37      0.39      0.38        18
           1       0.62      0.60      0.61        30

    accuracy                           0.52        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.53      0.50      0.51        20
           1       0.66      0.68      0.67        28

    accuracy                           0.60        48
   macro avg       0.59      0.59      0.59        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.50      0.49        22
           1       0.56      0.54      0.55        26

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.26      0.54      0.35        13
           1       0.71      0.43      0.54        35

    accuracy                           0.46        48
   macro avg       0.49      0.48      0.44        48
weighted avg       0.59      0.46      0.49        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.48      0.45      0.47        22
           1       0.56      0.58      0.57        26

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.27      0.20      0.23        20
           1       0.52      0.61      0.56        28

    accuracy                           0.44        48
   macro avg       0.39      0.40      0.39        48
weighted avg       0.41      0.44      0.42        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.36      0.20      0.26        20
           1       0.57      0.75      0.65        28

    accuracy                           0.52        48
   macro avg       0.47      0.47      0.45        48
weighted avg       0.48      0.52      0.48        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.75      0.41      0.53        22
           1       0.64      0.88      0.74        26

    accuracy                           0.67        48
   macro avg       0.69      0.65      0.64        48
weighted avg       0.69      0.67      0.64        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.35      0.37      0.36        19
           1       0.57      0.55      0.56        29

    accuracy                           0.48        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.53      0.42      0.47        24
           1       0.52      0.62      0.57        24

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.40      0.71      0.51        17
           1       0.72      0.42      0.53        31

    accuracy                           0.52        48
   macro avg       0.56      0.56      0.52        48
weighted avg       0.61      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.53      0.40      0.46        20
           1       0.64      0.75      0.69        28

    accuracy                           0.60        48
   macro avg       0.58      0.57      0.57        48
weighted avg       0.59      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.67      0.43      0.53        23
           1       0.61      0.80      0.69        25

    accuracy                           0.62        48
   macro avg       0.64      0.62      0.61        48
weighted avg       0.64      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.52      0.44      0.48        25
           1       0.48      0.57      0.52        23

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.71      0.63      0.67        19
           1       0.77      0.83      0.80        29

    accuracy                           0.75        48
   macro avg       0.74      0.73      0.73        48
weighted avg       0.75      0.75      0.75        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.57      0.30      0.39        27
           1       0.44      0.71      0.55        21

    accuracy                           0.48        48
   macro avg       0.51      0.51      0.47        48
weighted avg       0.51      0.48      0.46        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.65      0.46      0.54        24
           1       0.58      0.75      0.65        24

    accuracy                           0.60        48
   macro avg       0.61      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.36      0.73      0.48        11
           1       0.88      0.62      0.73        37

    accuracy                           0.65        48
   macro avg       0.62      0.67      0.61        48
weighted avg       0.77      0.65      0.67        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.54      0.60      0.57        25
           1       0.50      0.43      0.47        23

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.38      0.43        24
           1       0.50      0.62      0.56        24

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.49        48
weighted avg       0.50      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.56      0.53        18
           1       0.71      0.67      0.69        30

    accuracy                           0.62        48
   macro avg       0.61      0.61      0.61        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.52      0.58        25
           1       0.57      0.70      0.63        23

    accuracy                           0.60        48
   macro avg       0.61      0.61      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.25      0.33      0.29        15
           1       0.64      0.55      0.59        33

    accuracy                           0.48        48
   macro avg       0.45      0.44      0.44        48
weighted avg       0.52      0.48      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.45      0.50        22
           1       0.60      0.69      0.64        26

    accuracy                           0.58        48
   macro avg       0.58      0.57      0.57        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.15      0.25        26
           1       0.48      0.91      0.62        22

    accuracy                           0.50        48
   macro avg       0.57      0.53      0.44        48
weighted avg       0.58      0.50      0.42        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.61      0.64      0.62        22
           1       0.68      0.65      0.67        26

    accuracy                           0.65        48
   macro avg       0.64      0.65      0.64        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.48      0.48      0.48        23
           1       0.52      0.52      0.52        25

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.72      0.54        18
           1       0.72      0.43      0.54        30

    accuracy                           0.54        48
   macro avg       0.58      0.58      0.54        48
weighted avg       0.61      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.50      0.48        16
           1       0.74      0.72      0.73        32

    accuracy                           0.65        48
   macro avg       0.61      0.61      0.61        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.61      0.56        23
           1       0.57      0.48      0.52        25

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.37      0.44        27
           1       0.43      0.62      0.51        21

    accuracy                           0.48        48
   macro avg       0.49      0.49      0.48        48
weighted avg       0.50      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.1)
              precision    recall  f1-score   support

           0       0.50      0.48      0.49        21
           1       0.61      0.63      0.62        27

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.45      0.62      0.53        16
           1       0.77      0.62      0.69        32

    accuracy                           0.62        48
   macro avg       0.61      0.62      0.61        48
weighted avg       0.66      0.62      0.64        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.52      0.52        21
           1       0.63      0.63      0.63        27

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.58      0.67      0.62        21
           1       0.71      0.63      0.67        27

    accuracy                           0.65        48
   macro avg       0.65      0.65      0.64        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.88      0.28      0.42        25
           1       0.55      0.96      0.70        23

    accuracy                           0.60        48
   macro avg       0.71      0.62      0.56        48
weighted avg       0.72      0.60      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.56      0.24      0.33        21
           1       0.59      0.85      0.70        27

    accuracy                           0.58        48
   macro avg       0.57      0.54      0.52        48
weighted avg       0.57      0.58      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.60      0.53        20
           1       0.65      0.54      0.59        28

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.58      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.65      0.60        20
           1       0.72      0.64      0.68        28

    accuracy                           0.65        48
   macro avg       0.64      0.65      0.64        48
weighted avg       0.66      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.57      0.57        21
           1       0.67      0.67      0.67        27

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.33      0.40        21
           1       0.59      0.74      0.66        27

    accuracy                           0.56        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.55      0.56      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.73      0.44      0.55        25
           1       0.58      0.83      0.68        23

    accuracy                           0.62        48
   macro avg       0.65      0.63      0.61        48
weighted avg       0.66      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.35      0.42        26
           1       0.45      0.64      0.53        22

    accuracy                           0.48        48
   macro avg       0.49      0.49      0.47        48
weighted avg       0.49      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.43      0.53      0.48        19
           1       0.64      0.55      0.59        29

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.56      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.26      0.35        23
           1       0.54      0.80      0.65        25

    accuracy                           0.54        48
   macro avg       0.54      0.53      0.50        48
weighted avg       0.54      0.54      0.51        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.50      0.50        22
           1       0.58      0.58      0.58        26

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.42      0.53      0.47        19
           1       0.62      0.52      0.57        29

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.54      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.45      0.51        22
           1       0.61      0.73      0.67        26

    accuracy                           0.60        48
   macro avg       0.60      0.59      0.59        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.45      0.48        22
           1       0.57      0.62      0.59        26

    accuracy                           0.54        48
   macro avg       0.54      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.50      0.38      0.43        21
           1       0.59      0.70      0.64        27

    accuracy                           0.56        48
   macro avg       0.55      0.54      0.54        48
weighted avg       0.55      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.46      0.60      0.52        20
           1       0.64      0.50      0.56        28

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.56      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.47      0.45        19
           1       0.63      0.59      0.61        29

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.54      0.32      0.40        22
           1       0.57      0.77      0.66        26

    accuracy                           0.56        48
   macro avg       0.55      0.54      0.53        48
weighted avg       0.56      0.56      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.46      0.32      0.37        19
           1       0.63      0.76      0.69        29

    accuracy                           0.58        48
   macro avg       0.55      0.54      0.53        48
weighted avg       0.56      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.29      0.36        21
           1       0.58      0.78      0.67        27

    accuracy                           0.56        48
   macro avg       0.54      0.53      0.52        48
weighted avg       0.55      0.56      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.42      0.40        19
           1       0.59      0.55      0.57        29

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.53      0.45      0.49        22
           1       0.59      0.65      0.62        26

    accuracy                           0.56        48
   macro avg       0.56      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.77      0.47        13
           1       0.83      0.43      0.57        35

    accuracy                           0.52        48
   macro avg       0.58      0.60      0.52        48
weighted avg       0.70      0.52      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.45      0.72      0.55        18
           1       0.74      0.47      0.57        30

    accuracy                           0.56        48
   macro avg       0.59      0.59      0.56        48
weighted avg       0.63      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.62      0.58        21
           1       0.67      0.59      0.63        27

    accuracy                           0.60        48
   macro avg       0.60      0.61      0.60        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.35      0.37      0.36        19
           1       0.57      0.55      0.56        29

    accuracy                           0.48        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.57      0.29      0.38        14
           1       0.76      0.91      0.83        34

    accuracy                           0.73        48
   macro avg       0.66      0.60      0.60        48
weighted avg       0.70      0.73      0.70        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.35      0.37        23
           1       0.46      0.52      0.49        25

    accuracy                           0.44        48
   macro avg       0.43      0.43      0.43        48
weighted avg       0.43      0.44      0.43        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.63      0.60      0.62        20
           1       0.72      0.75      0.74        28

    accuracy                           0.69        48
   macro avg       0.68      0.68      0.68        48
weighted avg       0.69      0.69      0.69        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.60      0.24      0.34        25
           1       0.50      0.83      0.62        23

    accuracy                           0.52        48
   macro avg       0.55      0.53      0.48        48
weighted avg       0.55      0.52      0.48        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.46      0.60      0.52        20
           1       0.64      0.50      0.56        28

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.56      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.59      0.43      0.50        23
           1       0.58      0.72      0.64        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.57        48
weighted avg       0.58      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.50      0.50        20
           1       0.64      0.64      0.64        28

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.57        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.57      0.52      0.55        23
           1       0.59      0.64      0.62        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.47      0.46        19
           1       0.64      0.62      0.63        29

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.38      0.38        16
           1       0.69      0.69      0.69        32

    accuracy                           0.58        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.38      0.38      0.38        21
           1       0.52      0.52      0.52        27

    accuracy                           0.46        48
   macro avg       0.45      0.45      0.45        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.54      0.56        26
           1       0.50      0.55      0.52        22

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.57      0.55        21
           1       0.64      0.59      0.62        27

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.42      0.43        19
           1       0.63      0.66      0.64        29

    accuracy                           0.56        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.62      0.45      0.53        22
           1       0.62      0.77      0.69        26

    accuracy                           0.62        48
   macro avg       0.62      0.61      0.61        48
weighted avg       0.62      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.32      0.36        19
           1       0.62      0.72      0.67        29

    accuracy                           0.56        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.54      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.33      0.41        21
           1       0.60      0.78      0.68        27

    accuracy                           0.58        48
   macro avg       0.57      0.56      0.54        48
weighted avg       0.57      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.60      0.41      0.49        22
           1       0.61      0.77      0.68        26

    accuracy                           0.60        48
   macro avg       0.60      0.59      0.58        48
weighted avg       0.60      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.48      0.67      0.56        15
           1       0.81      0.67      0.73        33

    accuracy                           0.67        48
   macro avg       0.65      0.67      0.64        48
weighted avg       0.71      0.67      0.68        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.43      0.45        21
           1       0.59      0.63      0.61        27

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.44      0.35      0.39        23
           1       0.50      0.60      0.55        25

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.47      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.75      0.23      0.35        26
           1       0.50      0.91      0.65        22

    accuracy                           0.54        48
   macro avg       0.62      0.57      0.50        48
weighted avg       0.64      0.54      0.49        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.44      0.27      0.33        26
           1       0.41      0.59      0.48        22

    accuracy                           0.42        48
   macro avg       0.42      0.43      0.41        48
weighted avg       0.42      0.42      0.40        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.33      0.41        21
           1       0.60      0.78      0.68        27

    accuracy                           0.58        48
   macro avg       0.57      0.56      0.54        48
weighted avg       0.57      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.55      0.51        20
           1       0.64      0.57      0.60        28

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       1.00      0.05      0.10        20
           1       0.60      1.00      0.75        28

    accuracy                           0.60        48
   macro avg       0.80      0.53      0.42        48
weighted avg       0.76      0.60      0.48        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.33      0.40        27
           1       0.40      0.57      0.47        21

    accuracy                           0.44        48
   macro avg       0.45      0.45      0.44        48
weighted avg       0.46      0.44      0.43        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.52      0.51        21
           1       0.62      0.59      0.60        27

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.38      0.32      0.34        19
           1       0.59      0.66      0.62        29

    accuracy                           0.52        48
   macro avg       0.48      0.49      0.48        48
weighted avg       0.51      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.43      0.45        23
           1       0.52      0.56      0.54        25

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.44      0.47        18
           1       0.69      0.73      0.71        30

    accuracy                           0.62        48
   macro avg       0.59      0.59      0.59        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.73      0.48      0.58        23
           1       0.64      0.84      0.72        25

    accuracy                           0.67        48
   macro avg       0.68      0.66      0.65        48
weighted avg       0.68      0.67      0.65        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.58      0.26      0.36        27
           1       0.44      0.76      0.56        21

    accuracy                           0.48        48
   macro avg       0.51      0.51      0.46        48
weighted avg       0.52      0.48      0.45        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.67      0.53        18
           1       0.71      0.50      0.59        30

    accuracy                           0.56        48
   macro avg       0.58      0.58      0.56        48
weighted avg       0.61      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.65      0.55        20
           1       0.67      0.50      0.57        28

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.59      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       1.00      0.09      0.16        23
           1       0.54      1.00      0.70        25

    accuracy                           0.56        48
   macro avg       0.77      0.54      0.43        48
weighted avg       0.76      0.56      0.44        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.61      0.50      0.55        22
           1       0.63      0.73      0.68        26

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.53      0.53      0.53        17
           1       0.74      0.74      0.74        31

    accuracy                           0.67        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.67      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.32      0.41        19
           1       0.66      0.86      0.75        29

    accuracy                           0.65        48
   macro avg       0.63      0.59      0.58        48
weighted avg       0.63      0.65      0.61        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.42      0.45        24
           1       0.50      0.58      0.54        24

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.53      0.44      0.48        18
           1       0.70      0.77      0.73        30

    accuracy                           0.65        48
   macro avg       0.62      0.61      0.61        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.57      0.53        21
           1       0.62      0.56      0.59        27

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.55      0.27      0.36        22
           1       0.57      0.81      0.67        26

    accuracy                           0.56        48
   macro avg       0.56      0.54      0.52        48
weighted avg       0.56      0.56      0.53        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.19      0.26        21
           1       0.55      0.78      0.65        27

    accuracy                           0.52        48
   macro avg       0.48      0.48      0.45        48
weighted avg       0.49      0.52      0.48        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.53      0.64      0.58        25
           1       0.50      0.39      0.44        23

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.51        48
weighted avg       0.52      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.45      0.74      0.56        19
           1       0.71      0.41      0.52        29

    accuracy                           0.54        48
   macro avg       0.58      0.58      0.54        48
weighted avg       0.61      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.38      0.46        24
           1       0.55      0.75      0.63        24

    accuracy                           0.56        48
   macro avg       0.57      0.56      0.55        48
weighted avg       0.57      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.54      0.62      0.58        21
           1       0.67      0.59      0.63        27

    accuracy                           0.60        48
   macro avg       0.60      0.61      0.60        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.71      0.42      0.53        24
           1       0.59      0.83      0.69        24

    accuracy                           0.62        48
   macro avg       0.65      0.62      0.61        48
weighted avg       0.65      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.39      0.33      0.36        21
           1       0.53      0.59      0.56        27

    accuracy                           0.48        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.47      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.68      0.62      0.65        21
           1       0.72      0.78      0.75        27

    accuracy                           0.71        48
   macro avg       0.70      0.70      0.70        48
weighted avg       0.71      0.71      0.71        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.50      0.44        20
           1       0.57      0.46      0.51        28

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.50      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.58      0.44      0.50        25
           1       0.52      0.65      0.58        23

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.37      0.41      0.39        17
           1       0.66      0.61      0.63        31

    accuracy                           0.54        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.55      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.39      0.49        23
           1       0.59      0.80      0.68        25

    accuracy                           0.60        48
   macro avg       0.62      0.60      0.58        48
weighted avg       0.61      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.41      0.43        22
           1       0.54      0.58      0.56        26

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.42      0.49        24
           1       0.55      0.71      0.62        24

    accuracy                           0.56        48
   macro avg       0.57      0.56      0.55        48
weighted avg       0.57      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.53      0.44        15
           1       0.74      0.61      0.67        33

    accuracy                           0.58        48
   macro avg       0.56      0.57      0.56        48
weighted avg       0.63      0.58      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.39      0.50      0.44        18
           1       0.64      0.53      0.58        30

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.51        48
weighted avg       0.55      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.38      0.47        24
           1       0.56      0.79      0.66        24

    accuracy                           0.58        48
   macro avg       0.60      0.58      0.56        48
weighted avg       0.60      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.59      0.45      0.51        22
           1       0.61      0.73      0.67        26

    accuracy                           0.60        48
   macro avg       0.60      0.59      0.59        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.50      0.49        20
           1       0.63      0.61      0.62        28

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.53      0.54        19
           1       0.70      0.72      0.71        29

    accuracy                           0.65        48
   macro avg       0.63      0.63      0.63        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.59      0.50      0.54        26
           1       0.50      0.59      0.54        22

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.59      0.50      0.54        26
           1       0.50      0.59      0.54        22

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.35      0.53      0.42        17
           1       0.64      0.45      0.53        31

    accuracy                           0.48        48
   macro avg       0.49      0.49      0.47        48
weighted avg       0.53      0.48      0.49        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.55      0.50      0.52        22
           1       0.61      0.65      0.63        26

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.50      0.16      0.24        25
           1       0.47      0.83      0.60        23

    accuracy                           0.48        48
   macro avg       0.49      0.49      0.42        48
weighted avg       0.49      0.48      0.42        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.26      0.28      0.27        18
           1       0.55      0.53      0.54        30

    accuracy                           0.44        48
   macro avg       0.41      0.41      0.41        48
weighted avg       0.44      0.44      0.44        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.45      0.43      0.44        23
           1       0.50      0.52      0.51        25

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        27
           1       0.44      1.00      0.61        21

    accuracy                           0.44        48
   macro avg       0.22      0.50      0.30        48
weighted avg       0.19      0.44      0.27        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.62      0.35      0.44        23
           1       0.57      0.80      0.67        25

    accuracy                           0.58        48
   macro avg       0.59      0.57      0.56        48
weighted avg       0.59      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.32      0.39        22
           1       0.56      0.73      0.63        26

    accuracy                           0.54        48
   macro avg       0.53      0.52      0.51        48
weighted avg       0.53      0.54      0.52        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.46      0.50        24
           1       0.54      0.62      0.58        24

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.68      0.52      0.59        29
           1       0.46      0.63      0.53        19

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.59      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.55      0.50      0.52        22
           1       0.61      0.65      0.63        26

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.69      0.44      0.54        25
           1       0.56      0.78      0.65        23

    accuracy                           0.60        48
   macro avg       0.62      0.61      0.60        48
weighted avg       0.63      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.36      0.45      0.40        20
           1       0.52      0.43      0.47        28

    accuracy                           0.44        48
   macro avg       0.44      0.44      0.44        48
weighted avg       0.45      0.44      0.44        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.74      0.58      0.65        24
           1       0.66      0.79      0.72        24

    accuracy                           0.69        48
   macro avg       0.70      0.69      0.68        48
weighted avg       0.70      0.69      0.68        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.45      0.44        20
           1       0.59      0.57      0.58        28

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.51        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.50      0.41      0.45        22
           1       0.57      0.65      0.61        26

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.46      0.26      0.33        23
           1       0.51      0.72      0.60        25

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.47        48
weighted avg       0.49      0.50      0.47        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.65      0.58        20
           1       0.70      0.57      0.63        28

    accuracy                           0.60        48
   macro avg       0.61      0.61      0.60        48
weighted avg       0.62      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.37      0.73      0.49        15
           1       0.78      0.42      0.55        33

    accuracy                           0.52        48
   macro avg       0.57      0.58      0.52        48
weighted avg       0.65      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.52      0.69      0.59        16
           1       0.81      0.69      0.75        32

    accuracy                           0.69        48
   macro avg       0.67      0.69      0.67        48
weighted avg       0.72      0.69      0.70        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.61      0.64      0.62        22
           1       0.68      0.65      0.67        26

    accuracy                           0.65        48
   macro avg       0.64      0.65      0.64        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.41      0.47        22
           1       0.59      0.73      0.66        26

    accuracy                           0.58        48
   macro avg       0.58      0.57      0.56        48
weighted avg       0.58      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.60      0.62      0.61        24
           1       0.61      0.58      0.60        24

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.36      0.47      0.41        17
           1       0.65      0.55      0.60        31

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.55      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.41      0.40        17
           1       0.67      0.65      0.66        31

    accuracy                           0.56        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.57      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.41      0.41      0.41        22
           1       0.50      0.50      0.50        26

    accuracy                           0.46        48
   macro avg       0.45      0.45      0.45        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.76      0.48      0.59        27
           1       0.55      0.81      0.65        21

    accuracy                           0.62        48
   macro avg       0.66      0.65      0.62        48
weighted avg       0.67      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.63      0.55        19
           1       0.70      0.55      0.62        29

    accuracy                           0.58        48
   macro avg       0.59      0.59      0.58        48
weighted avg       0.61      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.76      0.57      0.65        23
           1       0.68      0.84      0.75        25

    accuracy                           0.71        48
   macro avg       0.72      0.70      0.70        48
weighted avg       0.72      0.71      0.70        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.43      0.48      0.45        21
           1       0.56      0.52      0.54        27

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.36      0.42        22
           1       0.56      0.69      0.62        26

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.53      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.50      0.50        22
           1       0.58      0.58      0.58        26

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.62      0.30      0.40        27
           1       0.46      0.76      0.57        21

    accuracy                           0.50        48
   macro avg       0.54      0.53      0.49        48
weighted avg       0.55      0.50      0.48        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.56      0.47        16
           1       0.73      0.59      0.66        32

    accuracy                           0.58        48
   macro avg       0.57      0.58      0.56        48
weighted avg       0.62      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.33      0.35        18
           1       0.62      0.67      0.65        30

    accuracy                           0.54        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.53      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.47      0.35      0.40        23
           1       0.52      0.64      0.57        25

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.49      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.55      0.55        22
           1       0.62      0.62      0.62        26

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.71      0.20      0.31        25
           1       0.51      0.91      0.66        23

    accuracy                           0.54        48
   macro avg       0.61      0.56      0.48        48
weighted avg       0.62      0.54      0.48        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.68      0.62      0.65        24
           1       0.65      0.71      0.68        24

    accuracy                           0.67        48
   macro avg       0.67      0.67      0.67        48
weighted avg       0.67      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.31      0.31      0.31        16
           1       0.66      0.66      0.66        32

    accuracy                           0.54        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.55      0.52        20
           1       0.65      0.61      0.63        28

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.56      0.45        18
           1       0.64      0.47      0.54        30

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.54      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.85      0.44      0.58        25
           1       0.60      0.91      0.72        23

    accuracy                           0.67        48
   macro avg       0.72      0.68      0.65        48
weighted avg       0.73      0.67      0.65        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.54      0.54        26
           1       0.45      0.45      0.45        22

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.55      0.51        20
           1       0.64      0.57      0.60        28

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       1.00      0.04      0.08        24
           1       0.51      1.00      0.68        24

    accuracy                           0.52        48
   macro avg       0.76      0.52      0.38        48
weighted avg       0.76      0.52      0.38        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.44      0.48        25
           1       0.48      0.57      0.52        23

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.52      0.55        21
           1       0.66      0.70      0.68        27

    accuracy                           0.62        48
   macro avg       0.62      0.61      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.47      0.38      0.42        21
           1       0.58      0.67      0.62        27

    accuracy                           0.54        48
   macro avg       0.53      0.52      0.52        48
weighted avg       0.53      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.48      0.49        23
           1       0.54      0.56      0.55        25

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.60      0.23      0.33        26
           1       0.47      0.82      0.60        22

    accuracy                           0.50        48
   macro avg       0.54      0.52      0.47        48
weighted avg       0.54      0.50      0.46        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.57      0.36      0.44        22
           1       0.59      0.77      0.67        26

    accuracy                           0.58        48
   macro avg       0.58      0.57      0.56        48
weighted avg       0.58      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.50      0.57      0.53        21
           1       0.62      0.56      0.59        27

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.46      0.26      0.33        23
           1       0.51      0.72      0.60        25

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.47        48
weighted avg       0.49      0.50      0.47        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.43      0.50      0.46        18
           1       0.67      0.60      0.63        30

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.58      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.1)
              precision    recall  f1-score   support

           0       0.55      0.50      0.52        22
           1       0.61      0.65      0.63        26

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.27      0.15      0.19        20
           1       0.54      0.71      0.62        28

    accuracy                           0.48        48
   macro avg       0.41      0.43      0.40        48
weighted avg       0.43      0.48      0.44        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.52      0.60      0.56        20
           1       0.68      0.61      0.64        28

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.63      0.44      0.52        27
           1       0.48      0.67      0.56        21

    accuracy                           0.54        48
   macro avg       0.56      0.56      0.54        48
weighted avg       0.57      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.76      0.52      0.62        25
           1       0.61      0.83      0.70        23

    accuracy                           0.67        48
   macro avg       0.69      0.67      0.66        48
weighted avg       0.69      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.55      0.49        20
           1       0.61      0.50      0.55        28

    accuracy                           0.52        48
   macro avg       0.52      0.53      0.52        48
weighted avg       0.54      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.24      0.30        25
           1       0.42      0.61      0.50        23

    accuracy                           0.42        48
   macro avg       0.41      0.42      0.40        48
weighted avg       0.41      0.42      0.40        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.62      0.38      0.48        26
           1       0.50      0.73      0.59        22

    accuracy                           0.54        48
   macro avg       0.56      0.56      0.53        48
weighted avg       0.57      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.46      0.68      0.55        19
           1       0.70      0.48      0.57        29

    accuracy                           0.56        48
   macro avg       0.58      0.58      0.56        48
weighted avg       0.61      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.43      0.50        21
           1       0.64      0.78      0.70        27

    accuracy                           0.62        48
   macro avg       0.62      0.60      0.60        48
weighted avg       0.62      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.71      0.52      0.60        23
           1       0.65      0.80      0.71        25

    accuracy                           0.67        48
   macro avg       0.68      0.66      0.66        48
weighted avg       0.67      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.57      0.36      0.44        22
           1       0.59      0.77      0.67        26

    accuracy                           0.58        48
   macro avg       0.58      0.57      0.56        48
weighted avg       0.58      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.45      0.45      0.45        22
           1       0.54      0.54      0.54        26

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.69      0.33      0.45        27
           1       0.49      0.81      0.61        21

    accuracy                           0.54        48
   macro avg       0.59      0.57      0.53        48
weighted avg       0.60      0.54      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.50      0.45        24
           1       0.37      0.29      0.33        24

    accuracy                           0.40        48
   macro avg       0.39      0.40      0.39        48
weighted avg       0.39      0.40      0.39        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.52      0.52        21
           1       0.63      0.63      0.63        27

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.68      0.59      0.63        22
           1       0.69      0.77      0.73        26

    accuracy                           0.69        48
   macro avg       0.69      0.68      0.68        48
weighted avg       0.69      0.69      0.68        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.56      0.51        18
           1       0.70      0.63      0.67        30

    accuracy                           0.60        48
   macro avg       0.59      0.59      0.59        48
weighted avg       0.62      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.65      0.46      0.54        24
           1       0.58      0.75      0.65        24

    accuracy                           0.60        48
   macro avg       0.61      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.60      0.55        20
           1       0.67      0.57      0.62        28

    accuracy                           0.58        48
   macro avg       0.58      0.59      0.58        48
weighted avg       0.60      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.62      0.24      0.34        21
           1       0.60      0.89      0.72        27

    accuracy                           0.60        48
   macro avg       0.61      0.56      0.53        48
weighted avg       0.61      0.60      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        22
           1       0.53      0.96      0.68        26

    accuracy                           0.52        48
   macro avg       0.27      0.48      0.34        48
weighted avg       0.29      0.52      0.37        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.69      0.38      0.49        24
           1       0.57      0.83      0.68        24

    accuracy                           0.60        48
   macro avg       0.63      0.60      0.58        48
weighted avg       0.63      0.60      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.44      0.35      0.39        23
           1       0.50      0.60      0.55        25

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.47      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.22      0.28        23
           1       0.49      0.68      0.57        25

    accuracy                           0.46        48
   macro avg       0.44      0.45      0.42        48
weighted avg       0.44      0.46      0.43        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.37      0.65      0.47        17
           1       0.67      0.39      0.49        31

    accuracy                           0.48        48
   macro avg       0.52      0.52      0.48        48
weighted avg       0.56      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.32      0.39        19
           1       0.64      0.79      0.71        29

    accuracy                           0.60        48
   macro avg       0.57      0.55      0.55        48
weighted avg       0.58      0.60      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.36      0.46        22
           1       0.60      0.81      0.69        26

    accuracy                           0.60        48
   macro avg       0.61      0.59      0.57        48
weighted avg       0.61      0.60      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.48      0.56      0.51        18
           1       0.70      0.63      0.67        30

    accuracy                           0.60        48
   macro avg       0.59      0.59      0.59        48
weighted avg       0.62      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.46      0.65      0.54        20
           1       0.65      0.46      0.54        28

    accuracy                           0.54        48
   macro avg       0.56      0.56      0.54        48
weighted avg       0.57      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.60      0.46        15
           1       0.75      0.55      0.63        33

    accuracy                           0.56        48
   macro avg       0.56      0.57      0.55        48
weighted avg       0.63      0.56      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.37      0.53      0.43        19
           1       0.57      0.41      0.48        29

    accuracy                           0.46        48
   macro avg       0.47      0.47      0.46        48
weighted avg       0.49      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.50      0.45      0.48        22
           1       0.57      0.62      0.59        26

    accuracy                           0.54        48
   macro avg       0.54      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.86      0.23      0.36        26
           1       0.51      0.95      0.67        22

    accuracy                           0.56        48
   macro avg       0.68      0.59      0.52        48
weighted avg       0.70      0.56      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.31      0.38        26
           1       0.44      0.64      0.52        22

    accuracy                           0.46        48
   macro avg       0.47      0.47      0.45        48
weighted avg       0.47      0.46      0.44        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.57      0.71      0.63        17
           1       0.81      0.71      0.76        31

    accuracy                           0.71        48
   macro avg       0.69      0.71      0.70        48
weighted avg       0.73      0.71      0.71        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.36      0.50      0.42        18
           1       0.61      0.47      0.53        30

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.47        48
weighted avg       0.52      0.48      0.49        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.69      0.36      0.47        25
           1       0.54      0.83      0.66        23

    accuracy                           0.58        48
   macro avg       0.62      0.59      0.56        48
weighted avg       0.62      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.47      0.45      0.46        20
           1       0.62      0.64      0.63        28

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.59      0.72      0.65        18
           1       0.81      0.70      0.75        30

    accuracy                           0.71        48
   macro avg       0.70      0.71      0.70        48
weighted avg       0.73      0.71      0.71        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.50      0.03      0.06        30
           1       0.37      0.94      0.53        18

    accuracy                           0.38        48
   macro avg       0.43      0.49      0.30        48
weighted avg       0.45      0.38      0.24        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.57      0.55      0.56        22
           1       0.63      0.65      0.64        26

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.38      0.46        21
           1       0.62      0.78      0.69        27

    accuracy                           0.60        48
   macro avg       0.59      0.58      0.57        48
weighted avg       0.60      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.28      0.36        25
           1       0.47      0.70      0.56        23

    accuracy                           0.48        48
   macro avg       0.49      0.49      0.46        48
weighted avg       0.49      0.48      0.46        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.57      0.60      0.59        20
           1       0.70      0.68      0.69        28

    accuracy                           0.65        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.36      0.35      0.36        23
           1       0.42      0.44      0.43        25

    accuracy                           0.40        48
   macro avg       0.39      0.39      0.39        48
weighted avg       0.39      0.40      0.40        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.41      0.49        22
           1       0.61      0.77      0.68        26

    accuracy                           0.60        48
   macro avg       0.60      0.59      0.58        48
weighted avg       0.60      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.32      0.47      0.38        15
           1       0.69      0.55      0.61        33

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.49        48
weighted avg       0.58      0.52      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.43      0.47        21
           1       0.61      0.70      0.66        27

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.59      0.68      0.63        25
           1       0.58      0.48      0.52        23

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.50      0.48        20
           1       0.62      0.57      0.59        28

    accuracy                           0.54        48
   macro avg       0.53      0.54      0.53        48
weighted avg       0.55      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.40      0.46        20
           1       0.64      0.75      0.69        28

    accuracy                           0.60        48
   macro avg       0.58      0.57      0.57        48
weighted avg       0.59      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.50      0.50        18
           1       0.70      0.70      0.70        30

    accuracy                           0.62        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.48      0.48        21
           1       0.59      0.59      0.59        27

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.63      0.65        19
           1       0.77      0.79      0.78        29

    accuracy                           0.73        48
   macro avg       0.72      0.71      0.71        48
weighted avg       0.73      0.73      0.73        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.60      0.43      0.50        21
           1       0.64      0.78      0.70        27

    accuracy                           0.62        48
   macro avg       0.62      0.60      0.60        48
weighted avg       0.62      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.56      0.54        18
           1       0.72      0.70      0.71        30

    accuracy                           0.65        48
   macro avg       0.63      0.63      0.63        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.53      0.48      0.50        21
           1       0.62      0.67      0.64        27

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.57        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.28      0.36        18
           1       0.66      0.83      0.74        30

    accuracy                           0.62        48
   macro avg       0.58      0.56      0.55        48
weighted avg       0.60      0.62      0.59        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.33      0.43        24
           1       0.54      0.79      0.64        24

    accuracy                           0.56        48
   macro avg       0.58      0.56      0.54        48
weighted avg       0.58      0.56      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.82      0.36      0.50        25
           1       0.57      0.91      0.70        23

    accuracy                           0.62        48
   macro avg       0.69      0.64      0.60        48
weighted avg       0.70      0.62      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       1.00      0.03      0.07        29
           1       0.40      1.00      0.58        19

    accuracy                           0.42        48
   macro avg       0.70      0.52      0.32        48
weighted avg       0.76      0.42      0.27        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.52      0.54      0.53        24
           1       0.52      0.50      0.51        24

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.36      0.42        25
           1       0.47      0.61      0.53        23

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.47        48
weighted avg       0.48      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.61      0.42      0.50        26
           1       0.50      0.68      0.58        22

    accuracy                           0.54        48
   macro avg       0.56      0.55      0.54        48
weighted avg       0.56      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.50      0.04      0.07        27
           1       0.43      0.95      0.60        21

    accuracy                           0.44        48
   macro avg       0.47      0.49      0.33        48
weighted avg       0.47      0.44      0.30        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.43      0.47        21
           1       0.61      0.70      0.66        27

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.55      0.55        22
           1       0.62      0.62      0.62        26

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.53      0.41        15
           1       0.71      0.52      0.60        33

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.50        48
weighted avg       0.59      0.52      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.40      0.48        25
           1       0.52      0.70      0.59        23

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.53        48
weighted avg       0.55      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.67      0.14      0.24        28
           1       0.43      0.90      0.58        20

    accuracy                           0.46        48
   macro avg       0.55      0.52      0.41        48
weighted avg       0.57      0.46      0.38        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.42      0.48        24
           1       0.53      0.67      0.59        24

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.54      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.36      0.40      0.38        20
           1       0.54      0.50      0.52        28

    accuracy                           0.46        48
   macro avg       0.45      0.45      0.45        48
weighted avg       0.47      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.30      0.35      0.32        17
           1       0.61      0.55      0.58        31

    accuracy                           0.48        48
   macro avg       0.45      0.45      0.45        48
weighted avg       0.50      0.48      0.49        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.37      0.44        19
           1       0.66      0.79      0.72        29

    accuracy                           0.62        48
   macro avg       0.60      0.58      0.58        48
weighted avg       0.61      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.61      0.52      0.56        21
           1       0.67      0.74      0.70        27

    accuracy                           0.65        48
   macro avg       0.64      0.63      0.63        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.29      0.31        17
           1       0.64      0.68      0.66        31

    accuracy                           0.54        48
   macro avg       0.48      0.49      0.48        48
weighted avg       0.53      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.63      0.57      0.60        21
           1       0.69      0.74      0.71        27

    accuracy                           0.67        48
   macro avg       0.66      0.66      0.66        48
weighted avg       0.66      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.46      0.54        24
           1       0.58      0.75      0.65        24

    accuracy                           0.60        48
   macro avg       0.61      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.40      0.44        25
           1       0.46      0.57      0.51        23

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.64      0.27      0.38        26
           1       0.49      0.82      0.61        22

    accuracy                           0.52        48
   macro avg       0.56      0.54      0.49        48
weighted avg       0.57      0.52      0.48        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.35      0.27      0.31        22
           1       0.48      0.58      0.53        26

    accuracy                           0.44        48
   macro avg       0.42      0.42      0.42        48
weighted avg       0.42      0.44      0.43        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.58      0.54        19
           1       0.69      0.62      0.65        29

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.62      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.48      0.62      0.54        21
           1       0.62      0.48      0.54        27

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.56      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.50      0.53        20
           1       0.67      0.71      0.69        28

    accuracy                           0.62        48
   macro avg       0.61      0.61      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.30      0.38        23
           1       0.53      0.72      0.61        25

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.49        48
weighted avg       0.52      0.52      0.50        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.60      0.55        15
           1       0.80      0.73      0.76        33

    accuracy                           0.69        48
   macro avg       0.65      0.66      0.65        48
weighted avg       0.71      0.69      0.69        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.48      0.48      0.48        23
           1       0.52      0.52      0.52        25

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.35      0.60      0.44        15
           1       0.73      0.48      0.58        33

    accuracy                           0.52        48
   macro avg       0.54      0.54      0.51        48
weighted avg       0.61      0.52      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.50      0.42      0.45        24
           1       0.50      0.58      0.54        24

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.40      0.45        25
           1       0.48      0.61      0.54        23

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.51      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.48      0.43        21
           1       0.50      0.41      0.45        27

    accuracy                           0.44        48
   macro avg       0.44      0.44      0.44        48
weighted avg       0.45      0.44      0.44        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.30      0.57      0.39        14
           1       0.71      0.44      0.55        34

    accuracy                           0.48        48
   macro avg       0.51      0.51      0.47        48
weighted avg       0.59      0.48      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.39      0.33      0.36        21
           1       0.53      0.59      0.56        27

    accuracy                           0.48        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.47      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.52      0.55        23
           1       0.59      0.64      0.62        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.35      0.44      0.39        16
           1       0.68      0.59      0.63        32

    accuracy                           0.54        48
   macro avg       0.51      0.52      0.51        48
weighted avg       0.57      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.43      0.53        23
           1       0.61      0.80      0.69        25

    accuracy                           0.62        48
   macro avg       0.64      0.62      0.61        48
weighted avg       0.64      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.60      0.38      0.46        24
           1       0.55      0.75      0.63        24

    accuracy                           0.56        48
   macro avg       0.57      0.56      0.55        48
weighted avg       0.57      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.60      0.60      0.60        25
           1       0.57      0.57      0.57        23

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.44      0.48        25
           1       0.48      0.57      0.52        23

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.59      0.43      0.50        23
           1       0.58      0.72      0.64        25

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.57        48
weighted avg       0.58      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.91      0.43      0.59        23
           1       0.65      0.96      0.77        25

    accuracy                           0.71        48
   macro avg       0.78      0.70      0.68        48
weighted avg       0.77      0.71      0.69        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.40      0.53      0.45        19
           1       0.61      0.48      0.54        29

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.53      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.75      0.36      0.49        25
           1       0.56      0.87      0.68        23

    accuracy                           0.60        48
   macro avg       0.65      0.61      0.58        48
weighted avg       0.66      0.60      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.46      0.49        26
           1       0.44      0.50      0.47        22

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.59      0.57        22
           1       0.62      0.58      0.60        26

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.38      0.39        21
           1       0.54      0.56      0.55        27

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.42      0.47      0.44        17
           1       0.69      0.65      0.67        31

    accuracy                           0.58        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.59      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.31      0.50      0.38        16
           1       0.64      0.44      0.52        32

    accuracy                           0.46        48
   macro avg       0.47      0.47      0.45        48
weighted avg       0.53      0.46      0.47        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.69      0.56        16
           1       0.80      0.62      0.70        32

    accuracy                           0.65        48
   macro avg       0.64      0.66      0.63        48
weighted avg       0.69      0.65      0.66        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.55      0.52      0.53        23
           1       0.58      0.60      0.59        25

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.60      0.59        20
           1       0.70      0.68      0.69        28

    accuracy                           0.65        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.48      0.52      0.50        23
           1       0.52      0.48      0.50        25

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.45      0.45        22
           1       0.54      0.54      0.54        26

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.28      0.37        25
           1       0.49      0.74      0.59        23

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.48        48
weighted avg       0.51      0.50      0.47        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.1)
              precision    recall  f1-score   support

           0       0.48      0.45      0.47        22
           1       0.56      0.58      0.57        26

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.40      0.56      0.47        18
           1       0.65      0.50      0.57        30

    accuracy                           0.52        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.56      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.57      0.72      0.63        18
           1       0.80      0.67      0.73        30

    accuracy                           0.69        48
   macro avg       0.68      0.69      0.68        48
weighted avg       0.71      0.69      0.69        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.48      0.40      0.43        25
           1       0.44      0.52      0.48        23

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.46        48
weighted avg       0.46      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.53      0.46        17
           1       0.69      0.58      0.63        31

    accuracy                           0.56        48
   macro avg       0.55      0.56      0.55        48
weighted avg       0.59      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.79      0.54      0.64        28
           1       0.55      0.80      0.65        20

    accuracy                           0.65        48
   macro avg       0.67      0.67      0.65        48
weighted avg       0.69      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.41      0.55      0.47        20
           1       0.57      0.43      0.49        28

    accuracy                           0.48        48
   macro avg       0.49      0.49      0.48        48
weighted avg       0.50      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.37      0.47      0.41        15
           1       0.72      0.64      0.68        33

    accuracy                           0.58        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.61      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       1.00      0.32      0.48        22
           1       0.63      1.00      0.78        26

    accuracy                           0.69        48
   macro avg       0.82      0.66      0.63        48
weighted avg       0.80      0.69      0.64        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.45      0.38      0.41        24
           1       0.46      0.54      0.50        24

    accuracy                           0.46        48
   macro avg       0.46      0.46      0.45        48
weighted avg       0.46      0.46      0.45        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.53      0.55        17
           1       0.75      0.77      0.76        31

    accuracy                           0.69        48
   macro avg       0.66      0.65      0.65        48
weighted avg       0.68      0.69      0.69        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        24
           1       0.45      0.83      0.59        24

    accuracy                           0.42        48
   macro avg       0.23      0.42      0.29        48
weighted avg       0.23      0.42      0.29        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.69      0.38      0.49        24
           1       0.57      0.83      0.68        24

    accuracy                           0.60        48
   macro avg       0.63      0.60      0.58        48
weighted avg       0.63      0.60      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.27      0.35        22
           1       0.56      0.77      0.65        26

    accuracy                           0.54        48
   macro avg       0.53      0.52      0.50        48
weighted avg       0.53      0.54      0.51        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.47      0.46        17
           1       0.70      0.68      0.69        31

    accuracy                           0.60        48
   macro avg       0.57      0.57      0.57        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.54      0.52      0.53        25
           1       0.50      0.52      0.51        23

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.52      0.57      0.55        21
           1       0.64      0.59      0.62        27

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.59      0.36      0.44        28
           1       0.42      0.65      0.51        20

    accuracy                           0.48        48
   macro avg       0.50      0.50      0.48        48
weighted avg       0.52      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.26      0.29        23
           1       0.43      0.52      0.47        25

    accuracy                           0.40        48
   macro avg       0.38      0.39      0.38        48
weighted avg       0.39      0.40      0.39        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.36      0.56      0.44        16
           1       0.70      0.50      0.58        32

    accuracy                           0.52        48
   macro avg       0.53      0.53      0.51        48
weighted avg       0.58      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.39      0.53      0.45        17
           1       0.68      0.55      0.61        31

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.58      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.52      0.74      0.61        19
           1       0.76      0.55      0.64        29

    accuracy                           0.62        48
   macro avg       0.64      0.64      0.62        48
weighted avg       0.67      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.68      0.57      0.62        23
           1       0.66      0.76      0.70        25

    accuracy                           0.67        48
   macro avg       0.67      0.66      0.66        48
weighted avg       0.67      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.57      0.55      0.56        22
           1       0.63      0.65      0.64        26

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.46      0.26      0.33        23
           1       0.51      0.72      0.60        25

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.47        48
weighted avg       0.49      0.50      0.47        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.29      0.20      0.24        20
           1       0.53      0.64      0.58        28

    accuracy                           0.46        48
   macro avg       0.41      0.42      0.41        48
weighted avg       0.43      0.46      0.44        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.59      0.42      0.49        24
           1       0.55      0.71      0.62        24

    accuracy                           0.56        48
   macro avg       0.57      0.56      0.55        48
weighted avg       0.57      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.56      0.67      0.61        21
           1       0.70      0.59      0.64        27

    accuracy                           0.62        48
   macro avg       0.63      0.63      0.62        48
weighted avg       0.64      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.46      0.50      0.48        22
           1       0.54      0.50      0.52        26

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.45      0.49        22
           1       0.59      0.65      0.62        26

    accuracy                           0.56        48
   macro avg       0.56      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.52      0.50      0.51        22
           1       0.59      0.62      0.60        26

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.33      0.35        18
           1       0.62      0.67      0.65        30

    accuracy                           0.54        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.53      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.33      0.62      0.43        13
           1       0.79      0.54      0.64        35

    accuracy                           0.56        48
   macro avg       0.56      0.58      0.54        48
weighted avg       0.67      0.56      0.59        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.44      0.65      0.52        17
           1       0.74      0.55      0.63        31

    accuracy                           0.58        48
   macro avg       0.59      0.60      0.58        48
weighted avg       0.63      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.68      0.68      0.68        22
           1       0.73      0.73      0.73        26

    accuracy                           0.71        48
   macro avg       0.71      0.71      0.71        48
weighted avg       0.71      0.71      0.71        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.63      0.56        19
           1       0.71      0.59      0.64        29

    accuracy                           0.60        48
   macro avg       0.60      0.61      0.60        48
weighted avg       0.63      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.52      0.42      0.47        26
           1       0.44      0.55      0.49        22

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.49      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.56      0.67      0.61        21
           1       0.70      0.59      0.64        27

    accuracy                           0.62        48
   macro avg       0.63      0.63      0.62        48
weighted avg       0.64      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.29      0.32        21
           1       0.53      0.63      0.58        27

    accuracy                           0.48        48
   macro avg       0.45      0.46      0.45        48
weighted avg       0.46      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.45      0.59      0.51        17
           1       0.73      0.61      0.67        31

    accuracy                           0.60        48
   macro avg       0.59      0.60      0.59        48
weighted avg       0.63      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.42      0.25      0.31        20
           1       0.58      0.75      0.66        28

    accuracy                           0.54        48
   macro avg       0.50      0.50      0.48        48
weighted avg       0.51      0.54      0.51        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.58      0.58      0.58        26
           1       0.50      0.50      0.50        22

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.54        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.53      0.45        19
           1       0.61      0.48      0.54        29

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.53      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.41      0.47      0.44        15
           1       0.74      0.70      0.72        33

    accuracy                           0.62        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.64      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.42      0.20      0.27        25
           1       0.44      0.70      0.54        23

    accuracy                           0.44        48
   macro avg       0.43      0.45      0.41        48
weighted avg       0.43      0.44      0.40        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.42      0.45        24
           1       0.50      0.58      0.54        24

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.48      0.55        23
           1       0.61      0.76      0.68        25

    accuracy                           0.62        48
   macro avg       0.63      0.62      0.61        48
weighted avg       0.63      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.44      0.41      0.42        17
           1       0.69      0.71      0.70        31

    accuracy                           0.60        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.36      0.44      0.40        18
           1       0.62      0.53      0.57        30

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.52      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.62      0.22      0.32        23
           1       0.55      0.88      0.68        25

    accuracy                           0.56        48
   macro avg       0.59      0.55      0.50        48
weighted avg       0.59      0.56      0.51        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.67      0.43      0.53        23
           1       0.61      0.80      0.69        25

    accuracy                           0.62        48
   macro avg       0.64      0.62      0.61        48
weighted avg       0.64      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.28      0.34        18
           1       0.65      0.80      0.72        30

    accuracy                           0.60        48
   macro avg       0.55      0.54      0.53        48
weighted avg       0.58      0.60      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.54      0.57      0.55        23
           1       0.58      0.56      0.57        25

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.40      0.42        20
           1       0.60      0.64      0.62        28

    accuracy                           0.54        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.35      0.42      0.38        19
           1       0.56      0.48      0.52        29

    accuracy                           0.46        48
   macro avg       0.45      0.45      0.45        48
weighted avg       0.48      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.57      0.36      0.44        22
           1       0.59      0.77      0.67        26

    accuracy                           0.58        48
   macro avg       0.58      0.57      0.56        48
weighted avg       0.58      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.72      0.42      0.53        31
           1       0.40      0.71      0.51        17

    accuracy                           0.52        48
   macro avg       0.56      0.56      0.52        48
weighted avg       0.61      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.69      0.42      0.52        26
           1       0.53      0.77      0.63        22

    accuracy                           0.58        48
   macro avg       0.61      0.60      0.58        48
weighted avg       0.62      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.57      0.62      0.59        21
           1       0.68      0.63      0.65        27

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.42      0.48        26
           1       0.46      0.59      0.52        22

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.47      0.47        19
           1       0.66      0.66      0.66        29

    accuracy                           0.58        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.80      0.15      0.25        27
           1       0.47      0.95      0.62        21

    accuracy                           0.50        48
   macro avg       0.63      0.55      0.44        48
weighted avg       0.65      0.50      0.41        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.38      0.47      0.42        19
           1       0.58      0.48      0.53        29

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.47        48
weighted avg       0.50      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.64      0.64        22
           1       0.69      0.69      0.69        26

    accuracy                           0.67        48
   macro avg       0.66      0.66      0.66        48
weighted avg       0.67      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.61      0.52      0.56        21
           1       0.67      0.74      0.70        27

    accuracy                           0.65        48
   macro avg       0.64      0.63      0.63        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.44      0.47        18
           1       0.69      0.73      0.71        30

    accuracy                           0.62        48
   macro avg       0.59      0.59      0.59        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.88      0.32      0.47        22
           1       0.62      0.96      0.76        26

    accuracy                           0.67        48
   macro avg       0.75      0.64      0.61        48
weighted avg       0.74      0.67      0.62        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.57      0.57      0.57        21
           1       0.67      0.67      0.67        27

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.47      0.46        17
           1       0.70      0.68      0.69        31

    accuracy                           0.60        48
   macro avg       0.57      0.57      0.57        48
weighted avg       0.61      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.35      0.27      0.31        22
           1       0.48      0.58      0.53        26

    accuracy                           0.44        48
   macro avg       0.42      0.42      0.42        48
weighted avg       0.42      0.44      0.43        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.38      0.44      0.41        18
           1       0.63      0.57      0.60        30

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.54      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.27      0.35        22
           1       0.56      0.77      0.65        26

    accuracy                           0.54        48
   macro avg       0.53      0.52      0.50        48
weighted avg       0.53      0.54      0.51        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.64      0.41      0.50        22
           1       0.62      0.81      0.70        26

    accuracy                           0.62        48
   macro avg       0.63      0.61      0.60        48
weighted avg       0.63      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.48      0.76      0.59        17
           1       0.81      0.55      0.65        31

    accuracy                           0.62        48
   macro avg       0.65      0.66      0.62        48
weighted avg       0.69      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.65      0.44      0.52        25
           1       0.55      0.74      0.63        23

    accuracy                           0.58        48
   macro avg       0.60      0.59      0.58        48
weighted avg       0.60      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.67      0.27      0.39        22
           1       0.59      0.88      0.71        26

    accuracy                           0.60        48
   macro avg       0.63      0.58      0.55        48
weighted avg       0.62      0.60      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       1.00      0.04      0.08        24
           1       0.51      1.00      0.68        24

    accuracy                           0.52        48
   macro avg       0.76      0.52      0.38        48
weighted avg       0.76      0.52      0.38        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.62      0.38      0.47        21
           1       0.63      0.81      0.71        27

    accuracy                           0.62        48
   macro avg       0.62      0.60      0.59        48
weighted avg       0.62      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.0001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.80      0.67        20
           1       0.80      0.57      0.67        28

    accuracy                           0.67        48
   macro avg       0.69      0.69      0.67        48
weighted avg       0.70      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.69      0.54        16
           1       0.78      0.56      0.65        32

    accuracy                           0.60        48
   macro avg       0.61      0.62      0.60        48
weighted avg       0.67      0.60      0.62        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.56      0.40      0.47        25
           1       0.50      0.65      0.57        23

    accuracy                           0.52        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.53      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.83      0.19      0.31        26
           1       0.50      0.95      0.66        22

    accuracy                           0.54        48
   macro avg       0.67      0.57      0.48        48
weighted avg       0.68      0.54      0.47        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.44      0.44      0.44        18
           1       0.67      0.67      0.67        30

    accuracy                           0.58        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.50      0.51        20
           1       0.66      0.68      0.67        28

    accuracy                           0.60        48
   macro avg       0.59      0.59      0.59        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.29      0.36        21
           1       0.58      0.78      0.67        27

    accuracy                           0.56        48
   macro avg       0.54      0.53      0.52        48
weighted avg       0.55      0.56      0.53        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.57      0.63      0.60        19
           1       0.74      0.69      0.71        29

    accuracy                           0.67        48
   macro avg       0.66      0.66      0.66        48
weighted avg       0.67      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.36      0.56      0.43        18
           1       0.60      0.40      0.48        30

    accuracy                           0.46        48
   macro avg       0.48      0.48      0.46        48
weighted avg       0.51      0.46      0.46        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.57      0.62      0.59        21
           1       0.68      0.63      0.65        27

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.63      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.72      0.50      0.59        26
           1       0.57      0.77      0.65        22

    accuracy                           0.62        48
   macro avg       0.64      0.64      0.62        48
weighted avg       0.65      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.50      0.49        22
           1       0.56      0.54      0.55        26

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.45      0.56      0.50        18
           1       0.69      0.60      0.64        30

    accuracy                           0.58        48
   macro avg       0.57      0.58      0.57        48
weighted avg       0.60      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.24      0.29      0.26        17
           1       0.56      0.48      0.52        31

    accuracy                           0.42        48
   macro avg       0.40      0.39      0.39        48
weighted avg       0.44      0.42      0.43        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.46      0.62      0.53        21
           1       0.60      0.44      0.51        27

    accuracy                           0.52        48
   macro avg       0.53      0.53      0.52        48
weighted avg       0.54      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.59      0.48      0.53        21
           1       0.65      0.74      0.69        27

    accuracy                           0.62        48
   macro avg       0.62      0.61      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.36      0.42        25
           1       0.47      0.61      0.53        23

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.47        48
weighted avg       0.48      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.48      0.72      0.58        18
           1       0.76      0.53      0.63        30

    accuracy                           0.60        48
   macro avg       0.62      0.63      0.60        48
weighted avg       0.66      0.60      0.61        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.64      0.76      0.70        21
           1       0.78      0.67      0.72        27

    accuracy                           0.71        48
   macro avg       0.71      0.71      0.71        48
weighted avg       0.72      0.71      0.71        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.27      0.24      0.25        17
           1       0.61      0.65      0.62        31

    accuracy                           0.50        48
   macro avg       0.44      0.44      0.44        48
weighted avg       0.49      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.24      0.35        25
           1       0.51      0.87      0.65        23

    accuracy                           0.54        48
   macro avg       0.59      0.55      0.50        48
weighted avg       0.59      0.54      0.49        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.47      0.45      0.46        20
           1       0.62      0.64      0.63        28

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=1)
              precision    recall  f1-score   support

           0       0.67      0.19      0.30        21
           1       0.60      0.93      0.72        27

    accuracy                           0.60        48
   macro avg       0.63      0.56      0.51        48
weighted avg       0.63      0.60      0.54        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.27      0.35        22
           1       0.56      0.77      0.65        26

    accuracy                           0.54        48
   macro avg       0.53      0.52      0.50        48
weighted avg       0.53      0.54      0.51        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.65      0.52      0.58        21
           1       0.68      0.78      0.72        27

    accuracy                           0.67        48
   macro avg       0.66      0.65      0.65        48
weighted avg       0.66      0.67      0.66        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.55      0.52      0.54        21
           1       0.64      0.67      0.65        27

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.52      0.59        23
           1       0.63      0.76      0.69        25

    accuracy                           0.65        48
   macro avg       0.65      0.64      0.64        48
weighted avg       0.65      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.75      0.44      0.56        27
           1       0.53      0.81      0.64        21

    accuracy                           0.60        48
   macro avg       0.64      0.63      0.60        48
weighted avg       0.65      0.60      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.41      0.43      0.42        21
           1       0.54      0.52      0.53        27

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.61      0.67      0.64        21
           1       0.72      0.67      0.69        27

    accuracy                           0.67        48
   macro avg       0.66      0.67      0.66        48
weighted avg       0.67      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.38      0.50      0.43        18
           1       0.62      0.50      0.56        30

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.49        48
weighted avg       0.53      0.50      0.51        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.65      0.61        23
           1       0.64      0.56      0.60        25

    accuracy                           0.60        48
   macro avg       0.61      0.61      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.52      0.51        23
           1       0.54      0.52      0.53        25

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.45      0.49        20
           1       0.65      0.71      0.68        28

    accuracy                           0.60        48
   macro avg       0.59      0.58      0.58        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.38      0.53      0.44        17
           1       0.67      0.52      0.58        31

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.51        48
weighted avg       0.56      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.45      0.53        20
           1       0.68      0.82      0.74        28

    accuracy                           0.67        48
   macro avg       0.66      0.64      0.64        48
weighted avg       0.66      0.67      0.65        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.64      0.56      0.60        25
           1       0.58      0.65      0.61        23

    accuracy                           0.60        48
   macro avg       0.61      0.61      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.54      0.59      0.57        22
           1       0.62      0.58      0.60        26

    accuracy                           0.58        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.59      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.50      0.45      0.47        20
           1       0.63      0.68      0.66        28

    accuracy                           0.58        48
   macro avg       0.57      0.56      0.56        48
weighted avg       0.58      0.58      0.58        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.43      0.41      0.42        22
           1       0.52      0.54      0.53        26

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.71      0.63        21
           1       0.71      0.56      0.63        27

    accuracy                           0.62        48
   macro avg       0.63      0.63      0.63        48
weighted avg       0.64      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.56      0.43      0.49        23
           1       0.57      0.68      0.62        25

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.55        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.38      0.39        21
           1       0.54      0.56      0.55        27

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.40      0.40      0.40        20
           1       0.57      0.57      0.57        28

    accuracy                           0.50        48
   macro avg       0.49      0.49      0.49        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.48      0.60      0.53        20
           1       0.65      0.54      0.59        28

    accuracy                           0.56        48
   macro avg       0.57      0.57      0.56        48
weighted avg       0.58      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=0.1, gamma=1)
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        24
           1       0.50      1.00      0.67        24

    accuracy                           0.50        48
   macro avg       0.25      0.50      0.33        48
weighted avg       0.25      0.50      0.33        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.34      0.50      0.41        20
           1       0.47      0.32      0.38        28

    accuracy                           0.40        48
   macro avg       0.41      0.41      0.40        48
weighted avg       0.42      0.40      0.39        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=0.1, gamma=1)
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        24
           1       0.50      1.00      0.67        24

    accuracy                           0.50        48
   macro avg       0.25      0.50      0.33        48
weighted avg       0.25      0.50      0.33        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.36      0.23      0.28        22
           1       0.50      0.65      0.57        26

    accuracy                           0.46        48
   macro avg       0.43      0.44      0.42        48
weighted avg       0.43      0.46      0.43        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.48      0.53      0.50        19
           1       0.67      0.62      0.64        29

    accuracy                           0.58        48
   macro avg       0.57      0.57      0.57        48
weighted avg       0.59      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.43      0.47        23
           1       0.54      0.60      0.57        25

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.32      0.37      0.34        19
           1       0.54      0.48      0.51        29

    accuracy                           0.44        48
   macro avg       0.43      0.43      0.43        48
weighted avg       0.45      0.44      0.44        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.52      0.51        23
           1       0.54      0.52      0.53        25

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.72      0.72      0.72        25
           1       0.70      0.70      0.70        23

    accuracy                           0.71        48
   macro avg       0.71      0.71      0.71        48
weighted avg       0.71      0.71      0.71        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.44      0.32      0.37        22
           1       0.53      0.65      0.59        26

    accuracy                           0.50        48
   macro avg       0.48      0.49      0.48        48
weighted avg       0.49      0.50      0.49        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.48      0.55      0.51        20
           1       0.64      0.57      0.60        28

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.56      0.57        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.48      0.67      0.56        21
           1       0.63      0.44      0.52        27

    accuracy                           0.54        48
   macro avg       0.56      0.56      0.54        48
weighted avg       0.57      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.1)
              precision    recall  f1-score   support

           0       0.54      0.57      0.55        23
           1       0.58      0.56      0.57        25

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.60      0.45      0.51        20
           1       0.67      0.79      0.72        28

    accuracy                           0.65        48
   macro avg       0.63      0.62      0.62        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.47      0.50        19
           1       0.68      0.72      0.70        29

    accuracy                           0.62        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.41      0.58      0.48        19
           1       0.62      0.45      0.52        29

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.54      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.54      0.60      0.57        25
           1       0.50      0.43      0.47        23

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.65      0.44      0.52        25
           1       0.55      0.74      0.63        23

    accuracy                           0.58        48
   macro avg       0.60      0.59      0.58        48
weighted avg       0.60      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.53      0.51        17
           1       0.73      0.71      0.72        31

    accuracy                           0.65        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.47      0.43      0.45        21
           1       0.59      0.63      0.61        27

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.45      0.54        22
           1       0.64      0.81      0.71        26

    accuracy                           0.65        48
   macro avg       0.65      0.63      0.63        48
weighted avg       0.65      0.65      0.63        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.50      0.30      0.37        20
           1       0.61      0.79      0.69        28

    accuracy                           0.58        48
   macro avg       0.56      0.54      0.53        48
weighted avg       0.56      0.58      0.56        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.38      0.44      0.41        18
           1       0.63      0.57      0.60        30

    accuracy                           0.52        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.54      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.63      0.50      0.56        24
           1       0.59      0.71      0.64        24

    accuracy                           0.60        48
   macro avg       0.61      0.60      0.60        48
weighted avg       0.61      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.01)
              precision    recall  f1-score   support

           0       0.56      0.39      0.46        23
           1       0.56      0.72      0.63        25

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.55        48
weighted avg       0.56      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.67      0.75      0.71        24
           1       0.71      0.62      0.67        24

    accuracy                           0.69        48
   macro avg       0.69      0.69      0.69        48
weighted avg       0.69      0.69      0.69        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.39      0.45        23
           1       0.55      0.68      0.61        25

    accuracy                           0.54        48
   macro avg       0.54      0.54      0.53        48
weighted avg       0.54      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.29      0.24      0.26        21
           1       0.48      0.56      0.52        27

    accuracy                           0.42        48
   macro avg       0.39      0.40      0.39        48
weighted avg       0.40      0.42      0.41        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.52      0.70      0.59        23
           1       0.59      0.40      0.48        25

    accuracy                           0.54        48
   macro avg       0.55      0.55      0.53        48
weighted avg       0.55      0.54      0.53        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.50      0.47      0.49        19
           1       0.67      0.69      0.68        29

    accuracy                           0.60        48
   macro avg       0.58      0.58      0.58        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.52      0.74      0.61        19
           1       0.76      0.55      0.64        29

    accuracy                           0.62        48
   macro avg       0.64      0.64      0.62        48
weighted avg       0.67      0.62      0.63        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.36      0.44        25
           1       0.50      0.70      0.58        23

    accuracy                           0.52        48
   macro avg       0.53      0.53      0.51        48
weighted avg       0.53      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.46      0.87      0.60        15
           1       0.90      0.55      0.68        33

    accuracy                           0.65        48
   macro avg       0.68      0.71      0.64        48
weighted avg       0.76      0.65      0.66        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.62      0.57      0.59        23
           1       0.63      0.68      0.65        25

    accuracy                           0.62        48
   macro avg       0.62      0.62      0.62        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.53      0.36      0.43        22
           1       0.58      0.73      0.64        26

    accuracy                           0.56        48
   macro avg       0.55      0.55      0.54        48
weighted avg       0.56      0.56      0.55        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.36      0.25      0.30        16
           1       0.68      0.78      0.72        32

    accuracy                           0.60        48
   macro avg       0.52      0.52      0.51        48
weighted avg       0.57      0.60      0.58        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.71      0.60      0.65        25
           1       0.63      0.74      0.68        23

    accuracy                           0.67        48
   macro avg       0.67      0.67      0.67        48
weighted avg       0.67      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 0.1, 'gamma': 1, 'kernel': 'poly'}
best estimator = SVC(C=0.1, gamma=1, kernel='poly')
              precision    recall  f1-score   support

           0       0.39      0.32      0.35        22
           1       0.50      0.58      0.54        26

    accuracy                           0.46        48
   macro avg       0.44      0.45      0.44        48
weighted avg       0.45      0.46      0.45        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.38      0.40      0.39        20
           1       0.56      0.54      0.55        28

    accuracy                           0.48        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.48      0.48      0.48        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.56      0.45      0.50        20
           1       0.66      0.75      0.70        28

    accuracy                           0.62        48
   macro avg       0.61      0.60      0.60        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 0.1, 'gamma': 0.1, 'kernel': 'sigmoid'}
best estimator = SVC(C=0.1, gamma=0.1, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.21      0.32        28
           1       0.44      0.85      0.58        20

    accuracy                           0.48        48
   macro avg       0.55      0.53      0.45        48
weighted avg       0.57      0.48      0.43        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.58      0.52      0.55        21
           1       0.66      0.70      0.68        27

    accuracy                           0.62        48
   macro avg       0.62      0.61      0.61        48
weighted avg       0.62      0.62      0.62        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.56      0.58      0.57        24
           1       0.57      0.54      0.55        24

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.92      0.41      0.57        29
           1       0.51      0.95      0.67        19

    accuracy                           0.62        48
   macro avg       0.72      0.68      0.62        48
weighted avg       0.76      0.62      0.61        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.50      0.40      0.44        20
           1       0.62      0.71      0.67        28

    accuracy                           0.58        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.57      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.50      0.35      0.41        20
           1       0.62      0.75      0.68        28

    accuracy                           0.58        48
   macro avg       0.56      0.55      0.54        48
weighted avg       0.57      0.58      0.57        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.33      0.33      0.33        18
           1       0.60      0.60      0.60        30

    accuracy                           0.50        48
   macro avg       0.47      0.47      0.47        48
weighted avg       0.50      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.41      0.50      0.45        18
           1       0.65      0.57      0.61        30

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.56      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.67      0.41      0.51        29
           1       0.43      0.68      0.53        19

    accuracy                           0.52        48
   macro avg       0.55      0.55      0.52        48
weighted avg       0.57      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.50      0.51        20
           1       0.66      0.68      0.67        28

    accuracy                           0.60        48
   macro avg       0.59      0.59      0.59        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.64      0.70      0.67        23
           1       0.70      0.64      0.67        25

    accuracy                           0.67        48
   macro avg       0.67      0.67      0.67        48
weighted avg       0.67      0.67      0.67        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.56      0.54        18
           1       0.72      0.70      0.71        30

    accuracy                           0.65        48
   macro avg       0.63      0.63      0.63        48
weighted avg       0.65      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.01)
              precision    recall  f1-score   support

           0       0.42      0.47      0.44        17
           1       0.69      0.65      0.67        31

    accuracy                           0.58        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.59      0.58      0.59        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.52      0.67      0.58        24
           1       0.53      0.38      0.44        24

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.51        48
weighted avg       0.52      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.45      0.48      0.47        21
           1       0.58      0.56      0.57        27

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.52      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.0001)
              precision    recall  f1-score   support

           0       0.61      0.57      0.59        30
           1       0.35      0.39      0.37        18

    accuracy                           0.50        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.42      0.53      0.47        19
           1       0.62      0.52      0.57        29

    accuracy                           0.52        48
   macro avg       0.52      0.52      0.52        48
weighted avg       0.54      0.52      0.53        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}
best estimator = SVC(C=1, gamma=0.1, kernel='poly')
              precision    recall  f1-score   support

           0       0.54      0.57      0.55        23
           1       0.58      0.56      0.57        25

    accuracy                           0.56        48
   macro avg       0.56      0.56      0.56        48
weighted avg       0.56      0.56      0.56        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.47      0.43      0.45        21
           1       0.59      0.63      0.61        27

    accuracy                           0.54        48
   macro avg       0.53      0.53      0.53        48
weighted avg       0.54      0.54      0.54        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=1000, gamma=0.001)
              precision    recall  f1-score   support

           0       0.35      0.75      0.47        12
           1       0.86      0.53      0.66        36

    accuracy                           0.58        48
   macro avg       0.60      0.64      0.56        48
weighted avg       0.73      0.58      0.61        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.32      0.40      0.35        15
           1       0.69      0.61      0.65        33

    accuracy                           0.54        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.57      0.54      0.55        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}
best estimator = SVC(C=10, gamma=0.01, kernel='poly')
              precision    recall  f1-score   support

           0       0.50      0.32      0.39        25
           1       0.47      0.65      0.55        23

    accuracy                           0.48        48
   macro avg       0.48      0.49      0.47        48
weighted avg       0.49      0.48      0.46        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=100, gamma=0.001)
              precision    recall  f1-score   support

           0       0.60      0.52      0.56        23
           1       0.61      0.68      0.64        25

    accuracy                           0.60        48
   macro avg       0.60      0.60      0.60        48
weighted avg       0.60      0.60      0.60        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1000, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.40      0.42      0.41        19
           1       0.61      0.59      0.60        29

    accuracy                           0.52        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.53      0.52      0.52        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.1)
              precision    recall  f1-score   support

           0       0.27      0.19      0.22        16
           1       0.65      0.75      0.70        32

    accuracy                           0.56        48
   macro avg       0.46      0.47      0.46        48
weighted avg       0.52      0.56      0.54        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.01)
              precision    recall  f1-score   support

           0       0.44      0.52      0.48        21
           1       0.57      0.48      0.52        27

    accuracy                           0.50        48
   macro avg       0.50      0.50      0.50        48
weighted avg       0.51      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.61      0.52      0.56        21
           1       0.67      0.74      0.70        27

    accuracy                           0.65        48
   macro avg       0.64      0.63      0.63        48
weighted avg       0.64      0.65      0.64        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=1)
              precision    recall  f1-score   support

           0       0.27      0.16      0.20        19
           1       0.57      0.72      0.64        29

    accuracy                           0.50        48
   macro avg       0.42      0.44      0.42        48
weighted avg       0.45      0.50      0.46        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.44      0.33      0.38        21
           1       0.56      0.67      0.61        27

    accuracy                           0.52        48
   macro avg       0.50      0.50      0.49        48
weighted avg       0.51      0.52      0.51        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 1000, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1000, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.55      0.63      0.59        19
           1       0.73      0.66      0.69        29

    accuracy                           0.65        48
   macro avg       0.64      0.64      0.64        48
weighted avg       0.66      0.65      0.65        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
best estimator = SVC(C=1, gamma=0.01)
              precision    recall  f1-score   support

           0       0.29      0.35      0.32        17
           1       0.59      0.52      0.55        31

    accuracy                           0.46        48
   macro avg       0.44      0.43      0.43        48
weighted avg       0.48      0.46      0.47        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.42      0.55      0.48        20
           1       0.59      0.46      0.52        28

    accuracy                           0.50        48
   macro avg       0.51      0.51      0.50        48
weighted avg       0.52      0.50      0.50        48

USING THE: <class 'sklearn.preprocessing._data.MinMaxScaler'>
params = {'C': 100, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=100, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.39      0.41      0.40        22
           1       0.48      0.46      0.47        26

    accuracy                           0.44        48
   macro avg       0.44      0.44      0.44        48
weighted avg       0.44      0.44      0.44        48

USING THE: <class 'sklearn.preprocessing._data.RobustScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.001, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.60      0.12      0.19        26
           1       0.47      0.91      0.62        22

    accuracy                           0.48        48
   macro avg       0.53      0.51      0.40        48
weighted avg       0.54      0.48      0.39        48

USING THE: <class 'sklearn.preprocessing._data.QuantileTransformer'>
params = {'C': 10, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=10, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.26      0.24      0.25        21
           1       0.45      0.48      0.46        27

    accuracy                           0.38        48
   macro avg       0.36      0.36      0.36        48
weighted avg       0.37      0.38      0.37        48

USING THE: <class 'sklearn.preprocessing._data.PowerTransformer'>
params = {'C': 1, 'gamma': 0.01, 'kernel': 'sigmoid'}
best estimator = SVC(C=1, gamma=0.01, kernel='sigmoid')
              precision    recall  f1-score   support

           0       0.53      0.38      0.44        26
           1       0.45      0.59      0.51        22

    accuracy                           0.48        48
   macro avg       0.49      0.49      0.48        48
weighted avg       0.49      0.48      0.47        48

USING THE: <class 'sklearn.preprocessing._data.StandardScaler'>
params = {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
best estimator = SVC(C=10, gamma=0.001)
              precision    recall  f1-score   support

           0       0.45      0.43      0.44        23
           1       0.50      0.52      0.51        25

    accuracy                           0.48        48
   macro avg       0.48      0.48      0.48        48
weighted avg       0.48      0.48      0.48        48

